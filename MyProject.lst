;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 01.04.2017. 23.55.12
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x12310000  	4657
0x0008	0x12650000  	4709
0x000C	0x12650000  	4709
0x0010	0x12650000  	4709
0x0014	0x12650000  	4709
0x0018	0x12650000  	4709
0x001C	0x12650000  	4709
0x0020	0x12650000  	4709
0x0024	0x12650000  	4709
0x0028	0x12650000  	4709
0x002C	0x12650000  	4709
0x0030	0x12650000  	4709
0x0034	0x12650000  	4709
0x0038	0x12650000  	4709
0x003C	0x12650000  	4709
0x0040	0x12650000  	4709
0x0044	0x12650000  	4709
0x0048	0x12650000  	4709
0x004C	0x12650000  	4709
0x0050	0x12650000  	4709
0x0054	0x12650000  	4709
0x0058	0x17190000  	5913
0x005C	0x12650000  	4709
0x0060	0x12650000  	4709
0x0064	0x12650000  	4709
0x0068	0x12650000  	4709
0x006C	0x12650000  	4709
0x0070	0x12650000  	4709
0x0074	0x12650000  	4709
0x0078	0x12650000  	4709
0x007C	0x12650000  	4709
0x0080	0x12650000  	4709
0x0084	0x12650000  	4709
0x0088	0x12650000  	4709
0x008C	0x12650000  	4709
0x0090	0x12650000  	4709
0x0094	0x12650000  	4709
0x0098	0x12650000  	4709
0x009C	0x12650000  	4709
0x00A0	0x12650000  	4709
0x00A4	0x12650000  	4709
0x00A8	0x12650000  	4709
0x00AC	0x12650000  	4709
0x00B0	0x13790000  	4985
0x00B4	0x12650000  	4709
0x00B8	0x12650000  	4709
0x00BC	0x12650000  	4709
0x00C0	0x12650000  	4709
0x00C4	0x12650000  	4709
0x00C8	0x12650000  	4709
0x00CC	0x12650000  	4709
0x00D0	0x12650000  	4709
0x00D4	0x12650000  	4709
0x00D8	0x12650000  	4709
0x00DC	0x12650000  	4709
0x00E0	0x12710000  	4721
0x00E4	0x12650000  	4709
0x00E8	0x12650000  	4709
0x00EC	0x12650000  	4709
0x00F0	0x12650000  	4709
0x00F4	0x12650000  	4709
0x00F8	0x12650000  	4709
0x00FC	0x12650000  	4709
0x0100	0x12650000  	4709
0x0104	0x12650000  	4709
0x0108	0x12650000  	4709
0x010C	0x12650000  	4709
0x0110	0x182D0000  	6189
0x0114	0x12650000  	4709
0x0118	0x12650000  	4709
0x011C	0x12650000  	4709
0x0120	0x12650000  	4709
0x0124	0x12650000  	4709
0x0128	0x12650000  	4709
0x012C	0x12650000  	4709
0x0130	0x12650000  	4709
0x0134	0x12650000  	4709
0x0138	0x12650000  	4709
0x013C	0x12650000  	4709
0x0140	0x12650000  	4709
0x0144	0x12650000  	4709
0x0148	0x12650000  	4709
0x014C	0x12650000  	4709
0x0150	0x12650000  	4709
0x0154	0x12650000  	4709
0x0158	0x12650000  	4709
0x015C	0x12650000  	4709
0x0160	0x12650000  	4709
0x0164	0x12650000  	4709
0x0168	0x12650000  	4709
0x016C	0x12650000  	4709
0x0170	0x12650000  	4709
0x0174	0x12650000  	4709
0x0178	0x12650000  	4709
0x017C	0x12650000  	4709
0x0180	0x12650000  	4709
0x0184	0x12650000  	4709
; end of ____SysVT
_main:
;main.c, 87 :: 		void main(){
0x1230	0xF000F8C2  BL	5048
0x1234	0xF000FAE4  BL	6144
0x1238	0xF000FCB8  BL	7084
0x123C	0xF000F88A  BL	4948
0x1240	0xF000FC58  BL	6900
;main.c, 88 :: 		init_all();                           // Initalize LCD, LEDs, Buttons, UART, Timer...
0x1244	0xF7FFFFB0  BL	_init_all+0
;main.c, 89 :: 		Delay_ms(100);                        // Delay for stabilization initialization
0x1248	0xF24467A9  MOVW	R7, #18089
0x124C	0xF2C00710  MOVT	R7, #16
L_main6:
0x1250	0x1E7F    SUBS	R7, R7, #1
0x1252	0xD1FD    BNE	L_main6
0x1254	0xBF00    NOP
0x1256	0xBF00    NOP
0x1258	0xBF00    NOP
0x125A	0xBF00    NOP
;main.c, 91 :: 		doSomething();                        // Infinity loop (dummy loop)
0x125C	0xF7FFFEC0  BL	_doSomething+0
;main.c, 93 :: 		}
L_end_main:
L__main_end_loop:
0x1260	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_4XX.c, 43 :: 		
0x1218	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 45 :: 		
L_loopDW:
;__Lib_System_4XX.c, 46 :: 		
0x121A	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 47 :: 		
0x121E	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 48 :: 		
0x1222	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 49 :: 		
0x1226	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 51 :: 		
L_end___CC2DW:
0x1228	0xB001    ADD	SP, SP, #4
0x122A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_4XX.c, 85 :: 		
0x11DC	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 87 :: 		
0x11DE	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 88 :: 		
0x11E2	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 89 :: 		
0x11E6	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 90 :: 		
0x11EA	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 91 :: 		
0x11EC	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 92 :: 		
0x11F0	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 93 :: 		
0x11F2	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 94 :: 		
0x11F4	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 95 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 96 :: 		
0x11F6	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 97 :: 		
0x11FA	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 98 :: 		
0x11FE	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 99 :: 		
0x1200	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 100 :: 		
0x1204	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 101 :: 		
0x1206	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 102 :: 		
0x1208	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 103 :: 		
0x120C	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 104 :: 		
0x1210	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 105 :: 		
L_norep:
;__Lib_System_4XX.c, 107 :: 		
L_end___FillZeros:
0x1212	0xB001    ADD	SP, SP, #4
0x1214	0x4770    BX	LR
; end of ___FillZeros
_init_all:
;main.c, 55 :: 		void init_all(){
0x11A8	0xB081    SUB	SP, SP, #4
0x11AA	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 61 :: 		RCC_APB2ENR |= (1 << 14);             //  System configuration controller clock enable
0x11AE	0x480A    LDR	R0, [PC, #40]
0x11B0	0x6800    LDR	R0, [R0, #0]
0x11B2	0xF4404180  ORR	R1, R0, #16384
0x11B6	0x4808    LDR	R0, [PC, #32]
0x11B8	0x6001    STR	R1, [R0, #0]
;main.c, 62 :: 		init_Lcd();
0x11BA	0xF7FFFDD9  BL	_init_Lcd+0
;main.c, 64 :: 		init_Timer2();
0x11BE	0xF7FFFE63  BL	_init_Timer2+0
;main.c, 65 :: 		init_Buttons();
0x11C2	0xF7FFFEAB  BL	_init_Buttons+0
;main.c, 66 :: 		init_LEDs();
0x11C6	0xF7FFFD53  BL	_init_LEDs+0
;main.c, 68 :: 		init_UART();
0x11CA	0xF7FFFD93  BL	_init_UART+0
;main.c, 69 :: 		}
L_end_init_all:
0x11CE	0xF8DDE000  LDR	LR, [SP, #0]
0x11D2	0xB001    ADD	SP, SP, #4
0x11D4	0x4770    BX	LR
0x11D6	0xBF00    NOP
0x11D8	0x38444002  	RCC_APB2ENR+0
; end of _init_all
_init_Lcd:
;lcd.c, 161 :: 		void init_Lcd(){
0x0D70	0xB081    SUB	SP, SP, #4
0x0D72	0xF8CDE000  STR	LR, [SP, #0]
;lcd.c, 163 :: 		lcd_gpio_init();
0x0D76	0xF7FFFD9D  BL	_lcd_gpio_init+0
;lcd.c, 164 :: 		Delay_ms(20);
0x0D7A	0xF2441753  MOVW	R7, #16723
0x0D7E	0xF2C00703  MOVT	R7, #3
L_init_Lcd20:
0x0D82	0x1E7F    SUBS	R7, R7, #1
0x0D84	0xD1FD    BNE	L_init_Lcd20
0x0D86	0xBF00    NOP
0x0D88	0xBF00    NOP
0x0D8A	0xBF00    NOP
0x0D8C	0xBF00    NOP
0x0D8E	0xBF00    NOP
0x0D90	0xBF00    NOP
;lcd.c, 166 :: 		lcd_Control_Write(0x33);
0x0D92	0x2033    MOVS	R0, #51
0x0D94	0xF000F8B4  BL	_lcd_Control_Write+0
;lcd.c, 167 :: 		Delay_ms(20);
0x0D98	0xF2441753  MOVW	R7, #16723
0x0D9C	0xF2C00703  MOVT	R7, #3
L_init_Lcd22:
0x0DA0	0x1E7F    SUBS	R7, R7, #1
0x0DA2	0xD1FD    BNE	L_init_Lcd22
0x0DA4	0xBF00    NOP
0x0DA6	0xBF00    NOP
0x0DA8	0xBF00    NOP
0x0DAA	0xBF00    NOP
0x0DAC	0xBF00    NOP
0x0DAE	0xBF00    NOP
;lcd.c, 168 :: 		lcd_Control_Write(0x32);
0x0DB0	0x2032    MOVS	R0, #50
0x0DB2	0xF000F8A5  BL	_lcd_Control_Write+0
;lcd.c, 170 :: 		Delay_us(20);
0x0DB6	0xF24007D3  MOVW	R7, #211
0x0DBA	0xF2C00700  MOVT	R7, #0
0x0DBE	0xBF00    NOP
0x0DC0	0xBF00    NOP
L_init_Lcd24:
0x0DC2	0x1E7F    SUBS	R7, R7, #1
0x0DC4	0xD1FD    BNE	L_init_Lcd24
0x0DC6	0xBF00    NOP
0x0DC8	0xBF00    NOP
0x0DCA	0xBF00    NOP
0x0DCC	0xBF00    NOP
;lcd.c, 172 :: 		lcd_Control_Write(LCD_DISP_INIT);     // 0x28  Start to set LCD function
0x0DCE	0x2028    MOVS	R0, #40
0x0DD0	0xF000F896  BL	_lcd_Control_Write+0
;lcd.c, 173 :: 		Delay_us(20);
0x0DD4	0xF24007D3  MOVW	R7, #211
0x0DD8	0xF2C00700  MOVT	R7, #0
0x0DDC	0xBF00    NOP
0x0DDE	0xBF00    NOP
L_init_Lcd26:
0x0DE0	0x1E7F    SUBS	R7, R7, #1
0x0DE2	0xD1FD    BNE	L_init_Lcd26
0x0DE4	0xBF00    NOP
0x0DE6	0xBF00    NOP
0x0DE8	0xBF00    NOP
0x0DEA	0xBF00    NOP
;lcd.c, 175 :: 		lcd_Control_Write(LCD_DISP_OFF);
0x0DEC	0x2008    MOVS	R0, #8
0x0DEE	0xF000F887  BL	_lcd_Control_Write+0
;lcd.c, 176 :: 		Delay_us(20);
0x0DF2	0xF24007D3  MOVW	R7, #211
0x0DF6	0xF2C00700  MOVT	R7, #0
L_init_Lcd28:
0x0DFA	0x1E7F    SUBS	R7, R7, #1
0x0DFC	0xD1FD    BNE	L_init_Lcd28
0x0DFE	0xBF00    NOP
0x0E00	0xBF00    NOP
0x0E02	0xBF00    NOP
0x0E04	0xBF00    NOP
0x0E06	0xBF00    NOP
0x0E08	0xBF00    NOP
;lcd.c, 178 :: 		lcd_Control_Write(LCD_CLEAR_DISPLAY); //0x01  clear LCD
0x0E0A	0x2001    MOVS	R0, #1
0x0E0C	0xF000F878  BL	_lcd_Control_Write+0
;lcd.c, 179 :: 		Delay_us(900);
0x0E10	0xF242577E  MOVW	R7, #9598
0x0E14	0xF2C00700  MOVT	R7, #0
L_init_Lcd30:
0x0E18	0x1E7F    SUBS	R7, R7, #1
0x0E1A	0xD1FD    BNE	L_init_Lcd30
0x0E1C	0xBF00    NOP
0x0E1E	0xBF00    NOP
0x0E20	0xBF00    NOP
0x0E22	0xBF00    NOP
0x0E24	0xBF00    NOP
;lcd.c, 181 :: 		lcd_Control_Write(LCD_INC_MODE);      // set entry mode
0x0E26	0x2006    MOVS	R0, #6
0x0E28	0xF000F86A  BL	_lcd_Control_Write+0
;lcd.c, 182 :: 		Delay_us(20);
0x0E2C	0xF24007D3  MOVW	R7, #211
0x0E30	0xF2C00700  MOVT	R7, #0
0x0E34	0xBF00    NOP
0x0E36	0xBF00    NOP
L_init_Lcd32:
0x0E38	0x1E7F    SUBS	R7, R7, #1
0x0E3A	0xD1FD    BNE	L_init_Lcd32
0x0E3C	0xBF00    NOP
0x0E3E	0xBF00    NOP
0x0E40	0xBF00    NOP
0x0E42	0xBF00    NOP
;lcd.c, 184 :: 		lcd_Control_Write(LCD_DISP_ON);       // set display to on
0x0E44	0x200C    MOVS	R0, #12
0x0E46	0xF000F85B  BL	_lcd_Control_Write+0
;lcd.c, 185 :: 		Delay_us(20);
0x0E4A	0xF24007D3  MOVW	R7, #211
0x0E4E	0xF2C00700  MOVT	R7, #0
L_init_Lcd34:
0x0E52	0x1E7F    SUBS	R7, R7, #1
0x0E54	0xD1FD    BNE	L_init_Lcd34
0x0E56	0xBF00    NOP
0x0E58	0xBF00    NOP
0x0E5A	0xBF00    NOP
0x0E5C	0xBF00    NOP
0x0E5E	0xBF00    NOP
0x0E60	0xBF00    NOP
;lcd.c, 187 :: 		lcd_Control_Write(LCD_RETRN_HOME);    // move cursor to home and set data address to 0
0x0E62	0x2002    MOVS	R0, #2
0x0E64	0xF000F84C  BL	_lcd_Control_Write+0
;lcd.c, 188 :: 		Delay_us(20);
0x0E68	0xF24007D3  MOVW	R7, #211
0x0E6C	0xF2C00700  MOVT	R7, #0
L_init_Lcd36:
0x0E70	0x1E7F    SUBS	R7, R7, #1
0x0E72	0xD1FD    BNE	L_init_Lcd36
0x0E74	0xBF00    NOP
0x0E76	0xBF00    NOP
0x0E78	0xBF00    NOP
0x0E7A	0xBF00    NOP
0x0E7C	0xBF00    NOP
0x0E7E	0xBF00    NOP
;lcd.c, 190 :: 		}
L_end_init_Lcd:
0x0E80	0xF8DDE000  LDR	LR, [SP, #0]
0x0E84	0xB001    ADD	SP, SP, #4
0x0E86	0x4770    BX	LR
; end of _init_Lcd
_lcd_gpio_init:
;lcd.c, 25 :: 		void lcd_gpio_init(){
0x08B4	0xB081    SUB	SP, SP, #4
0x08B6	0xF8CDE000  STR	LR, [SP, #0]
;lcd.c, 27 :: 		RCC_AHB1ENR    |= (1UL << 2) ;
0x08BA	0x4850    LDR	R0, [PC, #320]
0x08BC	0x6800    LDR	R0, [R0, #0]
0x08BE	0xF0400104  ORR	R1, R0, #4
0x08C2	0x484E    LDR	R0, [PC, #312]
0x08C4	0x6001    STR	R1, [R0, #0]
;lcd.c, 31 :: 		init_GPIO_Pin(MODER,   LCD_EN_PORT, LCD_EN_PIN  ,OUTPUT);
0x08C6	0xF04F0301  MOV	R3, #1
0x08CA	0x220D    MOVS	R2, #13
0x08CC	0x2102    MOVS	R1, #2
0x08CE	0x2000    MOVS	R0, #0
0x08D0	0xF7FFFCBE  BL	_init_GPIO_Pin+0
;lcd.c, 32 :: 		init_GPIO_Pin(MODER,   LCD_RS_PORT, LCD_RS_PIN  ,OUTPUT);
0x08D4	0xF04F0301  MOV	R3, #1
0x08D8	0x2204    MOVS	R2, #4
0x08DA	0x2102    MOVS	R1, #2
0x08DC	0x2000    MOVS	R0, #0
0x08DE	0xF7FFFCB7  BL	_init_GPIO_Pin+0
;lcd.c, 33 :: 		init_GPIO_Pin(MODER,   LCD_D4_PORT, LCD_D4_PIN  ,OUTPUT);
0x08E2	0xF04F0301  MOV	R3, #1
0x08E6	0x2203    MOVS	R2, #3
0x08E8	0x2102    MOVS	R1, #2
0x08EA	0x2000    MOVS	R0, #0
0x08EC	0xF7FFFCB0  BL	_init_GPIO_Pin+0
;lcd.c, 34 :: 		init_GPIO_Pin(MODER,   LCD_D5_PORT, LCD_D5_PIN  ,OUTPUT);
0x08F0	0xF04F0301  MOV	R3, #1
0x08F4	0x2202    MOVS	R2, #2
0x08F6	0x2102    MOVS	R1, #2
0x08F8	0x2000    MOVS	R0, #0
0x08FA	0xF7FFFCA9  BL	_init_GPIO_Pin+0
;lcd.c, 35 :: 		init_GPIO_Pin(MODER,   LCD_D6_PORT, LCD_D6_PIN  ,OUTPUT);
0x08FE	0xF04F0301  MOV	R3, #1
0x0902	0x2201    MOVS	R2, #1
0x0904	0x2102    MOVS	R1, #2
0x0906	0x2000    MOVS	R0, #0
0x0908	0xF7FFFCA2  BL	_init_GPIO_Pin+0
;lcd.c, 36 :: 		init_GPIO_Pin(MODER,   LCD_D7_PORT, LCD_D7_PIN  ,OUTPUT);
0x090C	0xF04F0301  MOV	R3, #1
0x0910	0x2200    MOVS	R2, #0
0x0912	0x2102    MOVS	R1, #2
0x0914	0x2000    MOVS	R0, #0
0x0916	0xF7FFFC9B  BL	_init_GPIO_Pin+0
;lcd.c, 40 :: 		init_GPIO_Pin(OTYPER,  LCD_EN_PORT, LCD_EN_PIN  ,PUSH_PULL);
0x091A	0x2300    MOVS	R3, #0
0x091C	0x220D    MOVS	R2, #13
0x091E	0x2102    MOVS	R1, #2
0x0920	0x2001    MOVS	R0, #1
0x0922	0xF7FFFC95  BL	_init_GPIO_Pin+0
;lcd.c, 41 :: 		init_GPIO_Pin(OTYPER,  LCD_RS_PORT, LCD_RS_PIN  ,PUSH_PULL);
0x0926	0x2300    MOVS	R3, #0
0x0928	0x2204    MOVS	R2, #4
0x092A	0x2102    MOVS	R1, #2
0x092C	0x2001    MOVS	R0, #1
0x092E	0xF7FFFC8F  BL	_init_GPIO_Pin+0
;lcd.c, 42 :: 		init_GPIO_Pin(OTYPER,  LCD_D4_PORT, LCD_D4_PIN  ,PUSH_PULL);
0x0932	0x2300    MOVS	R3, #0
0x0934	0x2203    MOVS	R2, #3
0x0936	0x2102    MOVS	R1, #2
0x0938	0x2001    MOVS	R0, #1
0x093A	0xF7FFFC89  BL	_init_GPIO_Pin+0
;lcd.c, 43 :: 		init_GPIO_Pin(OTYPER,  LCD_D5_PORT, LCD_D5_PIN  ,PUSH_PULL);
0x093E	0x2300    MOVS	R3, #0
0x0940	0x2202    MOVS	R2, #2
0x0942	0x2102    MOVS	R1, #2
0x0944	0x2001    MOVS	R0, #1
0x0946	0xF7FFFC83  BL	_init_GPIO_Pin+0
;lcd.c, 44 :: 		init_GPIO_Pin(OTYPER,  LCD_D6_PORT, LCD_D6_PIN  ,PUSH_PULL);
0x094A	0x2300    MOVS	R3, #0
0x094C	0x2201    MOVS	R2, #1
0x094E	0x2102    MOVS	R1, #2
0x0950	0x2001    MOVS	R0, #1
0x0952	0xF7FFFC7D  BL	_init_GPIO_Pin+0
;lcd.c, 45 :: 		init_GPIO_Pin(OTYPER,  LCD_D7_PORT, LCD_D7_PIN  ,PUSH_PULL);
0x0956	0x2300    MOVS	R3, #0
0x0958	0x2200    MOVS	R2, #0
0x095A	0x2102    MOVS	R1, #2
0x095C	0x2001    MOVS	R0, #1
0x095E	0xF7FFFC77  BL	_init_GPIO_Pin+0
;lcd.c, 49 :: 		init_GPIO_Pin(OSPEEDR, LCD_EN_PORT, LCD_EN_PIN  ,HIGH);
0x0962	0x2302    MOVS	R3, #2
0x0964	0x220D    MOVS	R2, #13
0x0966	0x2102    MOVS	R1, #2
0x0968	0x2002    MOVS	R0, #2
0x096A	0xF7FFFC71  BL	_init_GPIO_Pin+0
;lcd.c, 50 :: 		init_GPIO_Pin(OSPEEDR, LCD_RS_PORT, LCD_RS_PIN  ,HIGH);
0x096E	0x2302    MOVS	R3, #2
0x0970	0x2204    MOVS	R2, #4
0x0972	0x2102    MOVS	R1, #2
0x0974	0x2002    MOVS	R0, #2
0x0976	0xF7FFFC6B  BL	_init_GPIO_Pin+0
;lcd.c, 51 :: 		init_GPIO_Pin(OSPEEDR, LCD_D4_PORT, LCD_D4_PIN  ,HIGH);
0x097A	0x2302    MOVS	R3, #2
0x097C	0x2203    MOVS	R2, #3
0x097E	0x2102    MOVS	R1, #2
0x0980	0x2002    MOVS	R0, #2
0x0982	0xF7FFFC65  BL	_init_GPIO_Pin+0
;lcd.c, 52 :: 		init_GPIO_Pin(OSPEEDR, LCD_D5_PORT, LCD_D5_PIN  ,HIGH);
0x0986	0x2302    MOVS	R3, #2
0x0988	0x2202    MOVS	R2, #2
0x098A	0x2102    MOVS	R1, #2
0x098C	0x2002    MOVS	R0, #2
0x098E	0xF7FFFC5F  BL	_init_GPIO_Pin+0
;lcd.c, 53 :: 		init_GPIO_Pin(OSPEEDR, LCD_D6_PORT, LCD_D6_PIN  ,HIGH);
0x0992	0x2302    MOVS	R3, #2
0x0994	0x2201    MOVS	R2, #1
0x0996	0x2102    MOVS	R1, #2
0x0998	0x2002    MOVS	R0, #2
0x099A	0xF7FFFC59  BL	_init_GPIO_Pin+0
;lcd.c, 54 :: 		init_GPIO_Pin(OSPEEDR, LCD_D7_PORT, LCD_D7_PIN  ,HIGH);
0x099E	0x2302    MOVS	R3, #2
0x09A0	0x2200    MOVS	R2, #0
0x09A2	0x2102    MOVS	R1, #2
0x09A4	0x2002    MOVS	R0, #2
0x09A6	0xF7FFFC53  BL	_init_GPIO_Pin+0
;lcd.c, 57 :: 		init_GPIO_Pin(PUPDR,   LCD_EN_PORT, LCD_EN_PIN  ,NO_PULL_PUSH);
0x09AA	0x2300    MOVS	R3, #0
0x09AC	0x220D    MOVS	R2, #13
0x09AE	0x2102    MOVS	R1, #2
0x09B0	0x2003    MOVS	R0, #3
0x09B2	0xF7FFFC4D  BL	_init_GPIO_Pin+0
;lcd.c, 58 :: 		init_GPIO_Pin(PUPDR,   LCD_RS_PORT, LCD_RS_PIN  ,NO_PULL_PUSH);
0x09B6	0x2300    MOVS	R3, #0
0x09B8	0x2204    MOVS	R2, #4
0x09BA	0x2102    MOVS	R1, #2
0x09BC	0x2003    MOVS	R0, #3
0x09BE	0xF7FFFC47  BL	_init_GPIO_Pin+0
;lcd.c, 59 :: 		init_GPIO_Pin(PUPDR,   LCD_D4_PORT, LCD_D4_PIN  ,NO_PULL_PUSH);
0x09C2	0x2300    MOVS	R3, #0
0x09C4	0x2203    MOVS	R2, #3
0x09C6	0x2102    MOVS	R1, #2
0x09C8	0x2003    MOVS	R0, #3
0x09CA	0xF7FFFC41  BL	_init_GPIO_Pin+0
;lcd.c, 60 :: 		init_GPIO_Pin(PUPDR,   LCD_D5_PORT, LCD_D5_PIN  ,NO_PULL_PUSH);
0x09CE	0x2300    MOVS	R3, #0
0x09D0	0x2202    MOVS	R2, #2
0x09D2	0x2102    MOVS	R1, #2
0x09D4	0x2003    MOVS	R0, #3
0x09D6	0xF7FFFC3B  BL	_init_GPIO_Pin+0
;lcd.c, 61 :: 		init_GPIO_Pin(PUPDR,   LCD_D6_PORT, LCD_D6_PIN  ,NO_PULL_PUSH);
0x09DA	0x2300    MOVS	R3, #0
0x09DC	0x2201    MOVS	R2, #1
0x09DE	0x2102    MOVS	R1, #2
0x09E0	0x2003    MOVS	R0, #3
0x09E2	0xF7FFFC35  BL	_init_GPIO_Pin+0
;lcd.c, 62 :: 		init_GPIO_Pin(PUPDR,   LCD_D7_PORT, LCD_D7_PIN  ,NO_PULL_PUSH);
0x09E6	0x2300    MOVS	R3, #0
0x09E8	0x2200    MOVS	R2, #0
0x09EA	0x2102    MOVS	R1, #2
0x09EC	0x2003    MOVS	R0, #3
0x09EE	0xF7FFFC2F  BL	_init_GPIO_Pin+0
;lcd.c, 65 :: 		}
L_end_lcd_gpio_init:
0x09F2	0xF8DDE000  LDR	LR, [SP, #0]
0x09F6	0xB001    ADD	SP, SP, #4
0x09F8	0x4770    BX	LR
0x09FA	0xBF00    NOP
0x09FC	0x38304002  	RCC_AHB1ENR+0
; end of _lcd_gpio_init
_init_GPIO_Pin:
;gpio.c, 4 :: 		int init_GPIO_Pin(unsigned long type, unsigned long port, unsigned long no, unsigned long val){
; val start address is: 12 (R3)
; no start address is: 8 (R2)
; port start address is: 4 (R1)
; type start address is: 0 (R0)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
; port end address is: 4 (R1)
; type end address is: 0 (R0)
; type start address is: 0 (R0)
; port start address is: 4 (R1)
; no start address is: 8 (R2)
; val start address is: 12 (R3)
;gpio.c, 5 :: 		if(type != OTYPER) no <<= 1;
0x0250	0x2801    CMP	R0, #1
0x0252	0xD001    BEQ	L__init_GPIO_Pin40
0x0254	0x0052    LSLS	R2, R2, #1
; no end address is: 8 (R2)
0x0256	0xE7FF    B	L_init_GPIO_Pin0
L__init_GPIO_Pin40:
L_init_GPIO_Pin0:
;gpio.c, 7 :: 		switch(type){
; no start address is: 8 (R2)
0x0258	0xE204    B	L_init_GPIO_Pin1
; type end address is: 0 (R0)
;gpio.c, 9 :: 		case MODER:
L_init_GPIO_Pin3:
;gpio.c, 10 :: 		switch(port){
0x025A	0xE06B    B	L_init_GPIO_Pin4
; port end address is: 4 (R1)
;gpio.c, 11 :: 		case PORT_A:
L_init_GPIO_Pin6:
;gpio.c, 12 :: 		GPIOA_MODER   &= ~(3UL << no);
0x025C	0xF04F0403  MOV	R4, #3
0x0260	0x4094    LSLS	R4, R2
0x0262	0x43E5    MVN	R5, R4
0x0264	0x4C8D    LDR	R4, [PC, #564]
0x0266	0x6824    LDR	R4, [R4, #0]
0x0268	0xEA040505  AND	R5, R4, R5, LSL #0
0x026C	0x4C8B    LDR	R4, [PC, #556]
0x026E	0x6025    STR	R5, [R4, #0]
;gpio.c, 13 :: 		GPIOA_MODER   |= (val << no); return 0;
0x0270	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0274	0x4C89    LDR	R4, [PC, #548]
0x0276	0x6824    LDR	R4, [R4, #0]
0x0278	0xEA440505  ORR	R5, R4, R5, LSL #0
0x027C	0x4C87    LDR	R4, [PC, #540]
0x027E	0x6025    STR	R5, [R4, #0]
0x0280	0x2000    MOVS	R0, #0
0x0282	0xB200    SXTH	R0, R0
0x0284	0xE1FB    B	L_end_init_GPIO_Pin
;gpio.c, 14 :: 		case PORT_B:
L_init_GPIO_Pin7:
;gpio.c, 15 :: 		GPIOB_MODER   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0286	0xF04F0403  MOV	R4, #3
0x028A	0x4094    LSLS	R4, R2
0x028C	0x43E5    MVN	R5, R4
0x028E	0x4C84    LDR	R4, [PC, #528]
0x0290	0x6824    LDR	R4, [R4, #0]
0x0292	0xEA040505  AND	R5, R4, R5, LSL #0
0x0296	0x4C82    LDR	R4, [PC, #520]
0x0298	0x6025    STR	R5, [R4, #0]
;gpio.c, 16 :: 		GPIOB_MODER   |= (val << no); return 0;
0x029A	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x029E	0x4C80    LDR	R4, [PC, #512]
0x02A0	0x6824    LDR	R4, [R4, #0]
0x02A2	0xEA440505  ORR	R5, R4, R5, LSL #0
0x02A6	0x4C7E    LDR	R4, [PC, #504]
0x02A8	0x6025    STR	R5, [R4, #0]
0x02AA	0x2000    MOVS	R0, #0
0x02AC	0xB200    SXTH	R0, R0
0x02AE	0xE1E6    B	L_end_init_GPIO_Pin
;gpio.c, 17 :: 		case PORT_C:
L_init_GPIO_Pin8:
;gpio.c, 18 :: 		GPIOC_MODER   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x02B0	0xF04F0403  MOV	R4, #3
0x02B4	0x4094    LSLS	R4, R2
0x02B6	0x43E5    MVN	R5, R4
0x02B8	0x4C7A    LDR	R4, [PC, #488]
0x02BA	0x6824    LDR	R4, [R4, #0]
0x02BC	0xEA040505  AND	R5, R4, R5, LSL #0
0x02C0	0x4C78    LDR	R4, [PC, #480]
0x02C2	0x6025    STR	R5, [R4, #0]
;gpio.c, 19 :: 		GPIOC_MODER   |= (val << no); return 0;
0x02C4	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x02C8	0x4C76    LDR	R4, [PC, #472]
0x02CA	0x6824    LDR	R4, [R4, #0]
0x02CC	0xEA440505  ORR	R5, R4, R5, LSL #0
0x02D0	0x4C74    LDR	R4, [PC, #464]
0x02D2	0x6025    STR	R5, [R4, #0]
0x02D4	0x2000    MOVS	R0, #0
0x02D6	0xB200    SXTH	R0, R0
0x02D8	0xE1D1    B	L_end_init_GPIO_Pin
;gpio.c, 20 :: 		case PORT_D:
L_init_GPIO_Pin9:
;gpio.c, 21 :: 		GPIOD_MODER   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x02DA	0xF04F0403  MOV	R4, #3
0x02DE	0x4094    LSLS	R4, R2
0x02E0	0x43E5    MVN	R5, R4
0x02E2	0x4C71    LDR	R4, [PC, #452]
0x02E4	0x6824    LDR	R4, [R4, #0]
0x02E6	0xEA040505  AND	R5, R4, R5, LSL #0
0x02EA	0x4C6F    LDR	R4, [PC, #444]
0x02EC	0x6025    STR	R5, [R4, #0]
;gpio.c, 22 :: 		GPIOD_MODER   |=  (val << no); return 0;
0x02EE	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x02F2	0x4C6D    LDR	R4, [PC, #436]
0x02F4	0x6824    LDR	R4, [R4, #0]
0x02F6	0xEA440505  ORR	R5, R4, R5, LSL #0
0x02FA	0x4C6B    LDR	R4, [PC, #428]
0x02FC	0x6025    STR	R5, [R4, #0]
0x02FE	0x2000    MOVS	R0, #0
0x0300	0xB200    SXTH	R0, R0
0x0302	0xE1BC    B	L_end_init_GPIO_Pin
;gpio.c, 23 :: 		case PORT_E:
L_init_GPIO_Pin10:
;gpio.c, 24 :: 		GPIOE_MODER    &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0304	0xF04F0403  MOV	R4, #3
0x0308	0x4094    LSLS	R4, R2
0x030A	0x43E5    MVN	R5, R4
0x030C	0x4C67    LDR	R4, [PC, #412]
0x030E	0x6824    LDR	R4, [R4, #0]
0x0310	0xEA040505  AND	R5, R4, R5, LSL #0
0x0314	0x4C65    LDR	R4, [PC, #404]
0x0316	0x6025    STR	R5, [R4, #0]
;gpio.c, 25 :: 		GPIOE_MODER    |=  (val << no); return 0;
0x0318	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x031C	0x4C63    LDR	R4, [PC, #396]
0x031E	0x6824    LDR	R4, [R4, #0]
0x0320	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0324	0x4C61    LDR	R4, [PC, #388]
0x0326	0x6025    STR	R5, [R4, #0]
0x0328	0x2000    MOVS	R0, #0
0x032A	0xB200    SXTH	R0, R0
0x032C	0xE1A7    B	L_end_init_GPIO_Pin
;gpio.c, 26 :: 		default:
L_init_GPIO_Pin11:
;gpio.c, 27 :: 		return 1;
0x032E	0x2001    MOVS	R0, #1
0x0330	0xB200    SXTH	R0, R0
0x0332	0xE1A4    B	L_end_init_GPIO_Pin
;gpio.c, 28 :: 		}
L_init_GPIO_Pin4:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x0334	0x2900    CMP	R1, #0
0x0336	0xF43FAF91  BEQ	L_init_GPIO_Pin6
0x033A	0x2901    CMP	R1, #1
0x033C	0xF43FAFA3  BEQ	L_init_GPIO_Pin7
0x0340	0x2902    CMP	R1, #2
0x0342	0xD0B5    BEQ	L_init_GPIO_Pin8
0x0344	0x2903    CMP	R1, #3
0x0346	0xD0C8    BEQ	L_init_GPIO_Pin9
0x0348	0x2904    CMP	R1, #4
0x034A	0xD0DB    BEQ	L_init_GPIO_Pin10
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x034C	0xE7EF    B	L_init_GPIO_Pin11
;gpio.c, 29 :: 		case OTYPER:
L_init_GPIO_Pin12:
;gpio.c, 30 :: 		switch(port){
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x034E	0xE06B    B	L_init_GPIO_Pin13
; port end address is: 4 (R1)
;gpio.c, 31 :: 		case PORT_A:
L_init_GPIO_Pin15:
;gpio.c, 32 :: 		GPIOA_OTYPER   &= ~(1UL << no);
0x0350	0xF04F0401  MOV	R4, #1
0x0354	0x4094    LSLS	R4, R2
0x0356	0x43E5    MVN	R5, R4
0x0358	0x4C55    LDR	R4, [PC, #340]
0x035A	0x6824    LDR	R4, [R4, #0]
0x035C	0xEA040505  AND	R5, R4, R5, LSL #0
0x0360	0x4C53    LDR	R4, [PC, #332]
0x0362	0x6025    STR	R5, [R4, #0]
;gpio.c, 33 :: 		GPIOA_OTYPER   |= (val << no); return 0;
0x0364	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0368	0x4C51    LDR	R4, [PC, #324]
0x036A	0x6824    LDR	R4, [R4, #0]
0x036C	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0370	0x4C4F    LDR	R4, [PC, #316]
0x0372	0x6025    STR	R5, [R4, #0]
0x0374	0x2000    MOVS	R0, #0
0x0376	0xB200    SXTH	R0, R0
0x0378	0xE181    B	L_end_init_GPIO_Pin
;gpio.c, 34 :: 		case PORT_B:
L_init_GPIO_Pin16:
;gpio.c, 35 :: 		GPIOB_OTYPER   &= ~(1UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x037A	0xF04F0401  MOV	R4, #1
0x037E	0x4094    LSLS	R4, R2
0x0380	0x43E5    MVN	R5, R4
0x0382	0x4C4C    LDR	R4, [PC, #304]
0x0384	0x6824    LDR	R4, [R4, #0]
0x0386	0xEA040505  AND	R5, R4, R5, LSL #0
0x038A	0x4C4A    LDR	R4, [PC, #296]
0x038C	0x6025    STR	R5, [R4, #0]
;gpio.c, 36 :: 		GPIOB_OTYPER   |= (val << no); return 0;
0x038E	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0392	0x4C48    LDR	R4, [PC, #288]
0x0394	0x6824    LDR	R4, [R4, #0]
0x0396	0xEA440505  ORR	R5, R4, R5, LSL #0
0x039A	0x4C46    LDR	R4, [PC, #280]
0x039C	0x6025    STR	R5, [R4, #0]
0x039E	0x2000    MOVS	R0, #0
0x03A0	0xB200    SXTH	R0, R0
0x03A2	0xE16C    B	L_end_init_GPIO_Pin
;gpio.c, 37 :: 		case PORT_C:
L_init_GPIO_Pin17:
;gpio.c, 38 :: 		GPIOC_OTYPER   &= ~(1UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x03A4	0xF04F0401  MOV	R4, #1
0x03A8	0x4094    LSLS	R4, R2
0x03AA	0x43E5    MVN	R5, R4
0x03AC	0x4C42    LDR	R4, [PC, #264]
0x03AE	0x6824    LDR	R4, [R4, #0]
0x03B0	0xEA040505  AND	R5, R4, R5, LSL #0
0x03B4	0x4C40    LDR	R4, [PC, #256]
0x03B6	0x6025    STR	R5, [R4, #0]
;gpio.c, 39 :: 		GPIOC_OTYPER   |= (val << no); return 0;
0x03B8	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x03BC	0x4C3E    LDR	R4, [PC, #248]
0x03BE	0x6824    LDR	R4, [R4, #0]
0x03C0	0xEA440505  ORR	R5, R4, R5, LSL #0
0x03C4	0x4C3C    LDR	R4, [PC, #240]
0x03C6	0x6025    STR	R5, [R4, #0]
0x03C8	0x2000    MOVS	R0, #0
0x03CA	0xB200    SXTH	R0, R0
0x03CC	0xE157    B	L_end_init_GPIO_Pin
;gpio.c, 40 :: 		case PORT_D:
L_init_GPIO_Pin18:
;gpio.c, 41 :: 		GPIOD_OTYPER   &= ~(1UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x03CE	0xF04F0401  MOV	R4, #1
0x03D2	0x4094    LSLS	R4, R2
0x03D4	0x43E5    MVN	R5, R4
0x03D6	0x4C39    LDR	R4, [PC, #228]
0x03D8	0x6824    LDR	R4, [R4, #0]
0x03DA	0xEA040505  AND	R5, R4, R5, LSL #0
0x03DE	0x4C37    LDR	R4, [PC, #220]
0x03E0	0x6025    STR	R5, [R4, #0]
;gpio.c, 42 :: 		GPIOD_OTYPER   |= (val << no); return 0;
0x03E2	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x03E6	0x4C35    LDR	R4, [PC, #212]
0x03E8	0x6824    LDR	R4, [R4, #0]
0x03EA	0xEA440505  ORR	R5, R4, R5, LSL #0
0x03EE	0x4C33    LDR	R4, [PC, #204]
0x03F0	0x6025    STR	R5, [R4, #0]
0x03F2	0x2000    MOVS	R0, #0
0x03F4	0xB200    SXTH	R0, R0
0x03F6	0xE142    B	L_end_init_GPIO_Pin
;gpio.c, 43 :: 		case PORT_E:
L_init_GPIO_Pin19:
;gpio.c, 44 :: 		GPIOE_OTYPER   &= ~(1UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x03F8	0xF04F0401  MOV	R4, #1
0x03FC	0x4094    LSLS	R4, R2
0x03FE	0x43E5    MVN	R5, R4
0x0400	0x4C2F    LDR	R4, [PC, #188]
0x0402	0x6824    LDR	R4, [R4, #0]
0x0404	0xEA040505  AND	R5, R4, R5, LSL #0
0x0408	0x4C2D    LDR	R4, [PC, #180]
0x040A	0x6025    STR	R5, [R4, #0]
;gpio.c, 45 :: 		GPIOE_OTYPER   |= (val << no); return 0;
0x040C	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0410	0x4C2B    LDR	R4, [PC, #172]
0x0412	0x6824    LDR	R4, [R4, #0]
0x0414	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0418	0x4C29    LDR	R4, [PC, #164]
0x041A	0x6025    STR	R5, [R4, #0]
0x041C	0x2000    MOVS	R0, #0
0x041E	0xB200    SXTH	R0, R0
0x0420	0xE12D    B	L_end_init_GPIO_Pin
;gpio.c, 46 :: 		default:
L_init_GPIO_Pin20:
;gpio.c, 47 :: 		return 2;
0x0422	0x2002    MOVS	R0, #2
0x0424	0xB200    SXTH	R0, R0
0x0426	0xE12A    B	L_end_init_GPIO_Pin
;gpio.c, 48 :: 		}
L_init_GPIO_Pin13:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x0428	0x2900    CMP	R1, #0
0x042A	0xF43FAF91  BEQ	L_init_GPIO_Pin15
0x042E	0x2901    CMP	R1, #1
0x0430	0xF43FAFA3  BEQ	L_init_GPIO_Pin16
0x0434	0x2902    CMP	R1, #2
0x0436	0xD0B5    BEQ	L_init_GPIO_Pin17
0x0438	0x2903    CMP	R1, #3
0x043A	0xD0C8    BEQ	L_init_GPIO_Pin18
0x043C	0x2904    CMP	R1, #4
0x043E	0xD0DB    BEQ	L_init_GPIO_Pin19
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0440	0xE7EF    B	L_init_GPIO_Pin20
;gpio.c, 49 :: 		case OSPEEDR:
L_init_GPIO_Pin21:
;gpio.c, 50 :: 		switch(port){
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x0442	0xE085    B	L_init_GPIO_Pin22
; port end address is: 4 (R1)
;gpio.c, 51 :: 		case PORT_A:
L_init_GPIO_Pin24:
;gpio.c, 52 :: 		GPIOA_OSPEEDR &= ~(3UL << no);
0x0444	0xF04F0403  MOV	R4, #3
0x0448	0x4094    LSLS	R4, R2
0x044A	0x43E5    MVN	R5, R4
0x044C	0x4C1D    LDR	R4, [PC, #116]
0x044E	0x6824    LDR	R4, [R4, #0]
0x0450	0xEA040505  AND	R5, R4, R5, LSL #0
0x0454	0x4C1B    LDR	R4, [PC, #108]
0x0456	0x6025    STR	R5, [R4, #0]
;gpio.c, 53 :: 		GPIOA_OSPEEDR |= (val << no); return 0;
0x0458	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x045C	0x4C19    LDR	R4, [PC, #100]
0x045E	0x6824    LDR	R4, [R4, #0]
0x0460	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0464	0x4C17    LDR	R4, [PC, #92]
0x0466	0x6025    STR	R5, [R4, #0]
0x0468	0x2000    MOVS	R0, #0
0x046A	0xB200    SXTH	R0, R0
0x046C	0xE107    B	L_end_init_GPIO_Pin
;gpio.c, 54 :: 		case PORT_B:
L_init_GPIO_Pin25:
;gpio.c, 55 :: 		GPIOB_OSPEEDR &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x046E	0xF04F0403  MOV	R4, #3
0x0472	0x4094    LSLS	R4, R2
0x0474	0x43E5    MVN	R5, R4
0x0476	0x4C14    LDR	R4, [PC, #80]
0x0478	0x6824    LDR	R4, [R4, #0]
0x047A	0xEA040505  AND	R5, R4, R5, LSL #0
0x047E	0x4C12    LDR	R4, [PC, #72]
0x0480	0x6025    STR	R5, [R4, #0]
;gpio.c, 56 :: 		GPIOB_OSPEEDR |= (val << no); return 0;
0x0482	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0486	0x4C10    LDR	R4, [PC, #64]
0x0488	0x6824    LDR	R4, [R4, #0]
0x048A	0xEA440505  ORR	R5, R4, R5, LSL #0
0x048E	0x4C0E    LDR	R4, [PC, #56]
0x0490	0x6025    STR	R5, [R4, #0]
0x0492	0x2000    MOVS	R0, #0
0x0494	0xB200    SXTH	R0, R0
0x0496	0xE0F2    B	L_end_init_GPIO_Pin
0x0498	0xF000B818  B	#48
0x049C	0x00004002  	GPIOA_MODER+0
0x04A0	0x04004002  	GPIOB_MODER+0
0x04A4	0x08004002  	GPIOC_MODER+0
0x04A8	0x0C004002  	GPIOD_MODER+0
0x04AC	0x10004002  	GPIOE_MODER+0
0x04B0	0x00044002  	GPIOA_OTYPER+0
0x04B4	0x04044002  	GPIOB_OTYPER+0
0x04B8	0x08044002  	GPIOC_OTYPER+0
0x04BC	0x0C044002  	GPIOD_OTYPER+0
0x04C0	0x10044002  	GPIOE_OTYPER+0
0x04C4	0x00084002  	GPIOA_OSPEEDR+0
0x04C8	0x04084002  	GPIOB_OSPEEDR+0
;gpio.c, 57 :: 		case PORT_C:
L_init_GPIO_Pin26:
;gpio.c, 58 :: 		GPIOC_OSPEEDR &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x04CC	0xF04F0403  MOV	R4, #3
0x04D0	0x4094    LSLS	R4, R2
0x04D2	0x43E5    MVN	R5, R4
0x04D4	0x4C6A    LDR	R4, [PC, #424]
0x04D6	0x6824    LDR	R4, [R4, #0]
0x04D8	0xEA040505  AND	R5, R4, R5, LSL #0
0x04DC	0x4C68    LDR	R4, [PC, #416]
0x04DE	0x6025    STR	R5, [R4, #0]
;gpio.c, 59 :: 		GPIOC_OSPEEDR |= (val << no); return 0;
0x04E0	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x04E4	0x4C66    LDR	R4, [PC, #408]
0x04E6	0x6824    LDR	R4, [R4, #0]
0x04E8	0xEA440505  ORR	R5, R4, R5, LSL #0
0x04EC	0x4C64    LDR	R4, [PC, #400]
0x04EE	0x6025    STR	R5, [R4, #0]
0x04F0	0x2000    MOVS	R0, #0
0x04F2	0xB200    SXTH	R0, R0
0x04F4	0xE0C3    B	L_end_init_GPIO_Pin
;gpio.c, 60 :: 		case PORT_D:
L_init_GPIO_Pin27:
;gpio.c, 61 :: 		GPIOD_OSPEEDR &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x04F6	0xF04F0403  MOV	R4, #3
0x04FA	0x4094    LSLS	R4, R2
0x04FC	0x43E5    MVN	R5, R4
0x04FE	0x4C61    LDR	R4, [PC, #388]
0x0500	0x6824    LDR	R4, [R4, #0]
0x0502	0xEA040505  AND	R5, R4, R5, LSL #0
0x0506	0x4C5F    LDR	R4, [PC, #380]
0x0508	0x6025    STR	R5, [R4, #0]
;gpio.c, 62 :: 		GPIOD_OSPEEDR |= (val << no); return 0;
0x050A	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x050E	0x4C5D    LDR	R4, [PC, #372]
0x0510	0x6824    LDR	R4, [R4, #0]
0x0512	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0516	0x4C5B    LDR	R4, [PC, #364]
0x0518	0x6025    STR	R5, [R4, #0]
0x051A	0x2000    MOVS	R0, #0
0x051C	0xB200    SXTH	R0, R0
0x051E	0xE0AE    B	L_end_init_GPIO_Pin
;gpio.c, 63 :: 		case PORT_E:
L_init_GPIO_Pin28:
;gpio.c, 64 :: 		GPIOE_OSPEEDR &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0520	0xF04F0403  MOV	R4, #3
0x0524	0x4094    LSLS	R4, R2
0x0526	0x43E5    MVN	R5, R4
0x0528	0x4C57    LDR	R4, [PC, #348]
0x052A	0x6824    LDR	R4, [R4, #0]
0x052C	0xEA040505  AND	R5, R4, R5, LSL #0
0x0530	0x4C55    LDR	R4, [PC, #340]
0x0532	0x6025    STR	R5, [R4, #0]
;gpio.c, 65 :: 		GPIOE_OSPEEDR |= (val << no); return 0;
0x0534	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0538	0x4C53    LDR	R4, [PC, #332]
0x053A	0x6824    LDR	R4, [R4, #0]
0x053C	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0540	0x4C51    LDR	R4, [PC, #324]
0x0542	0x6025    STR	R5, [R4, #0]
0x0544	0x2000    MOVS	R0, #0
0x0546	0xB200    SXTH	R0, R0
0x0548	0xE099    B	L_end_init_GPIO_Pin
;gpio.c, 66 :: 		default:
L_init_GPIO_Pin29:
;gpio.c, 67 :: 		return 3;
0x054A	0x2003    MOVS	R0, #3
0x054C	0xB200    SXTH	R0, R0
0x054E	0xE096    B	L_end_init_GPIO_Pin
;gpio.c, 68 :: 		}
L_init_GPIO_Pin22:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x0550	0x2900    CMP	R1, #0
0x0552	0xF43FAF77  BEQ	L_init_GPIO_Pin24
0x0556	0x2901    CMP	R1, #1
0x0558	0xF43FAF89  BEQ	L_init_GPIO_Pin25
0x055C	0x2902    CMP	R1, #2
0x055E	0xD0B5    BEQ	L_init_GPIO_Pin26
0x0560	0x2903    CMP	R1, #3
0x0562	0xD0C8    BEQ	L_init_GPIO_Pin27
0x0564	0x2904    CMP	R1, #4
0x0566	0xD0DB    BEQ	L_init_GPIO_Pin28
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0568	0xE7EF    B	L_init_GPIO_Pin29
;gpio.c, 69 :: 		case PUPDR:
L_init_GPIO_Pin30:
;gpio.c, 70 :: 		switch(port){
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x056A	0xE06B    B	L_init_GPIO_Pin31
; port end address is: 4 (R1)
;gpio.c, 71 :: 		case PORT_A:
L_init_GPIO_Pin33:
;gpio.c, 72 :: 		GPIOA_PUPDR   &= ~(3UL << no);
0x056C	0xF04F0403  MOV	R4, #3
0x0570	0x4094    LSLS	R4, R2
0x0572	0x43E5    MVN	R5, R4
0x0574	0x4C45    LDR	R4, [PC, #276]
0x0576	0x6824    LDR	R4, [R4, #0]
0x0578	0xEA040505  AND	R5, R4, R5, LSL #0
0x057C	0x4C43    LDR	R4, [PC, #268]
0x057E	0x6025    STR	R5, [R4, #0]
;gpio.c, 73 :: 		GPIOA_PUPDR   |= (val << no); return 0;
0x0580	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0584	0x4C41    LDR	R4, [PC, #260]
0x0586	0x6824    LDR	R4, [R4, #0]
0x0588	0xEA440505  ORR	R5, R4, R5, LSL #0
0x058C	0x4C3F    LDR	R4, [PC, #252]
0x058E	0x6025    STR	R5, [R4, #0]
0x0590	0x2000    MOVS	R0, #0
0x0592	0xB200    SXTH	R0, R0
0x0594	0xE073    B	L_end_init_GPIO_Pin
;gpio.c, 74 :: 		case PORT_B:
L_init_GPIO_Pin34:
;gpio.c, 75 :: 		GPIOB_PUPDR   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0596	0xF04F0403  MOV	R4, #3
0x059A	0x4094    LSLS	R4, R2
0x059C	0x43E5    MVN	R5, R4
0x059E	0x4C3C    LDR	R4, [PC, #240]
0x05A0	0x6824    LDR	R4, [R4, #0]
0x05A2	0xEA040505  AND	R5, R4, R5, LSL #0
0x05A6	0x4C3A    LDR	R4, [PC, #232]
0x05A8	0x6025    STR	R5, [R4, #0]
;gpio.c, 76 :: 		GPIOB_PUPDR   |= (val << no); return 0;
0x05AA	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x05AE	0x4C38    LDR	R4, [PC, #224]
0x05B0	0x6824    LDR	R4, [R4, #0]
0x05B2	0xEA440505  ORR	R5, R4, R5, LSL #0
0x05B6	0x4C36    LDR	R4, [PC, #216]
0x05B8	0x6025    STR	R5, [R4, #0]
0x05BA	0x2000    MOVS	R0, #0
0x05BC	0xB200    SXTH	R0, R0
0x05BE	0xE05E    B	L_end_init_GPIO_Pin
;gpio.c, 77 :: 		case PORT_C:
L_init_GPIO_Pin35:
;gpio.c, 78 :: 		GPIOC_PUPDR   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x05C0	0xF04F0403  MOV	R4, #3
0x05C4	0x4094    LSLS	R4, R2
0x05C6	0x43E5    MVN	R5, R4
0x05C8	0x4C32    LDR	R4, [PC, #200]
0x05CA	0x6824    LDR	R4, [R4, #0]
0x05CC	0xEA040505  AND	R5, R4, R5, LSL #0
0x05D0	0x4C30    LDR	R4, [PC, #192]
0x05D2	0x6025    STR	R5, [R4, #0]
;gpio.c, 79 :: 		GPIOC_PUPDR   |= (val << no); return 0;
0x05D4	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x05D8	0x4C2E    LDR	R4, [PC, #184]
0x05DA	0x6824    LDR	R4, [R4, #0]
0x05DC	0xEA440505  ORR	R5, R4, R5, LSL #0
0x05E0	0x4C2C    LDR	R4, [PC, #176]
0x05E2	0x6025    STR	R5, [R4, #0]
0x05E4	0x2000    MOVS	R0, #0
0x05E6	0xB200    SXTH	R0, R0
0x05E8	0xE049    B	L_end_init_GPIO_Pin
;gpio.c, 80 :: 		case PORT_D:
L_init_GPIO_Pin36:
;gpio.c, 81 :: 		GPIOD_PUPDR   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x05EA	0xF04F0403  MOV	R4, #3
0x05EE	0x4094    LSLS	R4, R2
0x05F0	0x43E5    MVN	R5, R4
0x05F2	0x4C29    LDR	R4, [PC, #164]
0x05F4	0x6824    LDR	R4, [R4, #0]
0x05F6	0xEA040505  AND	R5, R4, R5, LSL #0
0x05FA	0x4C27    LDR	R4, [PC, #156]
0x05FC	0x6025    STR	R5, [R4, #0]
;gpio.c, 82 :: 		GPIOD_PUPDR   |= (val << no); return 0;
0x05FE	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0602	0x4C25    LDR	R4, [PC, #148]
0x0604	0x6824    LDR	R4, [R4, #0]
0x0606	0xEA440505  ORR	R5, R4, R5, LSL #0
0x060A	0x4C23    LDR	R4, [PC, #140]
0x060C	0x6025    STR	R5, [R4, #0]
0x060E	0x2000    MOVS	R0, #0
0x0610	0xB200    SXTH	R0, R0
0x0612	0xE034    B	L_end_init_GPIO_Pin
;gpio.c, 83 :: 		case PORT_E:
L_init_GPIO_Pin37:
;gpio.c, 84 :: 		GPIOE_PUPDR   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0614	0xF04F0403  MOV	R4, #3
0x0618	0x4094    LSLS	R4, R2
0x061A	0x43E5    MVN	R5, R4
0x061C	0x4C1F    LDR	R4, [PC, #124]
0x061E	0x6824    LDR	R4, [R4, #0]
0x0620	0xEA040505  AND	R5, R4, R5, LSL #0
0x0624	0x4C1D    LDR	R4, [PC, #116]
0x0626	0x6025    STR	R5, [R4, #0]
;gpio.c, 85 :: 		GPIOE_PUPDR   |= (val << no); return 0;
0x0628	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x062C	0x4C1B    LDR	R4, [PC, #108]
0x062E	0x6824    LDR	R4, [R4, #0]
0x0630	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0634	0x4C19    LDR	R4, [PC, #100]
0x0636	0x6025    STR	R5, [R4, #0]
0x0638	0x2000    MOVS	R0, #0
0x063A	0xB200    SXTH	R0, R0
0x063C	0xE01F    B	L_end_init_GPIO_Pin
;gpio.c, 86 :: 		default:
L_init_GPIO_Pin38:
;gpio.c, 87 :: 		return 4;
0x063E	0x2004    MOVS	R0, #4
0x0640	0xB200    SXTH	R0, R0
0x0642	0xE01C    B	L_end_init_GPIO_Pin
;gpio.c, 88 :: 		}
L_init_GPIO_Pin31:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x0644	0x2900    CMP	R1, #0
0x0646	0xF43FAF91  BEQ	L_init_GPIO_Pin33
0x064A	0x2901    CMP	R1, #1
0x064C	0xF43FAFA3  BEQ	L_init_GPIO_Pin34
0x0650	0x2902    CMP	R1, #2
0x0652	0xD0B5    BEQ	L_init_GPIO_Pin35
0x0654	0x2903    CMP	R1, #3
0x0656	0xD0C8    BEQ	L_init_GPIO_Pin36
0x0658	0x2904    CMP	R1, #4
0x065A	0xD0DB    BEQ	L_init_GPIO_Pin37
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x065C	0xE7EF    B	L_init_GPIO_Pin38
;gpio.c, 89 :: 		default:
L_init_GPIO_Pin39:
;gpio.c, 90 :: 		return 5;
0x065E	0x2005    MOVS	R0, #5
0x0660	0xB200    SXTH	R0, R0
0x0662	0xE00C    B	L_end_init_GPIO_Pin
;gpio.c, 91 :: 		}
L_init_GPIO_Pin1:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
; type start address is: 0 (R0)
0x0664	0x2800    CMP	R0, #0
0x0666	0xF43FADF8  BEQ	L_init_GPIO_Pin3
0x066A	0x2801    CMP	R0, #1
0x066C	0xF43FAE6F  BEQ	L_init_GPIO_Pin12
0x0670	0x2802    CMP	R0, #2
0x0672	0xF43FAEE6  BEQ	L_init_GPIO_Pin21
0x0676	0x2803    CMP	R0, #3
0x0678	0xF43FAF77  BEQ	L_init_GPIO_Pin30
; type end address is: 0 (R0)
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x067C	0xE7EF    B	L_init_GPIO_Pin39
;gpio.c, 93 :: 		}
L_end_init_GPIO_Pin:
0x067E	0x4770    BX	LR
0x0680	0x08084002  	GPIOC_OSPEEDR+0
0x0684	0x0C084002  	GPIOD_OSPEEDR+0
0x0688	0x10084002  	GPIOE_OSPEEDR+0
0x068C	0x000C4002  	GPIOA_PUPDR+0
0x0690	0x040C4002  	GPIOB_PUPDR+0
0x0694	0x080C4002  	GPIOC_PUPDR+0
0x0698	0x0C0C4002  	GPIOD_PUPDR+0
0x069C	0x100C4002  	GPIOE_PUPDR+0
; end of _init_GPIO_Pin
_lcd_Control_Write:
;lcd.c, 150 :: 		void lcd_Control_Write(char d){
; d start address is: 0 (R0)
0x0F00	0xB081    SUB	SP, SP, #4
0x0F02	0xF8CDE000  STR	LR, [SP, #0]
0x0F06	0xB2C2    UXTB	R2, R0
; d end address is: 0 (R0)
; d start address is: 8 (R2)
;lcd.c, 151 :: 		clear_lcd_rs();
0x0F08	0xF7FFFD7A  BL	_clear_lcd_rs+0
;lcd.c, 152 :: 		lcd_data_line_write(d);
0x0F0C	0xB2D0    UXTB	R0, R2
; d end address is: 8 (R2)
0x0F0E	0xF7FFFD83  BL	_lcd_data_line_write+0
;lcd.c, 153 :: 		}
L_end_lcd_Control_Write:
0x0F12	0xF8DDE000  LDR	LR, [SP, #0]
0x0F16	0xB001    ADD	SP, SP, #4
0x0F18	0x4770    BX	LR
; end of _lcd_Control_Write
_clear_lcd_rs:
;lcd.c, 11 :: 		void clear_lcd_rs(){ GPIOC_ODR &= ~(1UL << LCD_RS_PIN); }
0x0A00	0x4803    LDR	R0, [PC, #12]
0x0A02	0x6801    LDR	R1, [R0, #0]
0x0A04	0xF06F0010  MVN	R0, #16
0x0A08	0x4001    ANDS	R1, R0
0x0A0A	0x4801    LDR	R0, [PC, #4]
0x0A0C	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_rs:
0x0A0E	0x4770    BX	LR
0x0A10	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_rs
_lcd_data_line_write:
;lcd.c, 121 :: 		void lcd_data_line_write(char d){
; d start address is: 0 (R0)
0x0A18	0xB081    SUB	SP, SP, #4
0x0A1A	0xF8CDE000  STR	LR, [SP, #0]
0x0A1E	0xB2C2    UXTB	R2, R0
; d end address is: 0 (R0)
; d start address is: 8 (R2)
;lcd.c, 123 :: 		set_lcd_en();
0x0A20	0xF7FFFBD0  BL	_set_lcd_en+0
;lcd.c, 124 :: 		if(d&0x80) set_lcd_d7();
0x0A24	0xF0020180  AND	R1, R2, #128
0x0A28	0xB2C9    UXTB	R1, R1
0x0A2A	0xB111    CBZ	R1, L_lcd_data_line_write0
0x0A2C	0xF7FFFBAC  BL	_set_lcd_d7+0
0x0A30	0xE001    B	L_lcd_data_line_write1
L_lcd_data_line_write0:
;lcd.c, 125 :: 		else clear_lcd_d7();
0x0A32	0xF7FFFBB3  BL	_clear_lcd_d7+0
L_lcd_data_line_write1:
;lcd.c, 126 :: 		if(d&0x40) set_lcd_d6();
0x0A36	0xF0020140  AND	R1, R2, #64
0x0A3A	0xB2C9    UXTB	R1, R1
0x0A3C	0xB111    CBZ	R1, L_lcd_data_line_write2
0x0A3E	0xF7FFFBDF  BL	_set_lcd_d6+0
0x0A42	0xE001    B	L_lcd_data_line_write3
L_lcd_data_line_write2:
;lcd.c, 127 :: 		else clear_lcd_d6();
0x0A44	0xF7FFFBE6  BL	_clear_lcd_d6+0
L_lcd_data_line_write3:
;lcd.c, 128 :: 		if(d&0x20) set_lcd_d5();
0x0A48	0xF0020120  AND	R1, R2, #32
0x0A4C	0xB2C9    UXTB	R1, R1
0x0A4E	0xB111    CBZ	R1, L_lcd_data_line_write4
0x0A50	0xF7FFFBC2  BL	_set_lcd_d5+0
0x0A54	0xE001    B	L_lcd_data_line_write5
L_lcd_data_line_write4:
;lcd.c, 129 :: 		else clear_lcd_d5();
0x0A56	0xF7FFFBC9  BL	_clear_lcd_d5+0
L_lcd_data_line_write5:
;lcd.c, 130 :: 		if(d&0x10) set_lcd_d4();
0x0A5A	0xF0020110  AND	R1, R2, #16
0x0A5E	0xB2C9    UXTB	R1, R1
0x0A60	0xB111    CBZ	R1, L_lcd_data_line_write6
0x0A62	0xF7FFFBA5  BL	_set_lcd_d4+0
0x0A66	0xE001    B	L_lcd_data_line_write7
L_lcd_data_line_write6:
;lcd.c, 131 :: 		else clear_lcd_d4();
0x0A68	0xF7FFFBDE  BL	_clear_lcd_d4+0
L_lcd_data_line_write7:
;lcd.c, 132 :: 		clear_lcd_en();
0x0A6C	0xF7FFFE18  BL	_clear_lcd_en+0
;lcd.c, 134 :: 		set_lcd_en();
0x0A70	0xF7FFFBA8  BL	_set_lcd_en+0
;lcd.c, 135 :: 		if(d&0x08) set_lcd_d7();
0x0A74	0xF0020108  AND	R1, R2, #8
0x0A78	0xB2C9    UXTB	R1, R1
0x0A7A	0xB111    CBZ	R1, L_lcd_data_line_write8
0x0A7C	0xF7FFFB84  BL	_set_lcd_d7+0
0x0A80	0xE001    B	L_lcd_data_line_write9
L_lcd_data_line_write8:
;lcd.c, 136 :: 		else clear_lcd_d7();
0x0A82	0xF7FFFB8B  BL	_clear_lcd_d7+0
L_lcd_data_line_write9:
;lcd.c, 137 :: 		if(d&0x04) set_lcd_d6();
0x0A86	0xF0020104  AND	R1, R2, #4
0x0A8A	0xB2C9    UXTB	R1, R1
0x0A8C	0xB111    CBZ	R1, L_lcd_data_line_write10
0x0A8E	0xF7FFFBB7  BL	_set_lcd_d6+0
0x0A92	0xE001    B	L_lcd_data_line_write11
L_lcd_data_line_write10:
;lcd.c, 138 :: 		else clear_lcd_d6();
0x0A94	0xF7FFFBBE  BL	_clear_lcd_d6+0
L_lcd_data_line_write11:
;lcd.c, 139 :: 		if(d&0x02) set_lcd_d5();
0x0A98	0xF0020102  AND	R1, R2, #2
0x0A9C	0xB2C9    UXTB	R1, R1
0x0A9E	0xB111    CBZ	R1, L_lcd_data_line_write12
0x0AA0	0xF7FFFB9A  BL	_set_lcd_d5+0
0x0AA4	0xE001    B	L_lcd_data_line_write13
L_lcd_data_line_write12:
;lcd.c, 140 :: 		else clear_lcd_d5();
0x0AA6	0xF7FFFBA1  BL	_clear_lcd_d5+0
L_lcd_data_line_write13:
;lcd.c, 141 :: 		if(d&0x1) set_lcd_d4();
0x0AAA	0xF0020101  AND	R1, R2, #1
0x0AAE	0xB2C9    UXTB	R1, R1
; d end address is: 8 (R2)
0x0AB0	0xB111    CBZ	R1, L_lcd_data_line_write14
0x0AB2	0xF7FFFB7D  BL	_set_lcd_d4+0
0x0AB6	0xE001    B	L_lcd_data_line_write15
L_lcd_data_line_write14:
;lcd.c, 142 :: 		else clear_lcd_d4();
0x0AB8	0xF7FFFBB6  BL	_clear_lcd_d4+0
L_lcd_data_line_write15:
;lcd.c, 143 :: 		clear_lcd_en();
0x0ABC	0xF7FFFDF0  BL	_clear_lcd_en+0
;lcd.c, 145 :: 		Delay_us(1);
0x0AC0	0xF2400709  MOVW	R7, #9
0x0AC4	0xF2C00700  MOVT	R7, #0
L_lcd_data_line_write16:
0x0AC8	0x1E7F    SUBS	R7, R7, #1
0x0ACA	0xD1FD    BNE	L_lcd_data_line_write16
0x0ACC	0xBF00    NOP
0x0ACE	0xBF00    NOP
0x0AD0	0xBF00    NOP
0x0AD2	0xBF00    NOP
;lcd.c, 148 :: 		}
L_end_lcd_data_line_write:
0x0AD4	0xF8DDE000  LDR	LR, [SP, #0]
0x0AD8	0xB001    ADD	SP, SP, #4
0x0ADA	0x4770    BX	LR
; end of _lcd_data_line_write
_set_lcd_en:
;lcd.c, 7 :: 		void set_lcd_en()  { GPIOC_ODR |=  (1UL << LCD_EN_PIN); }
0x01C4	0x4803    LDR	R0, [PC, #12]
0x01C6	0x6800    LDR	R0, [R0, #0]
0x01C8	0xF4405100  ORR	R1, R0, #8192
0x01CC	0x4801    LDR	R0, [PC, #4]
0x01CE	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_en:
0x01D0	0x4770    BX	LR
0x01D2	0xBF00    NOP
0x01D4	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_en
_set_lcd_d7:
;lcd.c, 22 :: 		void set_lcd_d7()  { GPIOC_ODR |=  (1UL << LCD_D7_PIN); }
0x0188	0x4803    LDR	R0, [PC, #12]
0x018A	0x6800    LDR	R0, [R0, #0]
0x018C	0xF0400101  ORR	R1, R0, #1
0x0190	0x4801    LDR	R0, [PC, #4]
0x0192	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_d7:
0x0194	0x4770    BX	LR
0x0196	0xBF00    NOP
0x0198	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_d7
_clear_lcd_d7:
;lcd.c, 23 :: 		void clear_lcd_d7(){ GPIOC_ODR &= ~(1UL << LCD_D7_PIN); }
0x019C	0x4803    LDR	R0, [PC, #12]
0x019E	0x6801    LDR	R1, [R0, #0]
0x01A0	0xF06F0001  MVN	R0, #1
0x01A4	0x4001    ANDS	R1, R0
0x01A6	0x4801    LDR	R0, [PC, #4]
0x01A8	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_d7:
0x01AA	0x4770    BX	LR
0x01AC	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_d7
_set_lcd_d6:
;lcd.c, 19 :: 		void set_lcd_d6()  { GPIOC_ODR |=  (1UL << LCD_D6_PIN); }
0x0200	0x4803    LDR	R0, [PC, #12]
0x0202	0x6800    LDR	R0, [R0, #0]
0x0204	0xF0400102  ORR	R1, R0, #2
0x0208	0x4801    LDR	R0, [PC, #4]
0x020A	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_d6:
0x020C	0x4770    BX	LR
0x020E	0xBF00    NOP
0x0210	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_d6
_clear_lcd_d6:
;lcd.c, 20 :: 		void clear_lcd_d6(){ GPIOC_ODR &= ~(1UL << LCD_D6_PIN); }
0x0214	0x4803    LDR	R0, [PC, #12]
0x0216	0x6801    LDR	R1, [R0, #0]
0x0218	0xF06F0002  MVN	R0, #2
0x021C	0x4001    ANDS	R1, R0
0x021E	0x4801    LDR	R0, [PC, #4]
0x0220	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_d6:
0x0222	0x4770    BX	LR
0x0224	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_d6
_set_lcd_d5:
;lcd.c, 16 :: 		void set_lcd_d5()  { GPIOC_ODR |=  (1UL << LCD_D5_PIN); }
0x01D8	0x4803    LDR	R0, [PC, #12]
0x01DA	0x6800    LDR	R0, [R0, #0]
0x01DC	0xF0400104  ORR	R1, R0, #4
0x01E0	0x4801    LDR	R0, [PC, #4]
0x01E2	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_d5:
0x01E4	0x4770    BX	LR
0x01E6	0xBF00    NOP
0x01E8	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_d5
_clear_lcd_d5:
;lcd.c, 17 :: 		void clear_lcd_d5(){ GPIOC_ODR &= ~(1UL << LCD_D5_PIN); }
0x01EC	0x4803    LDR	R0, [PC, #12]
0x01EE	0x6801    LDR	R1, [R0, #0]
0x01F0	0xF06F0004  MVN	R0, #4
0x01F4	0x4001    ANDS	R1, R0
0x01F6	0x4801    LDR	R0, [PC, #4]
0x01F8	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_d5:
0x01FA	0x4770    BX	LR
0x01FC	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_d5
_set_lcd_d4:
;lcd.c, 13 :: 		void set_lcd_d4()  { GPIOC_ODR |=  (1UL << LCD_D4_PIN); }
0x01B0	0x4803    LDR	R0, [PC, #12]
0x01B2	0x6800    LDR	R0, [R0, #0]
0x01B4	0xF0400108  ORR	R1, R0, #8
0x01B8	0x4801    LDR	R0, [PC, #4]
0x01BA	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_d4:
0x01BC	0x4770    BX	LR
0x01BE	0xBF00    NOP
0x01C0	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_d4
_clear_lcd_d4:
;lcd.c, 14 :: 		void clear_lcd_d4(){ GPIOC_ODR &= ~(1UL << LCD_D4_PIN); }
0x0228	0x4803    LDR	R0, [PC, #12]
0x022A	0x6801    LDR	R1, [R0, #0]
0x022C	0xF06F0008  MVN	R0, #8
0x0230	0x4001    ANDS	R1, R0
0x0232	0x4801    LDR	R0, [PC, #4]
0x0234	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_d4:
0x0236	0x4770    BX	LR
0x0238	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_d4
_clear_lcd_en:
;lcd.c, 8 :: 		void clear_lcd_en(){ GPIOC_ODR &= ~(1UL << LCD_EN_PIN); }
0x06A0	0x4803    LDR	R0, [PC, #12]
0x06A2	0x6801    LDR	R1, [R0, #0]
0x06A4	0xF46F5000  MVN	R0, #8192
0x06A8	0x4001    ANDS	R1, R0
0x06AA	0x4801    LDR	R0, [PC, #4]
0x06AC	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_en:
0x06AE	0x4770    BX	LR
0x06B0	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_en
_init_Timer2:
;timers.c, 3 :: 		void init_Timer2(){
0x0E88	0xB081    SUB	SP, SP, #4
0x0E8A	0xF8CDE000  STR	LR, [SP, #0]
;timers.c, 4 :: 		currentTime  = 0;               // Initial time
0x0E8E	0x2100    MOVS	R1, #0
0x0E90	0xB209    SXTH	R1, R1
0x0E92	0x4815    LDR	R0, [PC, #84]
0x0E94	0x8001    STRH	R1, [R0, #0]
;timers.c, 5 :: 		RCC_APB1ENR |=  (1UL << 0);     // RCC_APB1ENR.TIM2EN = 1;    // Bit 0 for Timer2      //TIM2 clock enabled
0x0E96	0x4815    LDR	R0, [PC, #84]
0x0E98	0x6800    LDR	R0, [R0, #0]
0x0E9A	0xF0400101  ORR	R1, R0, #1
0x0E9E	0x4813    LDR	R0, [PC, #76]
0x0EA0	0x6001    STR	R1, [R0, #0]
;timers.c, 6 :: 		TIM2_CR1    &= ~(1UL << 0);     // Counter disable    [TIM2_CR1 bit 0        TIM2_CR1.CEN = 0;
0x0EA2	0x4813    LDR	R0, [PC, #76]
0x0EA4	0x6801    LDR	R1, [R0, #0]
0x0EA6	0xF06F0001  MVN	R0, #1
0x0EAA	0x4001    ANDS	R1, R0
0x0EAC	0x4810    LDR	R0, [PC, #64]
0x0EAE	0x6001    STR	R1, [R0, #0]
;timers.c, 7 :: 		TIM2_PSC     = 16000;           // The counter clock CK_CNT is equal Fc_psc / (PSC[15:0] + 1)
0x0EB0	0xF6436180  MOVW	R1, #16000
0x0EB4	0x480F    LDR	R0, [PC, #60]
0x0EB6	0x6001    STR	R1, [R0, #0]
;timers.c, 8 :: 		TIM2_ARR     = TIME_FOR_DASH;   // Auto-reload value - ARR is the value to be loaded in the actual auto-reload register
0x0EB8	0xF24011F4  MOVW	R1, #500
0x0EBC	0x480E    LDR	R0, [PC, #56]
0x0EBE	0x6001    STR	R1, [R0, #0]
;timers.c, 9 :: 		NVIC_IntEnable(IVT_INT_TIM2);   // Nested Vector Interrupt Controller
0x0EC0	0xF240002C  MOVW	R0, #44
0x0EC4	0xF7FFFC26  BL	_NVIC_IntEnable+0
;timers.c, 10 :: 		TIM2_DIER   |= 1;               // Update interrupt enable [TIM2_DIEr bit 0]    TIM2_DIER.UIE = 1;
0x0EC8	0x480C    LDR	R0, [PC, #48]
0x0ECA	0x6800    LDR	R0, [R0, #0]
0x0ECC	0xF0400101  ORR	R1, R0, #1
0x0ED0	0x480A    LDR	R0, [PC, #40]
0x0ED2	0x6001    STR	R1, [R0, #0]
;timers.c, 11 :: 		TIM2_CR1    |=  (1UL << 0);     // Counter enable    [TIM2_CR1 bit 0]       TIM2_CR1.CEN = 1;
0x0ED4	0x4806    LDR	R0, [PC, #24]
0x0ED6	0x6800    LDR	R0, [R0, #0]
0x0ED8	0xF0400101  ORR	R1, R0, #1
0x0EDC	0x4804    LDR	R0, [PC, #16]
0x0EDE	0x6001    STR	R1, [R0, #0]
;timers.c, 13 :: 		}
L_end_init_Timer2:
0x0EE0	0xF8DDE000  LDR	LR, [SP, #0]
0x0EE4	0xB001    ADD	SP, SP, #4
0x0EE6	0x4770    BX	LR
0x0EE8	0x00002000  	_currentTime+0
0x0EEC	0x38404002  	RCC_APB1ENR+0
0x0EF0	0x00004000  	TIM2_CR1+0
0x0EF4	0x00284000  	TIM2_PSC+0
0x0EF8	0x002C4000  	TIM2_ARR+0
0x0EFC	0x000C4000  	TIM2_DIER+0
; end of _init_Timer2
_NVIC_IntEnable:
;__Lib_System_4XX.c, 171 :: 		
; ivt start address is: 0 (R0)
0x0714	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_4XX.c, 183 :: 		
0x0716	0x2804    CMP	R0, #4
0x0718	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 188 :: 		
0x071A	0x4919    LDR	R1, [PC, #100]
0x071C	0x6809    LDR	R1, [R1, #0]
0x071E	0xF4413280  ORR	R2, R1, #65536
0x0722	0x4917    LDR	R1, [PC, #92]
0x0724	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 189 :: 		
0x0726	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_4XX.c, 190 :: 		
; ivt start address is: 0 (R0)
0x0728	0x2805    CMP	R0, #5
0x072A	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 195 :: 		
0x072C	0x4914    LDR	R1, [PC, #80]
0x072E	0x6809    LDR	R1, [R1, #0]
0x0730	0xF4413200  ORR	R2, R1, #131072
0x0734	0x4912    LDR	R1, [PC, #72]
0x0736	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 196 :: 		
0x0738	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_4XX.c, 197 :: 		
; ivt start address is: 0 (R0)
0x073A	0x2806    CMP	R0, #6
0x073C	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 202 :: 		
0x073E	0x4910    LDR	R1, [PC, #64]
0x0740	0x6809    LDR	R1, [R1, #0]
0x0742	0xF4412280  ORR	R2, R1, #262144
0x0746	0x490E    LDR	R1, [PC, #56]
0x0748	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 203 :: 		
0x074A	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_4XX.c, 204 :: 		
; ivt start address is: 0 (R0)
0x074C	0x280F    CMP	R0, #15
0x074E	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 209 :: 		
0x0750	0x490C    LDR	R1, [PC, #48]
0x0752	0x6809    LDR	R1, [R1, #0]
0x0754	0xF0410202  ORR	R2, R1, #2
0x0758	0x490A    LDR	R1, [PC, #40]
0x075A	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 210 :: 		
0x075C	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_4XX.c, 211 :: 		
; ivt start address is: 0 (R0)
0x075E	0x2810    CMP	R0, #16
0x0760	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_4XX.c, 216 :: 		
0x0762	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x0766	0x0961    LSRS	R1, R4, #5
0x0768	0x008A    LSLS	R2, R1, #2
0x076A	0x4907    LDR	R1, [PC, #28]
0x076C	0x188B    ADDS	R3, R1, R2
;__Lib_System_4XX.c, 217 :: 		
0x076E	0xF004021F  AND	R2, R4, #31
0x0772	0xF04F0101  MOV	R1, #1
0x0776	0x4091    LSLS	R1, R2
0x0778	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 218 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_4XX.c, 219 :: 		
L_end_NVIC_IntEnable:
0x077A	0xB001    ADD	SP, SP, #4
0x077C	0x4770    BX	LR
0x077E	0xBF00    NOP
0x0780	0xED24E000  	SCB_SHCRS+0
0x0784	0xE010E000  	STK_CTRL+0
0x0788	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_init_Buttons:
;button.c, 3 :: 		void init_Buttons(){
0x0F1C	0xB081    SUB	SP, SP, #4
0x0F1E	0xF8CDE000  STR	LR, [SP, #0]
;button.c, 5 :: 		init_GPIO_Pin(MODER,   LEFT_BUTTON_PORT,  LEFT_BUTTON_PIN,  INPUT);
0x0F22	0xF04F0300  MOV	R3, #0
0x0F26	0x2200    MOVS	R2, #0
0x0F28	0x2104    MOVS	R1, #4
0x0F2A	0x2000    MOVS	R0, #0
0x0F2C	0xF7FFF990  BL	_init_GPIO_Pin+0
;button.c, 6 :: 		init_GPIO_Pin(OSPEEDR, LEFT_BUTTON_PORT,  LEFT_BUTTON_PIN,  HIGH);
0x0F30	0x2302    MOVS	R3, #2
0x0F32	0x2200    MOVS	R2, #0
0x0F34	0x2104    MOVS	R1, #4
0x0F36	0x2002    MOVS	R0, #2
0x0F38	0xF7FFF98A  BL	_init_GPIO_Pin+0
;button.c, 7 :: 		init_GPIO_Pin(PUPDR,   LEFT_BUTTON_PORT,  LEFT_BUTTON_PIN,  PULL_UP);
0x0F3C	0x2301    MOVS	R3, #1
0x0F3E	0x2200    MOVS	R2, #0
0x0F40	0x2104    MOVS	R1, #4
0x0F42	0x2003    MOVS	R0, #3
0x0F44	0xF7FFF984  BL	_init_GPIO_Pin+0
;button.c, 9 :: 		SYSCFG_EXTICR1 |= 0x4;               // SYStem Configuration Controler - EXTernal Interrupt Configuration Register 1
0x0F48	0x4821    LDR	R0, [PC, #132]
0x0F4A	0x6800    LDR	R0, [R0, #0]
0x0F4C	0xF0400104  ORR	R1, R0, #4
0x0F50	0x481F    LDR	R0, [PC, #124]
0x0F52	0x6001    STR	R1, [R0, #0]
;button.c, 12 :: 		EXTI_IMR       |= 1;                 // Interrupt mask on line (1)
0x0F54	0x481F    LDR	R0, [PC, #124]
0x0F56	0x6800    LDR	R0, [R0, #0]
0x0F58	0xF0400101  ORR	R1, R0, #1
0x0F5C	0x481D    LDR	R0, [PC, #116]
0x0F5E	0x6001    STR	R1, [R0, #0]
;button.c, 13 :: 		EXTI_FTSR      |= 1;                 // Fall edge (press button)
0x0F60	0x481D    LDR	R0, [PC, #116]
0x0F62	0x6800    LDR	R0, [R0, #0]
0x0F64	0xF0400101  ORR	R1, R0, #1
0x0F68	0x481B    LDR	R0, [PC, #108]
0x0F6A	0x6001    STR	R1, [R0, #0]
;button.c, 16 :: 		NVIC_IntEnable(IVT_INT_EXTI0);       // Nested Vector Interrupt Controller
0x0F6C	0xF2400016  MOVW	R0, #22
0x0F70	0xF7FFFBD0  BL	_NVIC_IntEnable+0
;button.c, 19 :: 		init_GPIO_Pin(MODER,   RIGHT_BUTTON_PORT, RIGHT_BUTTON_PIN, INPUT);
0x0F74	0xF04F0300  MOV	R3, #0
0x0F78	0x220A    MOVS	R2, #10
0x0F7A	0x2100    MOVS	R1, #0
0x0F7C	0x2000    MOVS	R0, #0
0x0F7E	0xF7FFF967  BL	_init_GPIO_Pin+0
;button.c, 20 :: 		init_GPIO_Pin(OSPEEDR, RIGHT_BUTTON_PORT, RIGHT_BUTTON_PIN, HIGH);
0x0F82	0x2302    MOVS	R3, #2
0x0F84	0x220A    MOVS	R2, #10
0x0F86	0x2100    MOVS	R1, #0
0x0F88	0x2002    MOVS	R0, #2
0x0F8A	0xF7FFF961  BL	_init_GPIO_Pin+0
;button.c, 21 :: 		init_GPIO_Pin(PUPDR,   RIGHT_BUTTON_PORT, RIGHT_BUTTON_PIN, PULL_UP);
0x0F8E	0x2301    MOVS	R3, #1
0x0F90	0x220A    MOVS	R2, #10
0x0F92	0x2100    MOVS	R1, #0
0x0F94	0x2003    MOVS	R0, #3
0x0F96	0xF7FFF95B  BL	_init_GPIO_Pin+0
;button.c, 23 :: 		SYSCFG_EXTICR3 &= ~(15UL << 8);      // EXTI 10 (on 3x4 bits) interrupt Port A (0 - 0000)
0x0F9A	0x4810    LDR	R0, [PC, #64]
0x0F9C	0x6801    LDR	R1, [R0, #0]
0x0F9E	0xF46F6070  MVN	R0, #3840
0x0FA2	0x4001    ANDS	R1, R0
0x0FA4	0x480D    LDR	R0, [PC, #52]
0x0FA6	0x6001    STR	R1, [R0, #0]
;button.c, 27 :: 		EXTI_IMR       |= (1 << 10);         // Interrupt mask on line (10)
0x0FA8	0x480A    LDR	R0, [PC, #40]
0x0FAA	0x6800    LDR	R0, [R0, #0]
0x0FAC	0xF4406180  ORR	R1, R0, #1024
0x0FB0	0x4808    LDR	R0, [PC, #32]
0x0FB2	0x6001    STR	R1, [R0, #0]
;button.c, 28 :: 		EXTI_FTSR      |= (1 << 10);         // Fall edge (press button)
0x0FB4	0x4808    LDR	R0, [PC, #32]
0x0FB6	0x6800    LDR	R0, [R0, #0]
0x0FB8	0xF4406180  ORR	R1, R0, #1024
0x0FBC	0x4806    LDR	R0, [PC, #24]
0x0FBE	0x6001    STR	R1, [R0, #0]
;button.c, 31 :: 		NVIC_IntEnable(IVT_INT_EXTI15_10);   // Nested Vector Interrupt Controller
0x0FC0	0xF2400038  MOVW	R0, #56
0x0FC4	0xF7FFFBA6  BL	_NVIC_IntEnable+0
;button.c, 33 :: 		}
L_end_init_Buttons:
0x0FC8	0xF8DDE000  LDR	LR, [SP, #0]
0x0FCC	0xB001    ADD	SP, SP, #4
0x0FCE	0x4770    BX	LR
0x0FD0	0x38084001  	SYSCFG_EXTICR1+0
0x0FD4	0x3C004001  	EXTI_IMR+0
0x0FD8	0x3C0C4001  	EXTI_FTSR+0
0x0FDC	0x38104001  	SYSCFG_EXTICR3+0
; end of _init_Buttons
_init_LEDs:
;led.c, 6 :: 		void init_LEDs(){
0x0C70	0xB081    SUB	SP, SP, #4
0x0C72	0xF8CDE000  STR	LR, [SP, #0]
;led.c, 7 :: 		RCC_AHB1ENR    |= (1UL << 4);      // Enable GPIOD clock
0x0C76	0x481E    LDR	R0, [PC, #120]
0x0C78	0x6800    LDR	R0, [R0, #0]
0x0C7A	0xF0400110  ORR	R1, R0, #16
0x0C7E	0x481C    LDR	R0, [PC, #112]
0x0C80	0x6001    STR	R1, [R0, #0]
;led.c, 10 :: 		init_GPIO_Pin(MODER,   LEFT_LED_PORT,  LEFT_LED_PIN,  OUTPUT);
0x0C82	0xF04F0301  MOV	R3, #1
0x0C86	0x220C    MOVS	R2, #12
0x0C88	0x2104    MOVS	R1, #4
0x0C8A	0x2000    MOVS	R0, #0
0x0C8C	0xF7FFFAE0  BL	_init_GPIO_Pin+0
;led.c, 11 :: 		init_GPIO_Pin(OTYPER,  LEFT_LED_PORT,  LEFT_LED_PIN,  PUSH_PULL);
0x0C90	0x2300    MOVS	R3, #0
0x0C92	0x220C    MOVS	R2, #12
0x0C94	0x2104    MOVS	R1, #4
0x0C96	0x2001    MOVS	R0, #1
0x0C98	0xF7FFFADA  BL	_init_GPIO_Pin+0
;led.c, 12 :: 		init_GPIO_Pin(OSPEEDR, LEFT_LED_PORT,  LEFT_LED_PIN,  HIGH);
0x0C9C	0x2302    MOVS	R3, #2
0x0C9E	0x220C    MOVS	R2, #12
0x0CA0	0x2104    MOVS	R1, #4
0x0CA2	0x2002    MOVS	R0, #2
0x0CA4	0xF7FFFAD4  BL	_init_GPIO_Pin+0
;led.c, 13 :: 		init_GPIO_Pin(PUPDR,   LEFT_LED_PORT,  LEFT_LED_PIN,  PULL_UP);
0x0CA8	0x2301    MOVS	R3, #1
0x0CAA	0x220C    MOVS	R2, #12
0x0CAC	0x2104    MOVS	R1, #4
0x0CAE	0x2003    MOVS	R0, #3
0x0CB0	0xF7FFFACE  BL	_init_GPIO_Pin+0
;led.c, 15 :: 		init_GPIO_Pin(MODER,   RIGHT_LED_PORT, RIGHT_LED_PIN, OUTPUT);
0x0CB4	0xF04F0301  MOV	R3, #1
0x0CB8	0x220F    MOVS	R2, #15
0x0CBA	0x2104    MOVS	R1, #4
0x0CBC	0x2000    MOVS	R0, #0
0x0CBE	0xF7FFFAC7  BL	_init_GPIO_Pin+0
;led.c, 16 :: 		init_GPIO_Pin(OTYPER,  RIGHT_LED_PORT, RIGHT_LED_PIN, PUSH_PULL);
0x0CC2	0x2300    MOVS	R3, #0
0x0CC4	0x220F    MOVS	R2, #15
0x0CC6	0x2104    MOVS	R1, #4
0x0CC8	0x2001    MOVS	R0, #1
0x0CCA	0xF7FFFAC1  BL	_init_GPIO_Pin+0
;led.c, 17 :: 		init_GPIO_Pin(OSPEEDR, RIGHT_LED_PORT, RIGHT_LED_PIN, HIGH);
0x0CCE	0x2302    MOVS	R3, #2
0x0CD0	0x220F    MOVS	R2, #15
0x0CD2	0x2104    MOVS	R1, #4
0x0CD4	0x2002    MOVS	R0, #2
0x0CD6	0xF7FFFABB  BL	_init_GPIO_Pin+0
;led.c, 18 :: 		init_GPIO_Pin(PUPDR,   RIGHT_LED_PORT, RIGHT_LED_PIN, PULL_UP);
0x0CDA	0x2301    MOVS	R3, #1
0x0CDC	0x220F    MOVS	R2, #15
0x0CDE	0x2104    MOVS	R1, #4
0x0CE0	0x2003    MOVS	R0, #3
0x0CE2	0xF7FFFAB5  BL	_init_GPIO_Pin+0
;led.c, 21 :: 		}
L_end_init_LEDs:
0x0CE6	0xF8DDE000  LDR	LR, [SP, #0]
0x0CEA	0xB001    ADD	SP, SP, #4
0x0CEC	0x4770    BX	LR
0x0CEE	0xBF00    NOP
0x0CF0	0x38304002  	RCC_AHB1ENR+0
; end of _init_LEDs
_init_UART:
;uart.c, 80 :: 		void init_UART(){
0x0CF4	0xB081    SUB	SP, SP, #4
0x0CF6	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 81 :: 		init_UART_pins();
0x0CFA	0xF7FFFD47  BL	_init_UART_pins+0
;uart.c, 94 :: 		UART4_BRR = 0x00000682;
0x0CFE	0xF2406182  MOVW	R1, #1666
0x0D02	0x4818    LDR	R0, [PC, #96]
0x0D04	0x6001    STR	R1, [R0, #0]
;uart.c, 96 :: 		UART4_CR1    &= ~(1UL << 12);         // M = 0 => Word lenght = 8b
0x0D06	0x4818    LDR	R0, [PC, #96]
0x0D08	0x6801    LDR	R1, [R0, #0]
0x0D0A	0xF46F5080  MVN	R0, #4096
0x0D0E	0x4001    ANDS	R1, R0
0x0D10	0x4815    LDR	R0, [PC, #84]
0x0D12	0x6001    STR	R1, [R0, #0]
;uart.c, 97 :: 		UART4_CR1    &= ~(1UL << 10);         // parity disable
0x0D14	0x4814    LDR	R0, [PC, #80]
0x0D16	0x6801    LDR	R1, [R0, #0]
0x0D18	0xF46F6080  MVN	R0, #1024
0x0D1C	0x4001    ANDS	R1, R0
0x0D1E	0x4812    LDR	R0, [PC, #72]
0x0D20	0x6001    STR	R1, [R0, #0]
;uart.c, 99 :: 		UART4_CR1    |= (1UL << 2);           // Receiver enable    (RE)
0x0D22	0x4811    LDR	R0, [PC, #68]
0x0D24	0x6800    LDR	R0, [R0, #0]
0x0D26	0xF0400104  ORR	R1, R0, #4
0x0D2A	0x480F    LDR	R0, [PC, #60]
0x0D2C	0x6001    STR	R1, [R0, #0]
;uart.c, 100 :: 		UART4_CR1    |= (1UL << 3);           // Transmitter enable (TE)
0x0D2E	0x480E    LDR	R0, [PC, #56]
0x0D30	0x6800    LDR	R0, [R0, #0]
0x0D32	0xF0400108  ORR	R1, R0, #8
0x0D36	0x480C    LDR	R0, [PC, #48]
0x0D38	0x6001    STR	R1, [R0, #0]
;uart.c, 103 :: 		UART4_CR1    |= (1UL << 5);           // RXE interrupt enable - interrupt is generated whenever ORE=1 or RXNE=1 in the USART_SR register
0x0D3A	0x480B    LDR	R0, [PC, #44]
0x0D3C	0x6800    LDR	R0, [R0, #0]
0x0D3E	0xF0400120  ORR	R1, R0, #32
0x0D42	0x4809    LDR	R0, [PC, #36]
0x0D44	0x6001    STR	R1, [R0, #0]
;uart.c, 106 :: 		NVIC_IntEnable(IVT_INT_UART4);        // TODO change this!
0x0D46	0xF2400044  MOVW	R0, #68
0x0D4A	0xF7FFFCE3  BL	_NVIC_IntEnable+0
;uart.c, 108 :: 		UART4_CR1 |= (1UL << 13);             // Enable UART
0x0D4E	0x4806    LDR	R0, [PC, #24]
0x0D50	0x6800    LDR	R0, [R0, #0]
0x0D52	0xF4405100  ORR	R1, R0, #8192
0x0D56	0x4804    LDR	R0, [PC, #16]
0x0D58	0x6001    STR	R1, [R0, #0]
;uart.c, 109 :: 		}
L_end_init_UART:
0x0D5A	0xF8DDE000  LDR	LR, [SP, #0]
0x0D5E	0xB001    ADD	SP, SP, #4
0x0D60	0x4770    BX	LR
0x0D62	0xBF00    NOP
0x0D64	0x4C084000  	UART4_BRR+0
0x0D68	0x4C0C4000  	UART4_CR1+0
; end of _init_UART
_init_UART_pins:
;uart.c, 21 :: 		void init_UART_pins(){
0x078C	0xB081    SUB	SP, SP, #4
0x078E	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 24 :: 		RCC_AHB1ENR    |=  ((1UL << 0));      // Enable clock for port A
0x0792	0x482D    LDR	R0, [PC, #180]
0x0794	0x6800    LDR	R0, [R0, #0]
0x0796	0xF0400101  ORR	R1, R0, #1
0x079A	0x482B    LDR	R0, [PC, #172]
0x079C	0x6001    STR	R1, [R0, #0]
;uart.c, 25 :: 		RCC_APB1ENR    |=   (1UL << 19);      // Enable UART4 Clock
0x079E	0x482B    LDR	R0, [PC, #172]
0x07A0	0x6800    LDR	R0, [R0, #0]
0x07A2	0xF4402100  ORR	R1, R0, #524288
0x07A6	0x4829    LDR	R0, [PC, #164]
0x07A8	0x6001    STR	R1, [R0, #0]
;uart.c, 27 :: 		init_GPIO_Pin(MODER,   UART4_TX_PORT, UART4_TX_PIN, ALTERNATIVE_FUNCTION);
0x07AA	0xF04F0302  MOV	R3, #2
0x07AE	0x2200    MOVS	R2, #0
0x07B0	0x2100    MOVS	R1, #0
0x07B2	0x2000    MOVS	R0, #0
0x07B4	0xF7FFFD4C  BL	_init_GPIO_Pin+0
;uart.c, 28 :: 		init_GPIO_Pin(MODER,   UART4_RX_PORT, UART4_RX_PIN, ALTERNATIVE_FUNCTION);
0x07B8	0xF04F0302  MOV	R3, #2
0x07BC	0x2201    MOVS	R2, #1
0x07BE	0x2100    MOVS	R1, #0
0x07C0	0x2000    MOVS	R0, #0
0x07C2	0xF7FFFD45  BL	_init_GPIO_Pin+0
;uart.c, 30 :: 		init_GPIO_Pin(OTYPER,  UART4_TX_PORT, UART4_TX_PIN, PUSH_PULL);
0x07C6	0x2300    MOVS	R3, #0
0x07C8	0x2200    MOVS	R2, #0
0x07CA	0x2100    MOVS	R1, #0
0x07CC	0x2001    MOVS	R0, #1
0x07CE	0xF7FFFD3F  BL	_init_GPIO_Pin+0
;uart.c, 31 :: 		init_GPIO_Pin(OTYPER,  UART4_RX_PORT, UART4_RX_PIN, PUSH_PULL);
0x07D2	0x2300    MOVS	R3, #0
0x07D4	0x2201    MOVS	R2, #1
0x07D6	0x2100    MOVS	R1, #0
0x07D8	0x2001    MOVS	R0, #1
0x07DA	0xF7FFFD39  BL	_init_GPIO_Pin+0
;uart.c, 33 :: 		init_GPIO_Pin(OSPEEDR, UART4_TX_PORT, UART4_TX_PIN, HIGH);
0x07DE	0x2302    MOVS	R3, #2
0x07E0	0x2200    MOVS	R2, #0
0x07E2	0x2100    MOVS	R1, #0
0x07E4	0x2002    MOVS	R0, #2
0x07E6	0xF7FFFD33  BL	_init_GPIO_Pin+0
;uart.c, 34 :: 		init_GPIO_Pin(OSPEEDR, UART4_RX_PORT, UART4_RX_PIN, HIGH);
0x07EA	0x2302    MOVS	R3, #2
0x07EC	0x2201    MOVS	R2, #1
0x07EE	0x2100    MOVS	R1, #0
0x07F0	0x2002    MOVS	R0, #2
0x07F2	0xF7FFFD2D  BL	_init_GPIO_Pin+0
;uart.c, 36 :: 		init_GPIO_Pin(PUPDR, UART4_TX_PORT, UART4_TX_PIN, PULL_UP);
0x07F6	0x2301    MOVS	R3, #1
0x07F8	0x2200    MOVS	R2, #0
0x07FA	0x2100    MOVS	R1, #0
0x07FC	0x2003    MOVS	R0, #3
0x07FE	0xF7FFFD27  BL	_init_GPIO_Pin+0
;uart.c, 37 :: 		init_GPIO_Pin(PUPDR, UART4_RX_PORT, UART4_RX_PIN, PULL_UP);
0x0802	0x2301    MOVS	R3, #1
0x0804	0x2201    MOVS	R2, #1
0x0806	0x2100    MOVS	R1, #0
0x0808	0x2003    MOVS	R0, #3
0x080A	0xF7FFFD21  BL	_init_GPIO_Pin+0
;uart.c, 41 :: 		GPIOA_AFRL     &= ~(15UL << 0);       // Clear Alternative Function
0x080E	0x4810    LDR	R0, [PC, #64]
0x0810	0x6801    LDR	R1, [R0, #0]
0x0812	0xF06F000F  MVN	R0, #15
0x0816	0x4001    ANDS	R1, R0
0x0818	0x480D    LDR	R0, [PC, #52]
0x081A	0x6001    STR	R1, [R0, #0]
;uart.c, 42 :: 		GPIOA_AFRL     &= ~(15UL << 4);       // Clear Alternative Function
0x081C	0x480C    LDR	R0, [PC, #48]
0x081E	0x6800    LDR	R0, [R0, #0]
0x0820	0xF000010F  AND	R1, R0, #15
0x0824	0x480A    LDR	R0, [PC, #40]
0x0826	0x6001    STR	R1, [R0, #0]
;uart.c, 43 :: 		GPIOA_AFRL     |=  (8UL << 0);        // Set Alternative Function 8 (low registar)
0x0828	0x4809    LDR	R0, [PC, #36]
0x082A	0x6800    LDR	R0, [R0, #0]
0x082C	0xF0400108  ORR	R1, R0, #8
0x0830	0x4807    LDR	R0, [PC, #28]
0x0832	0x6001    STR	R1, [R0, #0]
;uart.c, 44 :: 		GPIOA_AFRL     |=  (8UL << 4);        // Set Alternative Function 8 (low registar)
0x0834	0x4806    LDR	R0, [PC, #24]
0x0836	0x6800    LDR	R0, [R0, #0]
0x0838	0xF0400180  ORR	R1, R0, #128
0x083C	0x4804    LDR	R0, [PC, #16]
0x083E	0x6001    STR	R1, [R0, #0]
;uart.c, 46 :: 		}
L_end_init_UART_pins:
0x0840	0xF8DDE000  LDR	LR, [SP, #0]
0x0844	0xB001    ADD	SP, SP, #4
0x0846	0x4770    BX	LR
0x0848	0x38304002  	RCC_AHB1ENR+0
0x084C	0x38404002  	RCC_APB1ENR+0
0x0850	0x00204002  	GPIOA_AFRL+0
; end of _init_UART_pins
_doSomething:
;main.c, 83 :: 		void doSomething(){
;main.c, 84 :: 		while(1);
L_doSomething4:
0x0FE0	0xE7FE    B	L_doSomething4
;main.c, 85 :: 		}
L_end_doSomething:
0x0FE2	0x4770    BX	LR
; end of _doSomething
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 452 :: 		
0x13B8	0xB082    SUB	SP, SP, #8
0x13BA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 455 :: 		
; ulRCC_CR start address is: 8 (R2)
0x13BE	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 456 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x13C0	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 457 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x13C2	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 458 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x13C4	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 459 :: 		
; Fosc_kHz start address is: 4 (R1)
0x13C6	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 461 :: 		
0x13C8	0x2803    CMP	R0, #3
0x13CA	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC231
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 462 :: 		
0x13CE	0x4893    LDR	R0, [PC, #588]
0x13D0	0x4281    CMP	R1, R0
0x13D2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 463 :: 		
0x13D4	0x4892    LDR	R0, [PC, #584]
0x13D6	0x6800    LDR	R0, [R0, #0]
0x13D8	0xF0400105  ORR	R1, R0, #5
0x13DC	0x4890    LDR	R0, [PC, #576]
0x13DE	0x6001    STR	R1, [R0, #0]
0x13E0	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC233
L___Lib_System_4XX_InitialSetUpRCCRCC232:
;__Lib_System_4XX.c, 464 :: 		
; Fosc_kHz start address is: 4 (R1)
0x13E2	0x4890    LDR	R0, [PC, #576]
0x13E4	0x4281    CMP	R1, R0
0x13E6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 465 :: 		
0x13E8	0x488D    LDR	R0, [PC, #564]
0x13EA	0x6800    LDR	R0, [R0, #0]
0x13EC	0xF0400104  ORR	R1, R0, #4
0x13F0	0x488B    LDR	R0, [PC, #556]
0x13F2	0x6001    STR	R1, [R0, #0]
0x13F4	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC235
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 466 :: 		
; Fosc_kHz start address is: 4 (R1)
0x13F6	0x488C    LDR	R0, [PC, #560]
0x13F8	0x4281    CMP	R1, R0
0x13FA	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 467 :: 		
0x13FC	0x4888    LDR	R0, [PC, #544]
0x13FE	0x6800    LDR	R0, [R0, #0]
0x1400	0xF0400103  ORR	R1, R0, #3
0x1404	0x4886    LDR	R0, [PC, #536]
0x1406	0x6001    STR	R1, [R0, #0]
0x1408	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC237
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 468 :: 		
; Fosc_kHz start address is: 4 (R1)
0x140A	0xF64E2060  MOVW	R0, #60000
0x140E	0x4281    CMP	R1, R0
0x1410	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC238
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 469 :: 		
0x1412	0x4883    LDR	R0, [PC, #524]
0x1414	0x6800    LDR	R0, [R0, #0]
0x1416	0xF0400102  ORR	R1, R0, #2
0x141A	0x4881    LDR	R0, [PC, #516]
0x141C	0x6001    STR	R1, [R0, #0]
0x141E	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC239
L___Lib_System_4XX_InitialSetUpRCCRCC238:
;__Lib_System_4XX.c, 470 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1420	0xF2475030  MOVW	R0, #30000
0x1424	0x4281    CMP	R1, R0
0x1426	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC240
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 471 :: 		
0x1428	0x487D    LDR	R0, [PC, #500]
0x142A	0x6800    LDR	R0, [R0, #0]
0x142C	0xF0400101  ORR	R1, R0, #1
0x1430	0x487B    LDR	R0, [PC, #492]
0x1432	0x6001    STR	R1, [R0, #0]
0x1434	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC241
L___Lib_System_4XX_InitialSetUpRCCRCC240:
;__Lib_System_4XX.c, 473 :: 		
0x1436	0x487A    LDR	R0, [PC, #488]
0x1438	0x6801    LDR	R1, [R0, #0]
0x143A	0xF06F0007  MVN	R0, #7
0x143E	0x4001    ANDS	R1, R0
0x1440	0x4877    LDR	R0, [PC, #476]
0x1442	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC241:
L___Lib_System_4XX_InitialSetUpRCCRCC239:
L___Lib_System_4XX_InitialSetUpRCCRCC237:
L___Lib_System_4XX_InitialSetUpRCCRCC235:
L___Lib_System_4XX_InitialSetUpRCCRCC233:
;__Lib_System_4XX.c, 474 :: 		
0x1444	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC231:
;__Lib_System_4XX.c, 475 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1446	0x2802    CMP	R0, #2
0x1448	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC243
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 476 :: 		
0x144C	0x4877    LDR	R0, [PC, #476]
0x144E	0x4281    CMP	R1, R0
0x1450	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC244
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 477 :: 		
0x1452	0x4873    LDR	R0, [PC, #460]
0x1454	0x6800    LDR	R0, [R0, #0]
0x1456	0xF0400106  ORR	R1, R0, #6
0x145A	0x4871    LDR	R0, [PC, #452]
0x145C	0x6001    STR	R1, [R0, #0]
0x145E	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC244:
;__Lib_System_4XX.c, 478 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1460	0x4870    LDR	R0, [PC, #448]
0x1462	0x4281    CMP	R1, R0
0x1464	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC246
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 479 :: 		
0x1466	0x486E    LDR	R0, [PC, #440]
0x1468	0x6800    LDR	R0, [R0, #0]
0x146A	0xF0400105  ORR	R1, R0, #5
0x146E	0x486C    LDR	R0, [PC, #432]
0x1470	0x6001    STR	R1, [R0, #0]
0x1472	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC247
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 480 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1474	0x486E    LDR	R0, [PC, #440]
0x1476	0x4281    CMP	R1, R0
0x1478	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC248
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 481 :: 		
0x147A	0x4869    LDR	R0, [PC, #420]
0x147C	0x6800    LDR	R0, [R0, #0]
0x147E	0xF0400104  ORR	R1, R0, #4
0x1482	0x4867    LDR	R0, [PC, #412]
0x1484	0x6001    STR	R1, [R0, #0]
0x1486	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC249
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 482 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1488	0x486A    LDR	R0, [PC, #424]
0x148A	0x4281    CMP	R1, R0
0x148C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC250
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 483 :: 		
0x148E	0x4864    LDR	R0, [PC, #400]
0x1490	0x6800    LDR	R0, [R0, #0]
0x1492	0xF0400103  ORR	R1, R0, #3
0x1496	0x4862    LDR	R0, [PC, #392]
0x1498	0x6001    STR	R1, [R0, #0]
0x149A	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC251
L___Lib_System_4XX_InitialSetUpRCCRCC250:
;__Lib_System_4XX.c, 484 :: 		
; Fosc_kHz start address is: 4 (R1)
0x149C	0xF64B3080  MOVW	R0, #48000
0x14A0	0x4281    CMP	R1, R0
0x14A2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC252
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 485 :: 		
0x14A4	0x485E    LDR	R0, [PC, #376]
0x14A6	0x6800    LDR	R0, [R0, #0]
0x14A8	0xF0400102  ORR	R1, R0, #2
0x14AC	0x485C    LDR	R0, [PC, #368]
0x14AE	0x6001    STR	R1, [R0, #0]
0x14B0	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC253
L___Lib_System_4XX_InitialSetUpRCCRCC252:
;__Lib_System_4XX.c, 486 :: 		
; Fosc_kHz start address is: 4 (R1)
0x14B2	0xF64550C0  MOVW	R0, #24000
0x14B6	0x4281    CMP	R1, R0
0x14B8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC254
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 487 :: 		
0x14BA	0x4859    LDR	R0, [PC, #356]
0x14BC	0x6800    LDR	R0, [R0, #0]
0x14BE	0xF0400101  ORR	R1, R0, #1
0x14C2	0x4857    LDR	R0, [PC, #348]
0x14C4	0x6001    STR	R1, [R0, #0]
0x14C6	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC255
L___Lib_System_4XX_InitialSetUpRCCRCC254:
;__Lib_System_4XX.c, 489 :: 		
0x14C8	0x4855    LDR	R0, [PC, #340]
0x14CA	0x6801    LDR	R1, [R0, #0]
0x14CC	0xF06F0007  MVN	R0, #7
0x14D0	0x4001    ANDS	R1, R0
0x14D2	0x4853    LDR	R0, [PC, #332]
0x14D4	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC255:
L___Lib_System_4XX_InitialSetUpRCCRCC253:
L___Lib_System_4XX_InitialSetUpRCCRCC251:
L___Lib_System_4XX_InitialSetUpRCCRCC249:
L___Lib_System_4XX_InitialSetUpRCCRCC247:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 490 :: 		
0x14D6	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x14D8	0x2801    CMP	R0, #1
0x14DA	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC257
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 492 :: 		
0x14DE	0x4851    LDR	R0, [PC, #324]
0x14E0	0x4281    CMP	R1, R0
0x14E2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC258
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 493 :: 		
0x14E4	0x484E    LDR	R0, [PC, #312]
0x14E6	0x6800    LDR	R0, [R0, #0]
0x14E8	0xF0400107  ORR	R1, R0, #7
0x14EC	0x484C    LDR	R0, [PC, #304]
0x14EE	0x6001    STR	R1, [R0, #0]
0x14F0	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC258:
;__Lib_System_4XX.c, 494 :: 		
; Fosc_kHz start address is: 4 (R1)
0x14F2	0x4851    LDR	R0, [PC, #324]
0x14F4	0x4281    CMP	R1, R0
0x14F6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC260
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 495 :: 		
0x14F8	0x4849    LDR	R0, [PC, #292]
0x14FA	0x6800    LDR	R0, [R0, #0]
0x14FC	0xF0400106  ORR	R1, R0, #6
0x1500	0x4847    LDR	R0, [PC, #284]
0x1502	0x6001    STR	R1, [R0, #0]
0x1504	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC261
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 496 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1506	0x4848    LDR	R0, [PC, #288]
0x1508	0x4281    CMP	R1, R0
0x150A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC262
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 497 :: 		
0x150C	0x4844    LDR	R0, [PC, #272]
0x150E	0x6800    LDR	R0, [R0, #0]
0x1510	0xF0400105  ORR	R1, R0, #5
0x1514	0x4842    LDR	R0, [PC, #264]
0x1516	0x6001    STR	R1, [R0, #0]
0x1518	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC263
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 498 :: 		
; Fosc_kHz start address is: 4 (R1)
0x151A	0x4846    LDR	R0, [PC, #280]
0x151C	0x4281    CMP	R1, R0
0x151E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC264
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 499 :: 		
0x1520	0x483F    LDR	R0, [PC, #252]
0x1522	0x6800    LDR	R0, [R0, #0]
0x1524	0xF0400104  ORR	R1, R0, #4
0x1528	0x483D    LDR	R0, [PC, #244]
0x152A	0x6001    STR	R1, [R0, #0]
0x152C	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC265
L___Lib_System_4XX_InitialSetUpRCCRCC264:
;__Lib_System_4XX.c, 500 :: 		
; Fosc_kHz start address is: 4 (R1)
0x152E	0xF24D20F0  MOVW	R0, #54000
0x1532	0x4281    CMP	R1, R0
0x1534	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC266
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 501 :: 		
0x1536	0x483A    LDR	R0, [PC, #232]
0x1538	0x6800    LDR	R0, [R0, #0]
0x153A	0xF0400103  ORR	R1, R0, #3
0x153E	0x4838    LDR	R0, [PC, #224]
0x1540	0x6001    STR	R1, [R0, #0]
0x1542	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC267
L___Lib_System_4XX_InitialSetUpRCCRCC266:
;__Lib_System_4XX.c, 502 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1544	0xF64840A0  MOVW	R0, #36000
0x1548	0x4281    CMP	R1, R0
0x154A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC268
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 503 :: 		
0x154C	0x4834    LDR	R0, [PC, #208]
0x154E	0x6800    LDR	R0, [R0, #0]
0x1550	0xF0400102  ORR	R1, R0, #2
0x1554	0x4832    LDR	R0, [PC, #200]
0x1556	0x6001    STR	R1, [R0, #0]
0x1558	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC269
L___Lib_System_4XX_InitialSetUpRCCRCC268:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
0x155A	0xF2446050  MOVW	R0, #18000
0x155E	0x4281    CMP	R1, R0
0x1560	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC270
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 505 :: 		
0x1562	0x482F    LDR	R0, [PC, #188]
0x1564	0x6800    LDR	R0, [R0, #0]
0x1566	0xF0400101  ORR	R1, R0, #1
0x156A	0x482D    LDR	R0, [PC, #180]
0x156C	0x6001    STR	R1, [R0, #0]
0x156E	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC271
L___Lib_System_4XX_InitialSetUpRCCRCC270:
;__Lib_System_4XX.c, 507 :: 		
0x1570	0x482B    LDR	R0, [PC, #172]
0x1572	0x6801    LDR	R1, [R0, #0]
0x1574	0xF06F0007  MVN	R0, #7
0x1578	0x4001    ANDS	R1, R0
0x157A	0x4829    LDR	R0, [PC, #164]
0x157C	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC271:
L___Lib_System_4XX_InitialSetUpRCCRCC269:
L___Lib_System_4XX_InitialSetUpRCCRCC267:
L___Lib_System_4XX_InitialSetUpRCCRCC265:
L___Lib_System_4XX_InitialSetUpRCCRCC263:
L___Lib_System_4XX_InitialSetUpRCCRCC261:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
;__Lib_System_4XX.c, 508 :: 		
0x157E	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1580	0x2800    CMP	R0, #0
0x1582	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC273
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 510 :: 		
0x1586	0x482D    LDR	R0, [PC, #180]
0x1588	0x4281    CMP	R1, R0
0x158A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC274
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 511 :: 		
0x158C	0x4824    LDR	R0, [PC, #144]
0x158E	0x6800    LDR	R0, [R0, #0]
0x1590	0xF0400107  ORR	R1, R0, #7
0x1594	0x4822    LDR	R0, [PC, #136]
0x1596	0x6001    STR	R1, [R0, #0]
0x1598	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC274:
;__Lib_System_4XX.c, 512 :: 		
; Fosc_kHz start address is: 4 (R1)
0x159A	0x4825    LDR	R0, [PC, #148]
0x159C	0x4281    CMP	R1, R0
0x159E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC276
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 513 :: 		
0x15A0	0x481F    LDR	R0, [PC, #124]
0x15A2	0x6800    LDR	R0, [R0, #0]
0x15A4	0xF0400106  ORR	R1, R0, #6
0x15A8	0x481D    LDR	R0, [PC, #116]
0x15AA	0x6001    STR	R1, [R0, #0]
0x15AC	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC277
L___Lib_System_4XX_InitialSetUpRCCRCC276:
;__Lib_System_4XX.c, 514 :: 		
; Fosc_kHz start address is: 4 (R1)
0x15AE	0x4824    LDR	R0, [PC, #144]
0x15B0	0x4281    CMP	R1, R0
0x15B2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC278
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 515 :: 		
0x15B4	0x481A    LDR	R0, [PC, #104]
0x15B6	0x6800    LDR	R0, [R0, #0]
0x15B8	0xF0400105  ORR	R1, R0, #5
0x15BC	0x4818    LDR	R0, [PC, #96]
0x15BE	0x6001    STR	R1, [R0, #0]
0x15C0	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC279
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 516 :: 		
; Fosc_kHz start address is: 4 (R1)
0x15C2	0xF5B14F7A  CMP	R1, #64000
0x15C6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC280
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 517 :: 		
0x15C8	0x4815    LDR	R0, [PC, #84]
0x15CA	0x6800    LDR	R0, [R0, #0]
0x15CC	0xF0400104  ORR	R1, R0, #4
0x15D0	0x4813    LDR	R0, [PC, #76]
0x15D2	0x6001    STR	R1, [R0, #0]
0x15D4	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC281
L___Lib_System_4XX_InitialSetUpRCCRCC280:
;__Lib_System_4XX.c, 518 :: 		
; Fosc_kHz start address is: 4 (R1)
0x15D6	0xF64B3080  MOVW	R0, #48000
0x15DA	0x4281    CMP	R1, R0
0x15DC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC282
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 519 :: 		
0x15DE	0x4810    LDR	R0, [PC, #64]
0x15E0	0x6800    LDR	R0, [R0, #0]
0x15E2	0xF0400103  ORR	R1, R0, #3
0x15E6	0x480E    LDR	R0, [PC, #56]
0x15E8	0x6001    STR	R1, [R0, #0]
0x15EA	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC283
L___Lib_System_4XX_InitialSetUpRCCRCC282:
;__Lib_System_4XX.c, 520 :: 		
; Fosc_kHz start address is: 4 (R1)
0x15EC	0xF5B14FFA  CMP	R1, #32000
0x15F0	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC284
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 521 :: 		
0x15F2	0x480B    LDR	R0, [PC, #44]
0x15F4	0x6800    LDR	R0, [R0, #0]
0x15F6	0xF0400102  ORR	R1, R0, #2
0x15FA	0x4809    LDR	R0, [PC, #36]
0x15FC	0x6001    STR	R1, [R0, #0]
0x15FE	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC285
L___Lib_System_4XX_InitialSetUpRCCRCC284:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1600	0xF5B15F7A  CMP	R1, #16000
0x1604	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC286
0x1606	0xE01D    B	#58
0x1608	0x00810000  	#129
0x160C	0x00100400  	#67108880
0x1610	0x00000000  	#0
0x1614	0x00030000  	#3
0x1618	0x7D000000  	#32000
0x161C	0x49F00002  	#150000
0x1620	0x3C004002  	FLASH_ACR+0
0x1624	0xD4C00001  	#120000
0x1628	0x5F900001  	#90000
0x162C	0x32800002  	#144000
0x1630	0x77000001  	#96000
0x1634	0x19400001  	#72000
0x1638	0xA5E00001  	#108000
0x163C	0xB5800001  	#112000
0x1640	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 523 :: 		
0x1644	0x482D    LDR	R0, [PC, #180]
0x1646	0x6800    LDR	R0, [R0, #0]
0x1648	0xF0400101  ORR	R1, R0, #1
0x164C	0x482B    LDR	R0, [PC, #172]
0x164E	0x6001    STR	R1, [R0, #0]
0x1650	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC287
L___Lib_System_4XX_InitialSetUpRCCRCC286:
;__Lib_System_4XX.c, 525 :: 		
0x1652	0x482A    LDR	R0, [PC, #168]
0x1654	0x6801    LDR	R1, [R0, #0]
0x1656	0xF06F0007  MVN	R0, #7
0x165A	0x4001    ANDS	R1, R0
0x165C	0x4827    LDR	R0, [PC, #156]
0x165E	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC287:
L___Lib_System_4XX_InitialSetUpRCCRCC285:
L___Lib_System_4XX_InitialSetUpRCCRCC283:
L___Lib_System_4XX_InitialSetUpRCCRCC281:
L___Lib_System_4XX_InitialSetUpRCCRCC279:
L___Lib_System_4XX_InitialSetUpRCCRCC277:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
;__Lib_System_4XX.c, 526 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC273:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
;__Lib_System_4XX.c, 528 :: 		
0x1660	0x2101    MOVS	R1, #1
0x1662	0xB249    SXTB	R1, R1
0x1664	0x4826    LDR	R0, [PC, #152]
0x1666	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 529 :: 		
0x1668	0x4826    LDR	R0, [PC, #152]
0x166A	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 531 :: 		
0x166C	0xF7FFFD76  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 533 :: 		
0x1670	0x4825    LDR	R0, [PC, #148]
0x1672	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 534 :: 		
0x1674	0x4825    LDR	R0, [PC, #148]
0x1676	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 535 :: 		
0x1678	0x4825    LDR	R0, [PC, #148]
0x167A	0xEA020100  AND	R1, R2, R0, LSL #0
0x167E	0x4825    LDR	R0, [PC, #148]
0x1680	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 537 :: 		
0x1682	0xF0020001  AND	R0, R2, #1
0x1686	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x1688	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 538 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC289:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x168A	0x4822    LDR	R0, [PC, #136]
0x168C	0x6800    LDR	R0, [R0, #0]
0x168E	0xF0000002  AND	R0, R0, #2
0x1692	0x2800    CMP	R0, #0
0x1694	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC290
;__Lib_System_4XX.c, 539 :: 		
0x1696	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC289
L___Lib_System_4XX_InitialSetUpRCCRCC290:
;__Lib_System_4XX.c, 540 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x1698	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 537 :: 		
0x169A	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 540 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC288:
;__Lib_System_4XX.c, 542 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x169C	0xF4023080  AND	R0, R2, #65536
0x16A0	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2100
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 543 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x16A2	0x481C    LDR	R0, [PC, #112]
0x16A4	0x6800    LDR	R0, [R0, #0]
0x16A6	0xF4003000  AND	R0, R0, #131072
0x16AA	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 544 :: 		
0x16AC	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 545 :: 		
0x16AE	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x16B0	0x460A    MOV	R2, R1
0x16B2	0x9901    LDR	R1, [SP, #4]
0x16B4	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
;__Lib_System_4XX.c, 542 :: 		
0x16B6	0x9101    STR	R1, [SP, #4]
0x16B8	0x4611    MOV	R1, R2
0x16BA	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 545 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 547 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x16BC	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x16C0	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 548 :: 		
0x16C2	0x4814    LDR	R0, [PC, #80]
0x16C4	0x6800    LDR	R0, [R0, #0]
0x16C6	0xF0407180  ORR	R1, R0, #16777216
0x16CA	0x4812    LDR	R0, [PC, #72]
0x16CC	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x16CE	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 549 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CFGR start address is: 4 (R1)
0x16D0	0x4810    LDR	R0, [PC, #64]
0x16D2	0x6800    LDR	R0, [R0, #0]
0x16D4	0xF0007000  AND	R0, R0, #33554432
0x16D8	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 550 :: 		
0x16DA	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 551 :: 		
0x16DC	0x460A    MOV	R2, R1
0x16DE	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 547 :: 		
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 554 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC297:
; ulRCC_CFGR start address is: 8 (R2)
0x16E0	0x480A    LDR	R0, [PC, #40]
0x16E2	0x6800    LDR	R0, [R0, #0]
0x16E4	0xF000010C  AND	R1, R0, #12
0x16E8	0x0090    LSLS	R0, R2, #2
0x16EA	0xF000000C  AND	R0, R0, #12
0x16EE	0x4281    CMP	R1, R0
0x16F0	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC298
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x16F2	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
L___Lib_System_4XX_InitialSetUpRCCRCC298:
;__Lib_System_4XX.c, 557 :: 		
L_end_InitialSetUpRCCRCC2:
0x16F4	0xF8DDE000  LDR	LR, [SP, #0]
0x16F8	0xB002    ADD	SP, SP, #8
0x16FA	0x4770    BX	LR
0x16FC	0x3C004002  	FLASH_ACR+0
0x1700	0x80204247  	FLASH_ACR+0
0x1704	0x80244247  	FLASH_ACR+0
0x1708	0x38044002  	RCC_PLLCFGR+0
0x170C	0x38084002  	RCC_CFGR+0
0x1710	0xFFFF000F  	#1048575
0x1714	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 431 :: 		
0x115C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 434 :: 		
0x115E	0x480D    LDR	R0, [PC, #52]
0x1160	0x6800    LDR	R0, [R0, #0]
0x1162	0xF0400101  ORR	R1, R0, #1
0x1166	0x480B    LDR	R0, [PC, #44]
0x1168	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 437 :: 		
0x116A	0x2100    MOVS	R1, #0
0x116C	0x480A    LDR	R0, [PC, #40]
0x116E	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 440 :: 		
0x1170	0x4808    LDR	R0, [PC, #32]
0x1172	0x6801    LDR	R1, [R0, #0]
0x1174	0x4809    LDR	R0, [PC, #36]
0x1176	0x4001    ANDS	R1, R0
0x1178	0x4806    LDR	R0, [PC, #24]
0x117A	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 443 :: 		
0x117C	0x4908    LDR	R1, [PC, #32]
0x117E	0x4809    LDR	R0, [PC, #36]
0x1180	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 446 :: 		
0x1182	0x4804    LDR	R0, [PC, #16]
0x1184	0x6801    LDR	R1, [R0, #0]
0x1186	0xF46F2080  MVN	R0, #262144
0x118A	0x4001    ANDS	R1, R0
0x118C	0x4801    LDR	R0, [PC, #4]
0x118E	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
L_end_SystemClockSetDefault:
0x1190	0xB001    ADD	SP, SP, #4
0x1192	0x4770    BX	LR
0x1194	0x38004002  	RCC_CR+0
0x1198	0x38084002  	RCC_CFGR+0
0x119C	0xFFFFFEF6  	#-17367041
0x11A0	0x30102400  	#603992080
0x11A4	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 369 :: 		
0x1354	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 370 :: 		
0x1356	0x4904    LDR	R1, [PC, #16]
0x1358	0x4804    LDR	R0, [PC, #16]
0x135A	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 371 :: 		
0x135C	0x4904    LDR	R1, [PC, #16]
0x135E	0x4805    LDR	R0, [PC, #20]
0x1360	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
L_end_InitialSetUpFosc:
0x1362	0xB001    ADD	SP, SP, #4
0x1364	0x4770    BX	LR
0x1366	0xBF00    NOP
0x1368	0x7D000000  	#32000
0x136C	0x01002000  	___System_CLOCK_IN_KHZ+0
0x1370	0x00030000  	#3
0x1374	0x01042000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 314 :: 		
0x1264	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 315 :: 		
L___GenExcept27:
0x1266	0xE7FE    B	L___GenExcept27
;__Lib_System_4XX.c, 316 :: 		
L_end___GenExcept:
0x1268	0xB001    ADD	SP, SP, #4
0x126A	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 347 :: 		
0x1800	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 350 :: 		
0x1802	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 351 :: 		
0x1806	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 353 :: 		
0x180A	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 355 :: 		
0x180C	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 357 :: 		
0x1810	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 359 :: 		
0x1812	0xBF00    NOP
;__Lib_System_4XX.c, 360 :: 		
0x1814	0xBF00    NOP
;__Lib_System_4XX.c, 361 :: 		
0x1816	0xBF00    NOP
;__Lib_System_4XX.c, 362 :: 		
0x1818	0xBF00    NOP
;__Lib_System_4XX.c, 364 :: 		
0x181A	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 365 :: 		
0x181E	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 366 :: 		
0x1822	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 367 :: 		
L_end___EnableFPU:
0x1826	0xB001    ADD	SP, SP, #4
0x1828	0x4770    BX	LR
; end of ___EnableFPU
0x1AF4	0xB500    PUSH	(R14)
0x1AF6	0xF8DFB034  LDR	R11, [PC, #52]
0x1AFA	0xF8DFA034  LDR	R10, [PC, #52]
0x1AFE	0xF8DFC034  LDR	R12, [PC, #52]
0x1B02	0xF7FFFB89  BL	4632
0x1B06	0xF8DFB030  LDR	R11, [PC, #48]
0x1B0A	0xF8DFA030  LDR	R10, [PC, #48]
0x1B0E	0xF8DFC030  LDR	R12, [PC, #48]
0x1B12	0xF7FFFB81  BL	4632
0x1B16	0xF8DFB02C  LDR	R11, [PC, #44]
0x1B1A	0xF8DFA02C  LDR	R10, [PC, #44]
0x1B1E	0xF8DFC02C  LDR	R12, [PC, #44]
0x1B22	0xF7FFFB79  BL	4632
0x1B26	0xBD00    POP	(R15)
0x1B28	0x4770    BX	LR
0x1B2A	0xBF00    NOP
0x1B2C	0x00002000  	#536870912
0x1B30	0x00372000  	#536870967
0x1B34	0x196A0000  	#6506
0x1B38	0x00382000  	#536870968
0x1B3C	0x00D52000  	#536871125
0x1B40	0x18CC0000  	#6348
0x1B44	0x00D62000  	#536871126
0x1B48	0x00FE2000  	#536871166
0x1B4C	0x19A20000  	#6562
0x1BAC	0xB500    PUSH	(R14)
0x1BAE	0xF8DFB010  LDR	R11, [PC, #16]
0x1BB2	0xF8DFA010  LDR	R10, [PC, #16]
0x1BB6	0xF7FFFB11  BL	4572
0x1BBA	0xBD00    POP	(R15)
0x1BBC	0x4770    BX	LR
0x1BBE	0xBF00    NOP
0x1BC0	0x00002000  	#536870912
0x1BC4	0x03682000  	#536871784
_UART_Interrupt:
;main.c, 153 :: 		void UART_Interrupt() iv IVT_INT_UART4  {
0x182C	0xB4B0    PUSH	(R4, R5, R7)
0x182E	0xB081    SUB	SP, SP, #4
0x1830	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 155 :: 		if(UART4_SR & 0x20){
0x1834	0x481E    LDR	R0, [PC, #120]
0x1836	0x6800    LDR	R0, [R0, #0]
0x1838	0xF0000020  AND	R0, R0, #32
0x183C	0xB1C8    CBZ	R0, L_UART_Interrupt26
;main.c, 156 :: 		uart_rd = ((char)(UART4_DR & 0x01FF));
0x183E	0x481D    LDR	R0, [PC, #116]
0x1840	0x6801    LDR	R1, [R0, #0]
0x1842	0xF24010FF  MOVW	R0, #511
0x1846	0xEA010000  AND	R0, R1, R0, LSL #0
0x184A	0xB2C1    UXTB	R1, R0
0x184C	0x481A    LDR	R0, [PC, #104]
0x184E	0x7001    STRB	R1, [R0, #0]
;main.c, 157 :: 		LCD_CLEAR_SCREEN();
0x1850	0xF7FFFC6A  BL	_LCD_CLEAR_SCREEN+0
;main.c, 158 :: 		LCD_PRINT_CHAR(uart_rd);
0x1854	0x4818    LDR	R0, [PC, #96]
0x1856	0x7800    LDRB	R0, [R0, #0]
0x1858	0xF7FFF978  BL	_LCD_PRINT_CHAR+0
;main.c, 159 :: 		LCD_PRINT_STRING(" -> ");
0x185C	0x4817    LDR	R0, [PC, #92]
0x185E	0xF7FFF999  BL	_LCD_PRINT_STRING+0
;main.c, 160 :: 		convert(uart_rd);
0x1862	0x4815    LDR	R0, [PC, #84]
0x1864	0x7800    LDRB	R0, [R0, #0]
0x1866	0xF7FFFBBD  BL	_convert+0
;main.c, 161 :: 		LCD_PRINT_STRING(letter);
0x186A	0x4815    LDR	R0, [PC, #84]
0x186C	0xF7FFF992  BL	_LCD_PRINT_STRING+0
;main.c, 162 :: 		}
0x1870	0xE013    B	L_UART_Interrupt27
L_UART_Interrupt26:
;main.c, 163 :: 		else if( UART4_SR & 0x80){
0x1872	0x480F    LDR	R0, [PC, #60]
0x1874	0x6800    LDR	R0, [R0, #0]
0x1876	0xF0000080  AND	R0, R0, #128
0x187A	0xB170    CBZ	R0, L_UART_Interrupt28
;main.c, 164 :: 		UART4_CR1 &= ~(1UL << 7);         // disable TXEIE bit
0x187C	0x4811    LDR	R0, [PC, #68]
0x187E	0x6800    LDR	R0, [R0, #0]
0x1880	0xF000017F  AND	R1, R0, #127
0x1884	0x480F    LDR	R0, [PC, #60]
0x1886	0x6001    STR	R1, [R0, #0]
;main.c, 165 :: 		UART4_DR = (uart_tr & 0x01FF);
0x1888	0x480F    LDR	R0, [PC, #60]
0x188A	0x7801    LDRB	R1, [R0, #0]
0x188C	0xF24010FF  MOVW	R0, #511
0x1890	0xB200    SXTH	R0, R0
0x1892	0x4001    ANDS	R1, R0
0x1894	0xB209    SXTH	R1, R1
0x1896	0x4807    LDR	R0, [PC, #28]
0x1898	0x6001    STR	R1, [R0, #0]
;main.c, 166 :: 		}
L_UART_Interrupt28:
L_UART_Interrupt27:
;main.c, 168 :: 		UART4_CR1 |= (1UL << 13);             // Enable UART  (when we write UART4_DR , we reset this bit , so we must enable uart again!!!!!!
0x189A	0x480A    LDR	R0, [PC, #40]
0x189C	0x6800    LDR	R0, [R0, #0]
0x189E	0xF4405100  ORR	R1, R0, #8192
0x18A2	0x4808    LDR	R0, [PC, #32]
0x18A4	0x6001    STR	R1, [R0, #0]
;main.c, 170 :: 		}
L_end_UART_Interrupt:
0x18A6	0xF8DDE000  LDR	LR, [SP, #0]
0x18AA	0xB001    ADD	SP, SP, #4
0x18AC	0xBCB0    POP	(R4, R5, R7)
0x18AE	0x4770    BX	LR
0x18B0	0x4C004000  	UART4_SR+0
0x18B4	0x4C044000  	UART4_DR+0
0x18B8	0x00372000  	_uart_rd+0
0x18BC	0x00302000  	?lstr40_main+0
0x18C0	0x01082000  	_letter+0
0x18C4	0x4C0C4000  	UART4_CR1+0
0x18C8	0x00D52000  	_uart_tr+0
; end of _UART_Interrupt
_LCD_CLEAR_SCREEN:
;lcd.c, 228 :: 		void LCD_CLEAR_SCREEN(void){
0x1128	0xB081    SUB	SP, SP, #4
0x112A	0xF8CDE000  STR	LR, [SP, #0]
;lcd.c, 229 :: 		cursor_pos = 0;
0x112E	0x2100    MOVS	R1, #0
0x1130	0x4809    LDR	R0, [PC, #36]
0x1132	0x8001    STRH	R1, [R0, #0]
;lcd.c, 230 :: 		lcd_Control_Write(LCD_CLEAR_DISPLAY);
0x1134	0x2001    MOVS	R0, #1
0x1136	0xF7FFFEE3  BL	_lcd_Control_Write+0
;lcd.c, 231 :: 		Delay_ms(10);
0x113A	0xF24A07A9  MOVW	R7, #41129
0x113E	0xF2C00701  MOVT	R7, #1
L_LCD_CLEAR_SCREEN55:
0x1142	0x1E7F    SUBS	R7, R7, #1
0x1144	0xD1FD    BNE	L_LCD_CLEAR_SCREEN55
0x1146	0xBF00    NOP
0x1148	0xBF00    NOP
0x114A	0xBF00    NOP
0x114C	0xBF00    NOP
;lcd.c, 232 :: 		}
L_end_LCD_CLEAR_SCREEN:
0x114E	0xF8DDE000  LDR	LR, [SP, #0]
0x1152	0xB001    ADD	SP, SP, #4
0x1154	0x4770    BX	LR
0x1156	0xBF00    NOP
0x1158	0x00022000  	_cursor_pos+0
; end of _LCD_CLEAR_SCREEN
_LCD_PRINT_CHAR:
;lcd.c, 251 :: 		void LCD_PRINT_CHAR(char d){
; d start address is: 0 (R0)
0x0B4C	0xB081    SUB	SP, SP, #4
0x0B4E	0xF8CDE000  STR	LR, [SP, #0]
0x0B52	0xB2C5    UXTB	R5, R0
; d end address is: 0 (R0)
; d start address is: 20 (R5)
;lcd.c, 253 :: 		if(cursor_pos == 16)
0x0B54	0x490E    LDR	R1, [PC, #56]
0x0B56	0x8809    LDRH	R1, [R1, #0]
0x0B58	0x2910    CMP	R1, #16
0x0B5A	0xD104    BNE	L_LCD_PRINT_CHAR63
;lcd.c, 254 :: 		LCD_CURSOR(1,0);
0x0B5C	0x2100    MOVS	R1, #0
0x0B5E	0x2001    MOVS	R0, #1
0x0B60	0xF7FFFE7A  BL	_LCD_CURSOR+0
0x0B64	0xE007    B	L_LCD_PRINT_CHAR64
L_LCD_PRINT_CHAR63:
;lcd.c, 255 :: 		else if (cursor_pos == 32)
0x0B66	0x490A    LDR	R1, [PC, #40]
0x0B68	0x8809    LDRH	R1, [R1, #0]
0x0B6A	0x2920    CMP	R1, #32
0x0B6C	0xD103    BNE	L_LCD_PRINT_CHAR65
;lcd.c, 256 :: 		LCD_CURSOR(0,0);
0x0B6E	0x2100    MOVS	R1, #0
0x0B70	0x2000    MOVS	R0, #0
0x0B72	0xF7FFFE71  BL	_LCD_CURSOR+0
L_LCD_PRINT_CHAR65:
L_LCD_PRINT_CHAR64:
;lcd.c, 257 :: 		cursor_pos++;
0x0B76	0x4906    LDR	R1, [PC, #24]
0x0B78	0x8809    LDRH	R1, [R1, #0]
0x0B7A	0x1C4A    ADDS	R2, R1, #1
0x0B7C	0x4904    LDR	R1, [PC, #16]
0x0B7E	0x800A    STRH	R2, [R1, #0]
;lcd.c, 258 :: 		if(d != '\0')
0x0B80	0xB115    CBZ	R5, L_LCD_PRINT_CHAR66
;lcd.c, 259 :: 		lcd_Data_Write(d);
0x0B82	0xB2E8    UXTB	R0, R5
; d end address is: 20 (R5)
0x0B84	0xF7FFFD98  BL	_lcd_Data_Write+0
L_LCD_PRINT_CHAR66:
;lcd.c, 260 :: 		}
L_end_LCD_PRINT_CHAR:
0x0B88	0xF8DDE000  LDR	LR, [SP, #0]
0x0B8C	0xB001    ADD	SP, SP, #4
0x0B8E	0x4770    BX	LR
0x0B90	0x00022000  	_cursor_pos+0
; end of _LCD_PRINT_CHAR
_LCD_CURSOR:
;lcd.c, 192 :: 		void LCD_CURSOR(char x, char y){
; y start address is: 4 (R1)
; x start address is: 0 (R0)
0x0858	0xB081    SUB	SP, SP, #4
0x085A	0xF8CDE000  STR	LR, [SP, #0]
0x085E	0xB2C3    UXTB	R3, R0
0x0860	0xB2CC    UXTB	R4, R1
; y end address is: 4 (R1)
; x end address is: 0 (R0)
; x start address is: 12 (R3)
; y start address is: 16 (R4)
;lcd.c, 194 :: 		switch(x){
0x0862	0xE007    B	L_LCD_CURSOR38
;lcd.c, 195 :: 		case 0:  pos = y;      break;
L_LCD_CURSOR40:
; pos start address is: 0 (R0)
0x0864	0xB2E0    UXTB	R0, R4
; pos end address is: 0 (R0)
0x0866	0xE00A    B	L_LCD_CURSOR39
;lcd.c, 196 :: 		case 1:  pos = 0x40+y; break;
L_LCD_CURSOR41:
0x0868	0xF2040240  ADDW	R2, R4, #64
; pos start address is: 0 (R0)
0x086C	0xB2D0    UXTB	R0, R2
; pos end address is: 0 (R0)
0x086E	0xE006    B	L_LCD_CURSOR39
;lcd.c, 197 :: 		default: pos = y;      break;
L_LCD_CURSOR42:
; pos start address is: 0 (R0)
0x0870	0xB2E0    UXTB	R0, R4
; pos end address is: 0 (R0)
0x0872	0xE004    B	L_LCD_CURSOR39
;lcd.c, 198 :: 		}
L_LCD_CURSOR38:
0x0874	0x2B00    CMP	R3, #0
0x0876	0xD0F5    BEQ	L_LCD_CURSOR40
0x0878	0x2B01    CMP	R3, #1
0x087A	0xD0F5    BEQ	L_LCD_CURSOR41
0x087C	0xE7F8    B	L_LCD_CURSOR42
L_LCD_CURSOR39:
;lcd.c, 200 :: 		lcd_Control_Write(0x80 | pos);
; pos start address is: 0 (R0)
0x087E	0xF0400280  ORR	R2, R0, #128
; pos end address is: 0 (R0)
0x0882	0xB2D0    UXTB	R0, R2
0x0884	0xF000FB3C  BL	_lcd_Control_Write+0
;lcd.c, 201 :: 		cursor_pos = 16 * x + y;
0x0888	0x011A    LSLS	R2, R3, #4
0x088A	0xB212    SXTH	R2, R2
; x end address is: 12 (R3)
0x088C	0x1913    ADDS	R3, R2, R4
; y end address is: 16 (R4)
0x088E	0x4A08    LDR	R2, [PC, #32]
0x0890	0x8013    STRH	R3, [R2, #0]
;lcd.c, 202 :: 		Delay_ms(10);
0x0892	0xF24A07A9  MOVW	R7, #41129
0x0896	0xF2C00701  MOVT	R7, #1
L_LCD_CURSOR43:
0x089A	0x1E7F    SUBS	R7, R7, #1
0x089C	0xD1FD    BNE	L_LCD_CURSOR43
0x089E	0xBF00    NOP
0x08A0	0xBF00    NOP
0x08A2	0xBF00    NOP
0x08A4	0xBF00    NOP
;lcd.c, 203 :: 		}
L_end_LCD_CURSOR:
0x08A6	0xF8DDE000  LDR	LR, [SP, #0]
0x08AA	0xB001    ADD	SP, SP, #4
0x08AC	0x4770    BX	LR
0x08AE	0xBF00    NOP
0x08B0	0x00022000  	_cursor_pos+0
; end of _LCD_CURSOR
_lcd_Data_Write:
;lcd.c, 155 :: 		void lcd_Data_Write(char d){
; d start address is: 0 (R0)
0x06B8	0xB081    SUB	SP, SP, #4
0x06BA	0xF8CDE000  STR	LR, [SP, #0]
0x06BE	0xB2C2    UXTB	R2, R0
; d end address is: 0 (R0)
; d start address is: 8 (R2)
;lcd.c, 156 :: 		set_lcd_rs();
0x06C0	0xF7FFFDBC  BL	_set_lcd_rs+0
;lcd.c, 157 :: 		lcd_data_line_write(d);
0x06C4	0xB2D0    UXTB	R0, R2
; d end address is: 8 (R2)
0x06C6	0xF000F9A7  BL	_lcd_data_line_write+0
;lcd.c, 158 :: 		Delay_us(50);
0x06CA	0xF2402713  MOVW	R7, #531
0x06CE	0xF2C00700  MOVT	R7, #0
L_lcd_Data_Write18:
0x06D2	0x1E7F    SUBS	R7, R7, #1
0x06D4	0xD1FD    BNE	L_lcd_Data_Write18
0x06D6	0xBF00    NOP
0x06D8	0xBF00    NOP
0x06DA	0xBF00    NOP
0x06DC	0xBF00    NOP
0x06DE	0xBF00    NOP
0x06E0	0xBF00    NOP
;lcd.c, 159 :: 		}
L_end_lcd_Data_Write:
0x06E2	0xF8DDE000  LDR	LR, [SP, #0]
0x06E6	0xB001    ADD	SP, SP, #4
0x06E8	0x4770    BX	LR
; end of _lcd_Data_Write
_set_lcd_rs:
;lcd.c, 10 :: 		void set_lcd_rs()  { GPIOC_ODR |=  (1UL << LCD_RS_PIN); }
0x023C	0x4803    LDR	R0, [PC, #12]
0x023E	0x6800    LDR	R0, [R0, #0]
0x0240	0xF0400110  ORR	R1, R0, #16
0x0244	0x4801    LDR	R0, [PC, #4]
0x0246	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_rs:
0x0248	0x4770    BX	LR
0x024A	0xBF00    NOP
0x024C	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_rs
_LCD_PRINT_STRING:
;lcd.c, 244 :: 		void LCD_PRINT_STRING(char* d){
; d start address is: 0 (R0)
0x0B94	0xB081    SUB	SP, SP, #4
0x0B96	0xF8CDE000  STR	LR, [SP, #0]
; d end address is: 0 (R0)
; d start address is: 0 (R0)
0x0B9A	0x4603    MOV	R3, R0
; d end address is: 0 (R0)
;lcd.c, 245 :: 		while(*d){
L_LCD_PRINT_STRING61:
; d start address is: 12 (R3)
0x0B9C	0x7819    LDRB	R1, [R3, #0]
0x0B9E	0xB129    CBZ	R1, L_LCD_PRINT_STRING62
;lcd.c, 246 :: 		lcd_Data_Write(*d);
0x0BA0	0x7819    LDRB	R1, [R3, #0]
0x0BA2	0xB2C8    UXTB	R0, R1
0x0BA4	0xF7FFFD88  BL	_lcd_Data_Write+0
;lcd.c, 247 :: 		d++;
0x0BA8	0x1C5B    ADDS	R3, R3, #1
;lcd.c, 248 :: 		}
; d end address is: 12 (R3)
0x0BAA	0xE7F7    B	L_LCD_PRINT_STRING61
L_LCD_PRINT_STRING62:
;lcd.c, 249 :: 		}
L_end_LCD_PRINT_STRING:
0x0BAC	0xF8DDE000  LDR	LR, [SP, #0]
0x0BB0	0xB001    ADD	SP, SP, #4
0x0BB2	0x4770    BX	LR
; end of _LCD_PRINT_STRING
_convert:
;uart.c, 140 :: 		int convert(char c){
; c start address is: 0 (R0)
0x0FE4	0xB081    SUB	SP, SP, #4
0x0FE6	0xF8CDE000  STR	LR, [SP, #0]
0x0FEA	0xB2C2    UXTB	R2, R0
; c end address is: 0 (R0)
; c start address is: 8 (R2)
;uart.c, 141 :: 		if(charToInt(c) == -1) strcpy(letter, "!");
0x0FEC	0xB2D0    UXTB	R0, R2
0x0FEE	0xF7FFFD75  BL	_charToInt+0
0x0FF2	0xF1B03FFF  CMP	R0, #-1
0x0FF6	0xD104    BNE	L_convert19
; c end address is: 8 (R2)
0x0FF8	0x4909    LDR	R1, [PC, #36]
0x0FFA	0x480A    LDR	R0, [PC, #40]
0x0FFC	0xF7FFFD92  BL	_strcpy+0
0x1000	0xE009    B	L_convert20
L_convert19:
;uart.c, 142 :: 		else strcpy(letter, alpha[charToInt(c)]);
; c start address is: 8 (R2)
0x1002	0xB2D0    UXTB	R0, R2
; c end address is: 8 (R2)
0x1004	0xF7FFFD6A  BL	_charToInt+0
0x1008	0x0082    LSLS	R2, R0, #2
0x100A	0x4907    LDR	R1, [PC, #28]
0x100C	0x1889    ADDS	R1, R1, R2
0x100E	0x6809    LDR	R1, [R1, #0]
0x1010	0x4804    LDR	R0, [PC, #16]
0x1012	0xF7FFFD87  BL	_strcpy+0
L_convert20:
;uart.c, 143 :: 		}
L_end_convert:
0x1016	0xF8DDE000  LDR	LR, [SP, #0]
0x101A	0xB001    ADD	SP, SP, #4
0x101C	0x4770    BX	LR
0x101E	0xBF00    NOP
0x1020	0x00352000  	?lstr37_uart+0
0x1024	0x01082000  	_letter+0
0x1028	0x00382000  	uart_alpha+0
; end of _convert
_charToInt:
;uart.c, 129 :: 		int charToInt(char c){
; c start address is: 0 (R0)
; c end address is: 0 (R0)
; c start address is: 0 (R0)
;uart.c, 130 :: 		if( c >= 48 && c <= 57)
0x0ADC	0x2830    CMP	R0, #48
0x0ADE	0xD305    BCC	L__charToInt46
0x0AE0	0x2839    CMP	R0, #57
0x0AE2	0xD803    BHI	L__charToInt45
L__charToInt44:
;uart.c, 131 :: 		return c - 48;
0x0AE4	0xF2A00130  SUBW	R1, R0, #48
; c end address is: 0 (R0)
0x0AE8	0xB208    SXTH	R0, R1
0x0AEA	0xE01A    B	L_end_charToInt
;uart.c, 130 :: 		if( c >= 48 && c <= 57)
L__charToInt46:
; c start address is: 0 (R0)
L__charToInt45:
;uart.c, 132 :: 		else if ((c >= 65 && c <= 90) || (c >= 97 && c <= 122)) {
0x0AEC	0x2841    CMP	R0, #65
0x0AEE	0xD302    BCC	L__charToInt48
0x0AF0	0x285A    CMP	R0, #90
0x0AF2	0xD800    BHI	L__charToInt47
0x0AF4	0xE005    B	L__charToInt41
L__charToInt48:
L__charToInt47:
0x0AF6	0x2861    CMP	R0, #97
0x0AF8	0xD302    BCC	L__charToInt50
0x0AFA	0x287A    CMP	R0, #122
0x0AFC	0xD800    BHI	L__charToInt49
0x0AFE	0xE000    B	L__charToInt41
; c end address is: 0 (R0)
L__charToInt50:
L__charToInt49:
0x0B00	0xE00C    B	L_charToInt14
L__charToInt41:
;uart.c, 133 :: 		if(c >= 97 && c <= 122)
; c start address is: 0 (R0)
0x0B02	0x2861    CMP	R0, #97
0x0B04	0xD305    BCC	L__charToInt53
0x0B06	0x287A    CMP	R0, #122
0x0B08	0xD804    BHI	L__charToInt54
L__charToInt40:
;uart.c, 134 :: 		c -= 'a'-'A';
0x0B0A	0xF2A00120  SUBW	R1, R0, #32
0x0B0E	0xB2C8    UXTB	R0, R1
; c end address is: 0 (R0)
;uart.c, 133 :: 		if(c >= 97 && c <= 122)
0x0B10	0xE7FF    B	L__charToInt52
L__charToInt53:
L__charToInt52:
; c start address is: 0 (R0)
; c end address is: 0 (R0)
0x0B12	0xE7FF    B	L__charToInt51
L__charToInt54:
L__charToInt51:
;uart.c, 135 :: 		return c - 55;
; c start address is: 0 (R0)
0x0B14	0xF2A00137  SUBW	R1, R0, #55
; c end address is: 0 (R0)
0x0B18	0xB208    SXTH	R0, R1
0x0B1A	0xE002    B	L_end_charToInt
;uart.c, 136 :: 		}
L_charToInt14:
;uart.c, 137 :: 		else return -1;
0x0B1C	0xF64F70FF  MOVW	R0, #65535
0x0B20	0xB200    SXTH	R0, R0
;uart.c, 138 :: 		}
L_end_charToInt:
0x0B22	0x4770    BX	LR
; end of _charToInt
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x0B24	0xB081    SUB	SP, SP, #4
0x0B26	0x9100    STR	R1, [SP, #0]
0x0B28	0x4601    MOV	R1, R0
0x0B2A	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x0B2C	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x0B2E	0x461C    MOV	R4, R3
0x0B30	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x0B32	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x0B34	0x4603    MOV	R3, R0
0x0B36	0x1C42    ADDS	R2, R0, #1
0x0B38	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x0B3A	0x781A    LDRB	R2, [R3, #0]
0x0B3C	0x7022    STRB	R2, [R4, #0]
0x0B3E	0x7822    LDRB	R2, [R4, #0]
0x0B40	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x0B42	0x462B    MOV	R3, R5
0x0B44	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x0B46	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x0B48	0xB001    ADD	SP, SP, #4
0x0B4A	0x4770    BX	LR
; end of _strcpy
_Timer2_Interrupt:
;main.c, 173 :: 		void Timer2_Interrupt() iv IVT_INT_TIM2 {
0x1378	0xF84D7D04  PUSH	(R7)
0x137C	0xB081    SUB	SP, SP, #4
0x137E	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 174 :: 		if(TIM2_SR){
0x1382	0x480A    LDR	R0, [PC, #40]
0x1384	0x6800    LDR	R0, [R0, #0]
0x1386	0xB140    CBZ	R0, L_Timer2_Interrupt29
;main.c, 175 :: 		currentTime++;
0x1388	0x4809    LDR	R0, [PC, #36]
0x138A	0x8800    LDRH	R0, [R0, #0]
0x138C	0x1C41    ADDS	R1, R0, #1
0x138E	0x4808    LDR	R0, [PC, #32]
0x1390	0x8001    STRH	R1, [R0, #0]
;main.c, 176 :: 		TIM2_SR = 0x00;
0x1392	0x2100    MOVS	R1, #0
0x1394	0x4805    LDR	R0, [PC, #20]
0x1396	0x6001    STR	R1, [R0, #0]
;main.c, 177 :: 		}else{
0x1398	0xE002    B	L_Timer2_Interrupt30
L_Timer2_Interrupt29:
;main.c, 178 :: 		LCD_PRINT_STRING("Timer2 Error");
0x139A	0x4806    LDR	R0, [PC, #24]
0x139C	0xF7FFFBFA  BL	_LCD_PRINT_STRING+0
;main.c, 179 :: 		}
L_Timer2_Interrupt30:
;main.c, 180 :: 		}
L_end_Timer2_Interrupt:
0x13A0	0xF8DDE000  LDR	LR, [SP, #0]
0x13A4	0xB001    ADD	SP, SP, #4
0x13A6	0xF85D7B04  POP	(R7)
0x13AA	0x4770    BX	LR
0x13AC	0x00104000  	TIM2_SR+0
0x13B0	0x00002000  	_currentTime+0
0x13B4	0x00C82000  	?lstr41_main+0
; end of _Timer2_Interrupt
_Button1_Interrupt:
;main.c, 98 :: 		void Button1_Interrupt() iv IVT_INT_EXTI0 {
0x1718	0xB4B0    PUSH	(R4, R5, R7)
0x171A	0xB081    SUB	SP, SP, #4
0x171C	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 99 :: 		Delay_ms(10);
0x1720	0xF24A07A9  MOVW	R7, #41129
0x1724	0xF2C00701  MOVT	R7, #1
L_Button1_Interrupt8:
0x1728	0x1E7F    SUBS	R7, R7, #1
0x172A	0xD1FD    BNE	L_Button1_Interrupt8
0x172C	0xBF00    NOP
0x172E	0xBF00    NOP
0x1730	0xBF00    NOP
0x1732	0xBF00    NOP
;main.c, 101 :: 		if( EXTI_FTSR & (1UL)){         // is Button PE0 pressed
0x1734	0x4829    LDR	R0, [PC, #164]
0x1736	0x6800    LDR	R0, [R0, #0]
0x1738	0xF0000001  AND	R0, R0, #1
0x173C	0xB188    CBZ	R0, L_Button1_Interrupt10
;main.c, 102 :: 		riseTimeB1 = currentTime;
0x173E	0x4828    LDR	R0, [PC, #160]
0x1740	0x8801    LDRH	R1, [R0, #0]
0x1742	0x4828    LDR	R0, [PC, #160]
0x1744	0x8001    STRH	R1, [R0, #0]
;main.c, 103 :: 		EXTI_FTSR &= ~(1UL);
0x1746	0x4825    LDR	R0, [PC, #148]
0x1748	0x6801    LDR	R1, [R0, #0]
0x174A	0xF06F0001  MVN	R0, #1
0x174E	0x4001    ANDS	R1, R0
0x1750	0x4822    LDR	R0, [PC, #136]
0x1752	0x6001    STR	R1, [R0, #0]
;main.c, 104 :: 		EXTI_RTSR |= 1 ;
0x1754	0x4824    LDR	R0, [PC, #144]
0x1756	0x6800    LDR	R0, [R0, #0]
0x1758	0xF0400101  ORR	R1, R0, #1
0x175C	0x4822    LDR	R0, [PC, #136]
0x175E	0x6001    STR	R1, [R0, #0]
;main.c, 105 :: 		}
0x1760	0xE02E    B	L_Button1_Interrupt11
L_Button1_Interrupt10:
;main.c, 106 :: 		else if ( EXTI_RTSR & (1UL)){    // is Button PE0 realesed
0x1762	0x4821    LDR	R0, [PC, #132]
0x1764	0x6800    LDR	R0, [R0, #0]
0x1766	0xF0000001  AND	R0, R0, #1
0x176A	0x2800    CMP	R0, #0
0x176C	0xD025    BEQ	L_Button1_Interrupt12
;main.c, 107 :: 		if(letter_cnt == 0) LCD_CLEAR_SCREEN();
0x176E	0x481F    LDR	R0, [PC, #124]
0x1770	0x8800    LDRH	R0, [R0, #0]
0x1772	0xB908    CBNZ	R0, L_Button1_Interrupt13
0x1774	0xF7FFFCD8  BL	_LCD_CLEAR_SCREEN+0
L_Button1_Interrupt13:
;main.c, 108 :: 		fallTimeB1 = currentTime;
0x1778	0x4819    LDR	R0, [PC, #100]
0x177A	0x8801    LDRH	R1, [R0, #0]
0x177C	0x481C    LDR	R0, [PC, #112]
0x177E	0x8001    STRH	R1, [R0, #0]
;main.c, 109 :: 		EXTI_RTSR &= ~(1UL);
0x1780	0x4819    LDR	R0, [PC, #100]
0x1782	0x6801    LDR	R1, [R0, #0]
0x1784	0xF06F0001  MVN	R0, #1
0x1788	0x4001    ANDS	R1, R0
0x178A	0x4817    LDR	R0, [PC, #92]
0x178C	0x6001    STR	R1, [R0, #0]
;main.c, 110 :: 		EXTI_FTSR |= 1 ;
0x178E	0x4813    LDR	R0, [PC, #76]
0x1790	0x6800    LDR	R0, [R0, #0]
0x1792	0xF0400101  ORR	R1, R0, #1
0x1796	0x4811    LDR	R0, [PC, #68]
0x1798	0x6001    STR	R1, [R0, #0]
;main.c, 112 :: 		if(fallTimeB1 - riseTimeB1 < DASH_TIME)   // DOT
0x179A	0x4812    LDR	R0, [PC, #72]
0x179C	0x8801    LDRH	R1, [R0, #0]
0x179E	0x4814    LDR	R0, [PC, #80]
0x17A0	0x8800    LDRH	R0, [R0, #0]
0x17A2	0x1A40    SUB	R0, R0, R1
0x17A4	0xB280    UXTH	R0, R0
0x17A6	0x2802    CMP	R0, #2
0x17A8	0xD203    BCS	L_Button1_Interrupt14
;main.c, 113 :: 		fnc(DOT);
0x17AA	0x202E    MOVS	R0, #46
0x17AC	0xF7FFFC88  BL	_fnc+0
0x17B0	0xE002    B	L_Button1_Interrupt15
L_Button1_Interrupt14:
;main.c, 115 :: 		fnc(DASH);
0x17B2	0x202D    MOVS	R0, #45
0x17B4	0xF7FFFC84  BL	_fnc+0
L_Button1_Interrupt15:
;main.c, 116 :: 		} else{
0x17B8	0xE002    B	L_Button1_Interrupt16
L_Button1_Interrupt12:
;main.c, 117 :: 		LCD_PRINT_STRING("Button1 Error");
0x17BA	0x480E    LDR	R0, [PC, #56]
0x17BC	0xF7FFF9EA  BL	_LCD_PRINT_STRING+0
;main.c, 118 :: 		}
L_Button1_Interrupt16:
L_Button1_Interrupt11:
;main.c, 120 :: 		EXTI_PR  = 0x01;                             // clear interraput    -- Pending bit
0x17C0	0x2101    MOVS	R1, #1
0x17C2	0x480D    LDR	R0, [PC, #52]
0x17C4	0x6001    STR	R1, [R0, #0]
;main.c, 121 :: 		EXTI_IMR |= 1;
0x17C6	0x480D    LDR	R0, [PC, #52]
0x17C8	0x6800    LDR	R0, [R0, #0]
0x17CA	0xF0400101  ORR	R1, R0, #1
0x17CE	0x480B    LDR	R0, [PC, #44]
0x17D0	0x6001    STR	R1, [R0, #0]
;main.c, 122 :: 		}
L_end_Button1_Interrupt:
0x17D2	0xF8DDE000  LDR	LR, [SP, #0]
0x17D6	0xB001    ADD	SP, SP, #4
0x17D8	0xBCB0    POP	(R4, R5, R7)
0x17DA	0x4770    BX	LR
0x17DC	0x3C0C4001  	EXTI_FTSR+0
0x17E0	0x00002000  	_currentTime+0
0x17E4	0x00D62000  	_riseTimeB1+0
0x17E8	0x3C084001  	EXTI_RTSR+0
0x17EC	0x00FE2000  	_letter_cnt+0
0x17F0	0x00D82000  	_fallTimeB1+0
0x17F4	0x00DA2000  	?lstr38_main+0
0x17F8	0x3C144001  	EXTI_PR+0
0x17FC	0x3C004001  	EXTI_IMR+0
; end of _Button1_Interrupt
_fnc:
;uart.c, 202 :: 		void fnc(char DD){
; DD start address is: 0 (R0)
0x10C0	0xB082    SUB	SP, SP, #8
0x10C2	0xF8CDE000  STR	LR, [SP, #0]
; DD end address is: 0 (R0)
; DD start address is: 0 (R0)
;uart.c, 203 :: 		LED_2 = 1;
0x10C6	0x2201    MOVS	R2, #1
0x10C8	0xB252    SXTB	R2, R2
0x10CA	0x4912    LDR	R1, [PC, #72]
0x10CC	0x600A    STR	R2, [R1, #0]
;uart.c, 204 :: 		LED_1 = DD == DOT ? 0 : 1;
0x10CE	0x282E    CMP	R0, #46
0x10D0	0xD102    BNE	L_fnc37
; ?FLOC___fnc?T159 start address is: 8 (R2)
0x10D2	0x2200    MOVS	R2, #0
0x10D4	0xB252    SXTB	R2, R2
; ?FLOC___fnc?T159 end address is: 8 (R2)
0x10D6	0xE001    B	L_fnc38
L_fnc37:
; ?FLOC___fnc?T159 start address is: 8 (R2)
0x10D8	0x2201    MOVS	R2, #1
0x10DA	0xB252    SXTB	R2, R2
; ?FLOC___fnc?T159 end address is: 8 (R2)
L_fnc38:
; ?FLOC___fnc?T159 start address is: 8 (R2)
0x10DC	0x490E    LDR	R1, [PC, #56]
0x10DE	0x600A    STR	R2, [R1, #0]
; ?FLOC___fnc?T159 end address is: 8 (R2)
;uart.c, 205 :: 		LCD_PRINT_CHAR(DD);
0x10E0	0xF88D0004  STRB	R0, [SP, #4]
0x10E4	0xF7FFFD32  BL	_LCD_PRINT_CHAR+0
0x10E8	0xF89D0004  LDRB	R0, [SP, #4]
;uart.c, 206 :: 		letter[letter_cnt++] = DD;
0x10EC	0x490B    LDR	R1, [PC, #44]
0x10EE	0x880A    LDRH	R2, [R1, #0]
0x10F0	0x490B    LDR	R1, [PC, #44]
0x10F2	0x1889    ADDS	R1, R1, R2
0x10F4	0x7008    STRB	R0, [R1, #0]
; DD end address is: 0 (R0)
0x10F6	0x4909    LDR	R1, [PC, #36]
0x10F8	0x8809    LDRH	R1, [R1, #0]
0x10FA	0x1C4A    ADDS	R2, R1, #1
0x10FC	0x4907    LDR	R1, [PC, #28]
0x10FE	0x800A    STRH	R2, [R1, #0]
;uart.c, 207 :: 		if(letter_cnt == 5)
0x1100	0x4906    LDR	R1, [PC, #24]
0x1102	0x8809    LDRH	R1, [R1, #0]
0x1104	0x2905    CMP	R1, #5
0x1106	0xD101    BNE	L_fnc39
;uart.c, 208 :: 		translate();
0x1108	0xF7FFFF90  BL	_translate+0
L_fnc39:
;uart.c, 209 :: 		}
L_end_fnc:
0x110C	0xF8DDE000  LDR	LR, [SP, #0]
0x1110	0xB002    ADD	SP, SP, #8
0x1112	0x4770    BX	LR
0x1114	0x02BC4242  	GPIOE_ODR+0
0x1118	0x02B04242  	GPIOE_ODR+0
0x111C	0x00FE2000  	_letter_cnt+0
0x1120	0x01082000  	_letter+0
; end of _fnc
_translate:
;uart.c, 181 :: 		void translate(){
0x102C	0xB082    SUB	SP, SP, #8
0x102E	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 184 :: 		letter[letter_cnt + 1] = '\0';
0x1032	0x481E    LDR	R0, [PC, #120]
0x1034	0x8800    LDRH	R0, [R0, #0]
0x1036	0x1C41    ADDS	R1, R0, #1
0x1038	0xB289    UXTH	R1, R1
0x103A	0x481D    LDR	R0, [PC, #116]
0x103C	0x1841    ADDS	R1, R0, R1
0x103E	0x2000    MOVS	R0, #0
0x1040	0x7008    STRB	R0, [R1, #0]
;uart.c, 185 :: 		temp = findLetter();
0x1042	0xF7FFFDE5  BL	_findLetter+0
0x1046	0xF8AD0004  STRH	R0, [SP, #4]
;uart.c, 187 :: 		LCD_PRINT_STRING(" = ");
0x104A	0x481A    LDR	R0, [PC, #104]
0x104C	0xF7FFFDA2  BL	_LCD_PRINT_STRING+0
;uart.c, 188 :: 		if(temp != -1){
0x1050	0xF9BD0004  LDRSH	R0, [SP, #4]
0x1054	0xF1B03FFF  CMP	R0, #-1
0x1058	0xD01A    BEQ	L_translate35
;uart.c, 189 :: 		strcpy(letters[letters_cnt++] ,letter);
0x105A	0x4817    LDR	R0, [PC, #92]
0x105C	0x8801    LDRH	R1, [R0, #0]
0x105E	0x2006    MOVS	R0, #6
0x1060	0x4341    MULS	R1, R0, R1
0x1062	0x4816    LDR	R0, [PC, #88]
0x1064	0x1840    ADDS	R0, R0, R1
0x1066	0x4912    LDR	R1, [PC, #72]
0x1068	0xF7FFFD5C  BL	_strcpy+0
0x106C	0x4812    LDR	R0, [PC, #72]
0x106E	0x8800    LDRH	R0, [R0, #0]
0x1070	0x1C41    ADDS	R1, R0, #1
0x1072	0x4811    LDR	R0, [PC, #68]
0x1074	0x8001    STRH	R1, [R0, #0]
;uart.c, 190 :: 		LCD_PRINT_CHAR(intToChar(temp));
0x1076	0xF9BD0004  LDRSH	R0, [SP, #4]
0x107A	0xF7FFFDE9  BL	_intToChar+0
0x107E	0xF7FFFD65  BL	_LCD_PRINT_CHAR+0
;uart.c, 191 :: 		SendCharInterrupt(intToChar(temp));
0x1082	0xF9BD0004  LDRSH	R0, [SP, #4]
0x1086	0xF7FFFDE3  BL	_intToChar+0
0x108A	0xF7FFFD95  BL	_SendCharInterrupt+0
;uart.c, 193 :: 		} else{                            //ERROR not found this sequence of dots and dashes
0x108E	0xE006    B	L_translate36
L_translate35:
;uart.c, 194 :: 		LCD_PRINT_STRING('!');
0x1090	0x2021    MOVS	R0, #33
0x1092	0xF7FFFD7F  BL	_LCD_PRINT_STRING+0
;uart.c, 195 :: 		SendCharInterrupt('!');
0x1096	0x2021    MOVS	R0, #33
0x1098	0xB200    SXTH	R0, R0
0x109A	0xF7FFFD8D  BL	_SendCharInterrupt+0
;uart.c, 196 :: 		}
L_translate36:
;uart.c, 197 :: 		clearLetter();
0x109E	0xF7FFFDA3  BL	_clearLetter+0
;uart.c, 200 :: 		}
L_end_translate:
0x10A2	0xF8DDE000  LDR	LR, [SP, #0]
0x10A6	0xB002    ADD	SP, SP, #8
0x10A8	0x4770    BX	LR
0x10AA	0xBF00    NOP
0x10AC	0x00FE2000  	_letter_cnt+0
0x10B0	0x01082000  	_letter+0
0x10B4	0x00E82000  	?lstr40_uart+0
0x10B8	0x03662000  	_letters_cnt+0
0x10BC	0x010E2000  	_letters+0
; end of _translate
_findLetter:
;uart.c, 157 :: 		int findLetter(){
0x0C10	0xB081    SUB	SP, SP, #4
0x0C12	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 159 :: 		for(i = 0; i < ALPHABET_SIZE; i++){
; i start address is: 16 (R4)
0x0C16	0x2400    MOVS	R4, #0
0x0C18	0xB224    SXTH	R4, R4
; i end address is: 16 (R4)
L_findLetter23:
; i start address is: 16 (R4)
0x0C1A	0x2C24    CMP	R4, #36
0x0C1C	0xDA0D    BGE	L_findLetter24
;uart.c, 160 :: 		if(strcmp(letter, alpha[i]) == 0)
0x0C1E	0x00A1    LSLS	R1, R4, #2
0x0C20	0x4809    LDR	R0, [PC, #36]
0x0C22	0x1840    ADDS	R0, R0, R1
0x0C24	0x6800    LDR	R0, [R0, #0]
0x0C26	0x4601    MOV	R1, R0
0x0C28	0x4808    LDR	R0, [PC, #32]
0x0C2A	0xF7FFFD5F  BL	_strcmp+0
0x0C2E	0xB908    CBNZ	R0, L_findLetter26
;uart.c, 161 :: 		return i;
0x0C30	0xB220    SXTH	R0, R4
; i end address is: 16 (R4)
0x0C32	0xE005    B	L_end_findLetter
L_findLetter26:
;uart.c, 159 :: 		for(i = 0; i < ALPHABET_SIZE; i++){
; i start address is: 16 (R4)
0x0C34	0x1C64    ADDS	R4, R4, #1
0x0C36	0xB224    SXTH	R4, R4
;uart.c, 162 :: 		}
; i end address is: 16 (R4)
0x0C38	0xE7EF    B	L_findLetter23
L_findLetter24:
;uart.c, 163 :: 		return -1;
0x0C3A	0xF64F70FF  MOVW	R0, #65535
0x0C3E	0xB200    SXTH	R0, R0
;uart.c, 164 :: 		}
L_end_findLetter:
0x0C40	0xF8DDE000  LDR	LR, [SP, #0]
0x0C44	0xB001    ADD	SP, SP, #4
0x0C46	0x4770    BX	LR
0x0C48	0x00382000  	uart_alpha+0
0x0C4C	0x01082000  	_letter+0
; end of _findLetter
_strcmp:
;__Lib_CString.c, 122 :: 		
; s2 start address is: 4 (R1)
; s1 start address is: 0 (R0)
0x06EC	0xB081    SUB	SP, SP, #4
; s2 end address is: 4 (R1)
; s1 end address is: 0 (R0)
; s1 start address is: 0 (R0)
; s2 start address is: 4 (R1)
0x06EE	0x9100    STR	R1, [SP, #0]
; s1 end address is: 0 (R0)
; s2 end address is: 4 (R1)
0x06F0	0x4601    MOV	R1, R0
0x06F2	0x9800    LDR	R0, [SP, #0]
;__Lib_CString.c, 124 :: 		
L_strcmp30:
; s2 start address is: 0 (R0)
; s1 start address is: 4 (R1)
0x06F4	0x780A    LDRB	R2, [R1, #0]
0x06F6	0xB132    CBZ	R2, L__strcmp89
0x06F8	0x780B    LDRB	R3, [R1, #0]
0x06FA	0x7802    LDRB	R2, [R0, #0]
0x06FC	0x4293    CMP	R3, R2
0x06FE	0xD102    BNE	L__strcmp88
L__strcmp87:
;__Lib_CString.c, 125 :: 		
0x0700	0x1C49    ADDS	R1, R1, #1
0x0702	0x1C40    ADDS	R0, R0, #1
0x0704	0xE7F6    B	L_strcmp30
;__Lib_CString.c, 124 :: 		
L__strcmp89:
L__strcmp88:
;__Lib_CString.c, 127 :: 		
0x0706	0x780B    LDRB	R3, [R1, #0]
; s1 end address is: 4 (R1)
0x0708	0x7802    LDRB	R2, [R0, #0]
; s2 end address is: 0 (R0)
0x070A	0x1A9A    SUB	R2, R3, R2
0x070C	0xB210    SXTH	R0, R2
;__Lib_CString.c, 128 :: 		
L_end_strcmp:
0x070E	0xB001    ADD	SP, SP, #4
0x0710	0x4770    BX	LR
; end of _strcmp
_intToChar:
;uart.c, 166 :: 		char intToChar(int i){
; i start address is: 0 (R0)
; i end address is: 0 (R0)
; i start address is: 0 (R0)
;uart.c, 167 :: 		if( i >= 0 && i <= 9)
0x0C50	0x2800    CMP	R0, #0
0x0C52	0xDB05    BLT	L__intToChar57
0x0C54	0x2809    CMP	R0, #9
0x0C56	0xDC03    BGT	L__intToChar56
L__intToChar55:
;uart.c, 168 :: 		return 48 + i;
0x0C58	0xF2000130  ADDW	R1, R0, #48
; i end address is: 0 (R0)
0x0C5C	0xB2C8    UXTB	R0, R1
0x0C5E	0xE006    B	L_end_intToChar
;uart.c, 167 :: 		if( i >= 0 && i <= 9)
L__intToChar57:
; i start address is: 0 (R0)
L__intToChar56:
;uart.c, 169 :: 		else if ( i < ALPHABET_SIZE)
0x0C60	0x2824    CMP	R0, #36
0x0C62	0xDA03    BGE	L_intToChar31
;uart.c, 170 :: 		return 55 + i;
0x0C64	0xF2000137  ADDW	R1, R0, #55
; i end address is: 0 (R0)
0x0C68	0xB2C8    UXTB	R0, R1
0x0C6A	0xE000    B	L_end_intToChar
L_intToChar31:
;uart.c, 171 :: 		return '!';
0x0C6C	0x2021    MOVS	R0, #33
;uart.c, 172 :: 		}
L_end_intToChar:
0x0C6E	0x4770    BX	LR
; end of _intToChar
_SendCharInterrupt:
;uart.c, 115 :: 		void SendCharInterrupt (int ch)  {
; ch start address is: 0 (R0)
; ch end address is: 0 (R0)
; ch start address is: 0 (R0)
;uart.c, 116 :: 		uart_tr = ch;
0x0BB8	0x4909    LDR	R1, [PC, #36]
0x0BBA	0x7008    STRB	R0, [R1, #0]
; ch end address is: 0 (R0)
;uart.c, 117 :: 		UART4_CR1 |= (1UL << 7);              // Enable intrrupt (TXEIE)
0x0BBC	0x4909    LDR	R1, [PC, #36]
0x0BBE	0x6809    LDR	R1, [R1, #0]
0x0BC0	0xF0410280  ORR	R2, R1, #128
0x0BC4	0x4907    LDR	R1, [PC, #28]
0x0BC6	0x600A    STR	R2, [R1, #0]
;uart.c, 118 :: 		Delay_ms(1);
0x0BC8	0xF64217A9  MOVW	R7, #10665
0x0BCC	0xF2C00700  MOVT	R7, #0
L_SendCharInterrupt0:
0x0BD0	0x1E7F    SUBS	R7, R7, #1
0x0BD2	0xD1FD    BNE	L_SendCharInterrupt0
0x0BD4	0xBF00    NOP
0x0BD6	0xBF00    NOP
0x0BD8	0xBF00    NOP
0x0BDA	0xBF00    NOP
;uart.c, 119 :: 		}
L_end_SendCharInterrupt:
0x0BDC	0x4770    BX	LR
0x0BDE	0xBF00    NOP
0x0BE0	0x00D52000  	_uart_tr+0
0x0BE4	0x4C0C4000  	UART4_CR1+0
; end of _SendCharInterrupt
_clearLetter:
;uart.c, 174 :: 		void clearLetter(){
;uart.c, 176 :: 		for(i = 0; i < 6; letter[i++] = '\0');
; i start address is: 8 (R2)
0x0BE8	0x2200    MOVS	R2, #0
0x0BEA	0xB212    SXTH	R2, R2
; i end address is: 8 (R2)
L_clearLetter32:
; i start address is: 8 (R2)
0x0BEC	0x2A06    CMP	R2, #6
0x0BEE	0xDA06    BGE	L_clearLetter33
0x0BF0	0x4805    LDR	R0, [PC, #20]
0x0BF2	0x1881    ADDS	R1, R0, R2
0x0BF4	0x2000    MOVS	R0, #0
0x0BF6	0x7008    STRB	R0, [R1, #0]
0x0BF8	0x1C52    ADDS	R2, R2, #1
0x0BFA	0xB212    SXTH	R2, R2
; i end address is: 8 (R2)
0x0BFC	0xE7F6    B	L_clearLetter32
L_clearLetter33:
;uart.c, 177 :: 		letter_cnt = 0;
0x0BFE	0x2100    MOVS	R1, #0
0x0C00	0x4802    LDR	R0, [PC, #8]
0x0C02	0x8001    STRH	R1, [R0, #0]
;uart.c, 178 :: 		}
L_end_clearLetter:
0x0C04	0x4770    BX	LR
0x0C06	0xBF00    NOP
0x0C08	0x01082000  	_letter+0
0x0C0C	0x00FE2000  	_letter_cnt+0
; end of _clearLetter
_Button2_Interrupt:
;main.c, 125 :: 		void Button2_Interrupt() iv IVT_INT_EXTI15_10 {
0x1270	0xB4B0    PUSH	(R4, R5, R7)
0x1272	0xB081    SUB	SP, SP, #4
0x1274	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 126 :: 		Delay_ms(10);
0x1278	0xF24A07A9  MOVW	R7, #41129
0x127C	0xF2C00701  MOVT	R7, #1
L_Button2_Interrupt17:
0x1280	0x1E7F    SUBS	R7, R7, #1
0x1282	0xD1FD    BNE	L_Button2_Interrupt17
0x1284	0xBF00    NOP
0x1286	0xBF00    NOP
0x1288	0xBF00    NOP
0x128A	0xBF00    NOP
;main.c, 128 :: 		if( EXTI_FTSR & (1UL << 10)){         // is Button PA10 pressed
0x128C	0x4828    LDR	R0, [PC, #160]
0x128E	0x6800    LDR	R0, [R0, #0]
0x1290	0xF4006080  AND	R0, R0, #1024
0x1294	0xB1B0    CBZ	R0, L_Button2_Interrupt19
;main.c, 129 :: 		if(letter_cnt == 0) LCD_CLEAR_SCREEN();
0x1296	0x4827    LDR	R0, [PC, #156]
0x1298	0x8800    LDRH	R0, [R0, #0]
0x129A	0xB908    CBNZ	R0, L_Button2_Interrupt20
0x129C	0xF7FFFF44  BL	_LCD_CLEAR_SCREEN+0
L_Button2_Interrupt20:
;main.c, 130 :: 		riseTimeB2 = currentTime;
0x12A0	0x4825    LDR	R0, [PC, #148]
0x12A2	0x8801    LDRH	R1, [R0, #0]
0x12A4	0x4825    LDR	R0, [PC, #148]
0x12A6	0x8001    STRH	R1, [R0, #0]
;main.c, 131 :: 		EXTI_FTSR &= ~(1UL << 10);
0x12A8	0x4821    LDR	R0, [PC, #132]
0x12AA	0x6801    LDR	R1, [R0, #0]
0x12AC	0xF46F6080  MVN	R0, #1024
0x12B0	0x4001    ANDS	R1, R0
0x12B2	0x481F    LDR	R0, [PC, #124]
0x12B4	0x6001    STR	R1, [R0, #0]
;main.c, 132 :: 		EXTI_RTSR |= (1 << 10);
0x12B6	0x4822    LDR	R0, [PC, #136]
0x12B8	0x6800    LDR	R0, [R0, #0]
0x12BA	0xF4406180  ORR	R1, R0, #1024
0x12BE	0x4820    LDR	R0, [PC, #128]
0x12C0	0x6001    STR	R1, [R0, #0]
;main.c, 133 :: 		}else if ( EXTI_RTSR & (1UL << 10)){        // is Button PA10 realesed
0x12C2	0xE026    B	L_Button2_Interrupt21
L_Button2_Interrupt19:
0x12C4	0x481E    LDR	R0, [PC, #120]
0x12C6	0x6800    LDR	R0, [R0, #0]
0x12C8	0xF4006080  AND	R0, R0, #1024
0x12CC	0xB1F0    CBZ	R0, L_Button2_Interrupt22
;main.c, 135 :: 		fallTimeB2 = currentTime;
0x12CE	0x481A    LDR	R0, [PC, #104]
0x12D0	0x8801    LDRH	R1, [R0, #0]
0x12D2	0x481C    LDR	R0, [PC, #112]
0x12D4	0x8001    STRH	R1, [R0, #0]
;main.c, 136 :: 		EXTI_RTSR &= ~(1UL << 10);
0x12D6	0x481A    LDR	R0, [PC, #104]
0x12D8	0x6801    LDR	R1, [R0, #0]
0x12DA	0xF46F6080  MVN	R0, #1024
0x12DE	0x4001    ANDS	R1, R0
0x12E0	0x4817    LDR	R0, [PC, #92]
0x12E2	0x6001    STR	R1, [R0, #0]
;main.c, 137 :: 		EXTI_FTSR |= (1  << 10);
0x12E4	0x4812    LDR	R0, [PC, #72]
0x12E6	0x6800    LDR	R0, [R0, #0]
0x12E8	0xF4406180  ORR	R1, R0, #1024
0x12EC	0x4810    LDR	R0, [PC, #64]
0x12EE	0x6001    STR	R1, [R0, #0]
;main.c, 139 :: 		if(fallTimeB2 - riseTimeB2 < RESET_TIME){   // DOT
0x12F0	0x4812    LDR	R0, [PC, #72]
0x12F2	0x8801    LDRH	R1, [R0, #0]
0x12F4	0x4813    LDR	R0, [PC, #76]
0x12F6	0x8800    LDRH	R0, [R0, #0]
0x12F8	0x1A40    SUB	R0, R0, R1
0x12FA	0xB280    UXTH	R0, R0
0x12FC	0x2802    CMP	R0, #2
0x12FE	0xD202    BCS	L_Button2_Interrupt23
;main.c, 140 :: 		translate();
0x1300	0xF7FFFE94  BL	_translate+0
;main.c, 141 :: 		}else {                               // DASH
0x1304	0xE001    B	L_Button2_Interrupt24
L_Button2_Interrupt23:
;main.c, 142 :: 		LCD_CLEAR_SCREEN();
0x1306	0xF7FFFF0F  BL	_LCD_CLEAR_SCREEN+0
;main.c, 143 :: 		}
L_Button2_Interrupt24:
;main.c, 145 :: 		}else
0x130A	0xE002    B	L_Button2_Interrupt25
L_Button2_Interrupt22:
;main.c, 146 :: 		LCD_PRINT_STRING("Button2 Error");
0x130C	0x480E    LDR	R0, [PC, #56]
0x130E	0xF7FFFC41  BL	_LCD_PRINT_STRING+0
L_Button2_Interrupt25:
L_Button2_Interrupt21:
;main.c, 148 :: 		EXTI_PR = (0x01 << 10);                      // clear interraput
0x1312	0xF2404100  MOVW	R1, #1024
0x1316	0x480D    LDR	R0, [PC, #52]
0x1318	0x6001    STR	R1, [R0, #0]
;main.c, 149 :: 		EXTI_IMR |= (1 << 10);
0x131A	0x480D    LDR	R0, [PC, #52]
0x131C	0x6800    LDR	R0, [R0, #0]
0x131E	0xF4406180  ORR	R1, R0, #1024
0x1322	0x480B    LDR	R0, [PC, #44]
0x1324	0x6001    STR	R1, [R0, #0]
;main.c, 150 :: 		}
L_end_Button2_Interrupt:
0x1326	0xF8DDE000  LDR	LR, [SP, #0]
0x132A	0xB001    ADD	SP, SP, #4
0x132C	0xBCB0    POP	(R4, R5, R7)
0x132E	0x4770    BX	LR
0x1330	0x3C0C4001  	EXTI_FTSR+0
0x1334	0x00FE2000  	_letter_cnt+0
0x1338	0x00002000  	_currentTime+0
0x133C	0x00EC2000  	_riseTimeB2+0
0x1340	0x3C084001  	EXTI_RTSR+0
0x1344	0x00EE2000  	_fallTimeB2+0
0x1348	0x00F02000  	?lstr39_main+0
0x134C	0x3C144001  	EXTI_PR+0
0x1350	0x3C004001  	EXTI_IMR+0
; end of _Button2_Interrupt
;main.c,0 :: ?lstr_29_main [4]
0x06B4	0x002E2E2E ;?lstr_29_main+0
; end of ?lstr_29_main
;main.c,0 :: ?lstr_15_main [2]
0x06EA	0x002E ;?lstr_15_main+0
; end of ?lstr_15_main
;main.c,0 :: ?lstr_30_main [2]
0x0712	0x002D ;?lstr_30_main+0
; end of ?lstr_30_main
;uart.c,0 :: ?lstr_28_uart [4]
0x0854	0x002E2D2E ;?lstr_28_uart+0
; end of ?lstr_28_uart
;uart.c,0 :: ?lstr_25_uart [4]
0x0A14	0x002D2D2D ;?lstr_25_uart+0
; end of ?lstr_25_uart
;main.c,0 :: ?lstr_31_main [4]
0x0BB4	0x002D2E2E ;?lstr_31_main+0
; end of ?lstr_31_main
;main.c,0 :: ?lstr_14_main [4]
0x0D6C	0x002E2E2D ;?lstr_14_main+0
; end of ?lstr_14_main
;uart.c,0 :: ?lstr_15_uart [2]
0x0F1A	0x002E ;?lstr_15_uart+0
; end of ?lstr_15_uart
;main.c,0 :: ?lstr_28_main [4]
0x1124	0x002E2D2E ;?lstr_28_main+0
; end of ?lstr_28_main
;uart.c,0 :: ?lstr_30_uart [2]
0x1216	0x002D ;?lstr_30_uart+0
; end of ?lstr_30_uart
;uart.c,0 :: ?lstr_33_uart [4]
0x122C	0x002D2D2E ;?lstr_33_uart+0
; end of ?lstr_33_uart
;uart.c,0 :: ?lstr_31_uart [4]
0x126C	0x002D2E2E ;?lstr_31_uart+0
; end of ?lstr_31_uart
;uart.c,0 :: ?ICSuart_alpha [144]
0x18CC	0x000019DC ;?ICSuart_alpha+0
0x18D0	0x000019E2 ;?ICSuart_alpha+4
0x18D4	0x000019D6 ;?ICSuart_alpha+8
0x18D8	0x000019CA ;?ICSuart_alpha+12
0x18DC	0x000019D0 ;?ICSuart_alpha+16
0x18E0	0x000019FA ;?ICSuart_alpha+20
0x18E4	0x00001A00 ;?ICSuart_alpha+24
0x18E8	0x000019F4 ;?ICSuart_alpha+28
0x18EC	0x000019E8 ;?ICSuart_alpha+32
0x18F0	0x000019EE ;?ICSuart_alpha+36
0x18F4	0x00001ADA ;?ICSuart_alpha+40
0x18F8	0x00001A60 ;?ICSuart_alpha+44
0x18FC	0x00001A47 ;?ICSuart_alpha+48
0x1900	0x00001ACA ;?ICSuart_alpha+52
0x1904	0x00000F1A ;?ICSuart_alpha+56
0x1908	0x00001A42 ;?ICSuart_alpha+60
0x190C	0x00001AC2 ;?ICSuart_alpha+64
0x1910	0x00001A51 ;?ICSuart_alpha+68
0x1914	0x00001AE6 ;?ICSuart_alpha+72
0x1918	0x00001A4C ;?ICSuart_alpha+76
0x191C	0x00001AD6 ;?ICSuart_alpha+80
0x1920	0x00001A83 ;?ICSuart_alpha+84
0x1924	0x00001ADD ;?ICSuart_alpha+88
0x1928	0x00001AE3 ;?ICSuart_alpha+92
0x192C	0x00000A14 ;?ICSuart_alpha+96
0x1930	0x00001A7E ;?ICSuart_alpha+100
0x1934	0x00001A8D ;?ICSuart_alpha+104
0x1938	0x00000854 ;?ICSuart_alpha+108
0x193C	0x00001ABE ;?ICSuart_alpha+112
0x1940	0x00001216 ;?ICSuart_alpha+116
0x1944	0x0000126C ;?ICSuart_alpha+120
0x1948	0x00001A88 ;?ICSuart_alpha+124
0x194C	0x0000122C ;?ICSuart_alpha+128
0x1950	0x00001A6F ;?ICSuart_alpha+132
0x1954	0x00001A6A ;?ICSuart_alpha+136
0x1958	0x00001A79 ;?ICSuart_alpha+140
; end of ?ICSuart_alpha
;main.c,0 :: ?ICS?lstr41_main [13]
0x195C	0x656D6954 ;?ICS?lstr41_main+0
0x1960	0x45203272 ;?ICS?lstr41_main+4
0x1964	0x726F7272 ;?ICS?lstr41_main+8
0x1968	0x00 ;?ICS?lstr41_main+12
; end of ?ICS?lstr41_main
;main.c,0 :: ?ICS_currentTime [2]
0x196A	0x0000 ;?ICS_currentTime+0
; end of ?ICS_currentTime
;lcd.c,0 :: ?ICS_cursor_pos [2]
0x196C	0x0000 ;?ICS_cursor_pos+0
; end of ?ICS_cursor_pos
;__Lib_USB_32F4xx.c,0 :: ?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb [44]
0x196E	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+0
0x1972	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+4
0x1976	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+8
0x197A	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+12
0x197E	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+16
0x1982	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+20
0x1986	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+24
0x198A	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+28
0x198E	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+32
0x1992	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+36
0x1996	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+40
; end of ?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb
;,0 :: _initBlock_17 [7]
; Containing: ?ICS?lstr40_main [5]
;             ?ICS?lstr37_uart [2]
0x199A	0x203E2D20 ;_initBlock_17+0 : ?ICS?lstr40_main at 0x199A
0x199E	0x002100 ;_initBlock_17+4 : ?ICS?lstr37_uart at 0x199F
; end of _initBlock_17
;main.c,0 :: ?ICS_riseTimeB1 [2]
0x19A2	0x0000 ;?ICS_riseTimeB1+0
; end of ?ICS_riseTimeB1
;main.c,0 :: ?ICS_fallTimeB1 [2]
0x19A4	0x0000 ;?ICS_fallTimeB1+0
; end of ?ICS_fallTimeB1
;main.c,0 :: ?ICS?lstr38_main [14]
0x19A6	0x74747542 ;?ICS?lstr38_main+0
0x19AA	0x20316E6F ;?ICS?lstr38_main+4
0x19AE	0x6F727245 ;?ICS?lstr38_main+8
0x19B2	0x0072 ;?ICS?lstr38_main+12
; end of ?ICS?lstr38_main
;uart.c,0 :: ?ICS?lstr40_uart [4]
0x19B4	0x00203D20 ;?ICS?lstr40_uart+0
; end of ?ICS?lstr40_uart
;main.c,0 :: ?ICS_riseTimeB2 [2]
0x19B8	0x0000 ;?ICS_riseTimeB2+0
; end of ?ICS_riseTimeB2
;main.c,0 :: ?ICS_fallTimeB2 [2]
0x19BA	0x0000 ;?ICS_fallTimeB2+0
; end of ?ICS_fallTimeB2
;main.c,0 :: ?ICS?lstr39_main [14]
0x19BC	0x74747542 ;?ICS?lstr39_main+0
0x19C0	0x20326E6F ;?ICS?lstr39_main+4
0x19C4	0x6F727245 ;?ICS?lstr39_main+8
0x19C8	0x0072 ;?ICS?lstr39_main+12
; end of ?ICS?lstr39_main
;uart.c,0 :: ?lstr_4_uart [6]
0x19CA	0x2D2E2E2E ;?lstr_4_uart+0
0x19CE	0x002D ;?lstr_4_uart+4
; end of ?lstr_4_uart
;uart.c,0 :: ?lstr_5_uart [6]
0x19D0	0x2E2E2E2E ;?lstr_5_uart+0
0x19D4	0x002D ;?lstr_5_uart+4
; end of ?lstr_5_uart
;uart.c,0 :: ?lstr_3_uart [6]
0x19D6	0x2D2D2E2E ;?lstr_3_uart+0
0x19DA	0x002D ;?lstr_3_uart+4
; end of ?lstr_3_uart
;uart.c,0 :: ?lstr_1_uart [6]
0x19DC	0x2D2D2D2D ;?lstr_1_uart+0
0x19E0	0x002D ;?lstr_1_uart+4
; end of ?lstr_1_uart
;uart.c,0 :: ?lstr_2_uart [6]
0x19E2	0x2D2D2D2E ;?lstr_2_uart+0
0x19E6	0x002D ;?lstr_2_uart+4
; end of ?lstr_2_uart
;uart.c,0 :: ?lstr_9_uart [6]
0x19E8	0x2E2D2D2D ;?lstr_9_uart+0
0x19EC	0x002E ;?lstr_9_uart+4
; end of ?lstr_9_uart
;uart.c,0 :: ?lstr_10_uart [6]
0x19EE	0x2D2D2D2D ;?lstr_10_uart+0
0x19F2	0x002E ;?lstr_10_uart+4
; end of ?lstr_10_uart
;uart.c,0 :: ?lstr_8_uart [6]
0x19F4	0x2E2E2D2D ;?lstr_8_uart+0
0x19F8	0x002E ;?lstr_8_uart+4
; end of ?lstr_8_uart
;uart.c,0 :: ?lstr_6_uart [6]
0x19FA	0x2E2E2E2E ;?lstr_6_uart+0
0x19FE	0x002E ;?lstr_6_uart+4
; end of ?lstr_6_uart
;uart.c,0 :: ?lstr_7_uart [6]
0x1A00	0x2E2E2E2D ;?lstr_7_uart+0
0x1A04	0x002E ;?lstr_7_uart+4
; end of ?lstr_7_uart
;main.c,0 :: ?lstr_7_main [6]
0x1A06	0x2E2E2E2D ;?lstr_7_main+0
0x1A0A	0x002E ;?lstr_7_main+4
; end of ?lstr_7_main
;main.c,0 :: ?lstr_6_main [6]
0x1A0C	0x2E2E2E2E ;?lstr_6_main+0
0x1A10	0x002E ;?lstr_6_main+4
; end of ?lstr_6_main
;main.c,0 :: ?lstr_8_main [6]
0x1A12	0x2E2E2D2D ;?lstr_8_main+0
0x1A16	0x002E ;?lstr_8_main+4
; end of ?lstr_8_main
;main.c,0 :: ?lstr_10_main [6]
0x1A18	0x2D2D2D2D ;?lstr_10_main+0
0x1A1C	0x002E ;?lstr_10_main+4
; end of ?lstr_10_main
;main.c,0 :: ?lstr_9_main [6]
0x1A1E	0x2E2D2D2D ;?lstr_9_main+0
0x1A22	0x002E ;?lstr_9_main+4
; end of ?lstr_9_main
;main.c,0 :: ?lstr_2_main [6]
0x1A24	0x2D2D2D2E ;?lstr_2_main+0
0x1A28	0x002D ;?lstr_2_main+4
; end of ?lstr_2_main
;main.c,0 :: ?lstr_1_main [6]
0x1A2A	0x2D2D2D2D ;?lstr_1_main+0
0x1A2E	0x002D ;?lstr_1_main+4
; end of ?lstr_1_main
;main.c,0 :: ?lstr_3_main [6]
0x1A30	0x2D2D2E2E ;?lstr_3_main+0
0x1A34	0x002D ;?lstr_3_main+4
; end of ?lstr_3_main
;main.c,0 :: ?lstr_5_main [6]
0x1A36	0x2E2E2E2E ;?lstr_5_main+0
0x1A3A	0x002D ;?lstr_5_main+4
; end of ?lstr_5_main
;main.c,0 :: ?lstr_4_main [6]
0x1A3C	0x2D2E2E2E ;?lstr_4_main+0
0x1A40	0x002D ;?lstr_4_main+4
; end of ?lstr_4_main
;,0 :: _initBlock_45 [10]
; Containing: ?lstr_16_uart [5]
;             ?lstr_13_uart [5]
0x1A42	0x2E2D2E2E ;_initBlock_45+0 : ?lstr_16_uart at 0x1A42
0x1A46	0x2D2E2D00 ;_initBlock_45+4 : ?lstr_13_uart at 0x1A47
0x1A4A	0x002E ;_initBlock_45+8
; end of _initBlock_45
;,0 :: _initBlock_46 [10]
; Containing: ?lstr_20_uart [5]
;             ?lstr_18_uart [5]
0x1A4C	0x2D2D2D2E ;_initBlock_46+0 : ?lstr_20_uart at 0x1A4C
0x1A50	0x2E2E2E00 ;_initBlock_46+4 : ?lstr_18_uart at 0x1A51
0x1A54	0x002E ;_initBlock_46+8
; end of _initBlock_46
;,0 :: _initBlock_47 [10]
; Containing: ?lstr_20_main [5]
;             ?lstr_22_main [5]
0x1A56	0x2D2D2D2E ;_initBlock_47+0 : ?lstr_20_main at 0x1A56
0x1A5A	0x2E2D2E00 ;_initBlock_47+4 : ?lstr_22_main at 0x1A5B
0x1A5E	0x002E ;_initBlock_47+8
; end of _initBlock_47
;,0 :: _initBlock_48 [10]
; Containing: ?lstr_12_uart [5]
;             ?lstr_18_main [5]
0x1A60	0x2E2E2E2D ;_initBlock_48+0 : ?lstr_12_uart at 0x1A60
0x1A64	0x2E2E2E00 ;_initBlock_48+4 : ?lstr_18_main at 0x1A65
0x1A68	0x002E ;_initBlock_48+8
; end of _initBlock_48
;,0 :: _initBlock_49 [10]
; Containing: ?lstr_35_uart [5]
;             ?lstr_34_uart [5]
0x1A6A	0x2D2D2E2D ;_initBlock_49+0 : ?lstr_35_uart at 0x1A6A
0x1A6E	0x2E2E2D00 ;_initBlock_49+4 : ?lstr_34_uart at 0x1A6F
0x1A72	0x002D ;_initBlock_49+8
; end of _initBlock_49
;,0 :: _initBlock_50 [10]
; Containing: ?lstr_16_main [5]
;             ?lstr_36_uart [5]
0x1A74	0x2E2D2E2E ;_initBlock_50+0 : ?lstr_16_main at 0x1A74
0x1A78	0x2E2D2D00 ;_initBlock_50+4 : ?lstr_36_uart at 0x1A79
0x1A7C	0x002E ;_initBlock_50+8
; end of _initBlock_50
;,0 :: _initBlock_51 [10]
; Containing: ?lstr_26_uart [5]
;             ?lstr_22_uart [5]
0x1A7E	0x2E2D2D2E ;_initBlock_51+0 : ?lstr_26_uart at 0x1A7E
0x1A82	0x2E2D2E00 ;_initBlock_51+4 : ?lstr_22_uart at 0x1A83
0x1A86	0x002E ;_initBlock_51+8
; end of _initBlock_51
;,0 :: _initBlock_52 [10]
; Containing: ?lstr_32_uart [5]
;             ?lstr_27_uart [5]
0x1A88	0x2D2E2E2E ;_initBlock_52+0 : ?lstr_32_uart at 0x1A88
0x1A8C	0x2E2D2D00 ;_initBlock_52+4 : ?lstr_27_uart at 0x1A8D
0x1A90	0x002D ;_initBlock_52+8
; end of _initBlock_52
;,0 :: _initBlock_53 [10]
; Containing: ?lstr_36_main [5]
;             ?lstr_13_main [5]
0x1A92	0x2E2E2D2D ;_initBlock_53+0 : ?lstr_36_main at 0x1A92
0x1A96	0x2D2E2D00 ;_initBlock_53+4 : ?lstr_13_main at 0x1A97
0x1A9A	0x002E ;_initBlock_53+8
; end of _initBlock_53
;,0 :: _initBlock_54 [10]
; Containing: ?lstr_35_main [5]
;             ?lstr_32_main [5]
0x1A9C	0x2D2D2E2D ;_initBlock_54+0 : ?lstr_35_main at 0x1A9C
0x1AA0	0x2E2E2E00 ;_initBlock_54+4 : ?lstr_32_main at 0x1AA1
0x1AA4	0x002D ;_initBlock_54+8
; end of _initBlock_54
;,0 :: _initBlock_55 [10]
; Containing: ?lstr_34_main [5]
;             ?lstr_12_main [5]
0x1AA6	0x2D2E2E2D ;_initBlock_55+0 : ?lstr_34_main at 0x1AA6
0x1AAA	0x2E2E2D00 ;_initBlock_55+4 : ?lstr_12_main at 0x1AAB
0x1AAE	0x002E ;_initBlock_55+8
; end of _initBlock_55
;,0 :: _initBlock_56 [10]
; Containing: ?lstr_26_main [5]
;             ?lstr_27_main [5]
0x1AB0	0x2E2D2D2E ;_initBlock_56+0 : ?lstr_26_main at 0x1AB0
0x1AB4	0x2E2D2D00 ;_initBlock_56+4 : ?lstr_27_main at 0x1AB5
0x1AB8	0x002D ;_initBlock_56+8
; end of _initBlock_56
;main.c,0 :: ?lstr_25_main [4]
0x1ABA	0x002D2D2D ;?lstr_25_main+0
; end of ?lstr_25_main
;uart.c,0 :: ?lstr_29_uart [4]
0x1ABE	0x002E2E2E ;?lstr_29_uart+0
; end of ?lstr_29_uart
;uart.c,0 :: ?lstr_17_uart [4]
0x1AC2	0x002E2D2D ;?lstr_17_uart+0
; end of ?lstr_17_uart
;main.c,0 :: ?lstr_33_main [4]
0x1AC6	0x002D2D2E ;?lstr_33_main+0
; end of ?lstr_33_main
;uart.c,0 :: ?lstr_14_uart [4]
0x1ACA	0x002E2E2D ;?lstr_14_uart+0
; end of ?lstr_14_uart
;main.c,0 :: ?lstr_21_main [4]
0x1ACE	0x002D2E2D ;?lstr_21_main+0
; end of ?lstr_21_main
;main.c,0 :: ?lstr_17_main [4]
0x1AD2	0x002E2D2D ;?lstr_17_main+0
; end of ?lstr_17_main
;uart.c,0 :: ?lstr_21_uart [4]
0x1AD6	0x002D2E2D ;?lstr_21_uart+0
; end of ?lstr_21_uart
;,0 :: _initBlock_65 [6]
; Containing: ?lstr_11_uart [3]
;             ?lstr_23_uart [3]
0x1ADA	0x2D002D2E ;_initBlock_65+0 : ?lstr_11_uart at 0x1ADA : ?lstr_23_uart at 0x1ADD
0x1ADE	0x002D ;_initBlock_65+4
; end of _initBlock_65
;,0 :: _initBlock_66 [6]
; Containing: ?lstr_19_main [3]
;             ?lstr_24_uart [3]
0x1AE0	0x2D002E2E ;_initBlock_66+0 : ?lstr_19_main at 0x1AE0 : ?lstr_24_uart at 0x1AE3
0x1AE4	0x002E ;_initBlock_66+4
; end of _initBlock_66
;,0 :: _initBlock_67 [6]
; Containing: ?lstr_19_uart [3]
;             ?lstr_23_main [3]
0x1AE6	0x2D002E2E ;_initBlock_67+0 : ?lstr_19_uart at 0x1AE6 : ?lstr_23_main at 0x1AE9
0x1AEA	0x002D ;_initBlock_67+4
; end of _initBlock_67
;,0 :: _initBlock_68 [6]
; Containing: ?lstr_24_main [3]
;             ?lstr_11_main [3]
0x1AEC	0x2E002E2D ;_initBlock_68+0 : ?lstr_24_main at 0x1AEC : ?lstr_11_main at 0x1AEF
0x1AF0	0x002D ;_initBlock_68+4
; end of _initBlock_68
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188      [20]    _set_lcd_d7
0x019C      [20]    _clear_lcd_d7
0x01B0      [20]    _set_lcd_d4
0x01C4      [20]    _set_lcd_en
0x01D8      [20]    _set_lcd_d5
0x01EC      [20]    _clear_lcd_d5
0x0200      [20]    _set_lcd_d6
0x0214      [20]    _clear_lcd_d6
0x0228      [20]    _clear_lcd_d4
0x023C      [20]    _set_lcd_rs
0x0250    [1104]    _init_GPIO_Pin
0x06A0      [20]    _clear_lcd_en
0x06B8      [50]    _lcd_Data_Write
0x06EC      [38]    _strcmp
0x0714     [120]    _NVIC_IntEnable
0x078C     [200]    _init_UART_pins
0x0858      [92]    _LCD_CURSOR
0x08B4     [332]    _lcd_gpio_init
0x0A00      [20]    _clear_lcd_rs
0x0A18     [196]    _lcd_data_line_write
0x0ADC      [72]    _charToInt
0x0B24      [40]    _strcpy
0x0B4C      [72]    _LCD_PRINT_CHAR
0x0B94      [32]    _LCD_PRINT_STRING
0x0BB8      [48]    _SendCharInterrupt
0x0BE8      [40]    _clearLetter
0x0C10      [64]    _findLetter
0x0C50      [32]    _intToChar
0x0C70     [132]    _init_LEDs
0x0CF4     [120]    _init_UART
0x0D70     [280]    _init_Lcd
0x0E88     [120]    _init_Timer2
0x0F00      [26]    _lcd_Control_Write
0x0F1C     [196]    _init_Buttons
0x0FE0       [4]    _doSomething
0x0FE4      [72]    _convert
0x102C     [148]    _translate
0x10C0     [100]    _fnc
0x1128      [52]    _LCD_CLEAR_SCREEN
0x115C      [76]    __Lib_System_4XX_SystemClockSetDefault
0x11A8      [52]    _init_all
0x11DC      [58]    ___FillZeros
0x1218      [20]    ___CC2DW
0x1230      [50]    _main
0x1264       [8]    ___GenExcept
0x1270     [228]    _Button2_Interrupt
0x1354      [36]    __Lib_System_4XX_InitialSetUpFosc
0x1378      [64]    _Timer2_Interrupt
0x13B8     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x1718     [232]    _Button1_Interrupt
0x1800      [42]    ___EnableFPU
0x182C     [160]    _UART_Interrupt
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [4]    FARG_cos_f
0x0000       [4]    FARG_pow_x
0x0000       [4]    FARG_sinh_x
0x0000       [4]    FARG_cosh_x
0x0000       [4]    FARG_log_x
0x0000       [4]    FARG_tan_x
0x0000       [4]    FARG_log10_x
0x0000       [4]    FARG_exp_x
0x0000       [4]    FARG_tanh_x
0x0000       [4]    FARG___Lib_CMath_eval_poly_x
0x0000       [4]    FARG_ldexp_value
0x0000       [4]    FARG_sqrt_x
0x0000       [4]    FARG_atan_f
0x0000       [4]    FARG_modf_val
0x0000       [4]    FARG_fabs_d
0x0000       [4]    FARG_floor_x
0x0000       [4]    FARG_frexp_value
0x0000       [4]    FARG_ceil_x
0x0000       [4]    FARG_sin_f
0x0000       [4]    FARG_acos_x
0x0000       [4]    FARG_asin_x
0x0000       [4]    FARG_atan2_y
0x0000       [4]    FARG_Q31_Ftoi_f
0x0000       [4]    FARG_Q15_Ftoi_f
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x0000       [4]    FARG_FloatToStr_fnum
0x0004       [4]    FARG_pow_y
0x0004       [4]    FARG_atan2_x
0x20000000       [2]    _currentTime
0x20000002       [2]    _cursor_pos
0x20000004      [44]    __Lib_USB_32F4xx_USBD_DCD_INT_cb
0x20000030       [5]    ?lstr40_main
0x20000035       [2]    ?lstr37_uart
0x20000037       [1]    _uart_rd
0x20000038     [144]    uart_alpha
0x200000C8      [13]    ?lstr41_main
0x200000D5       [1]    _uart_tr
0x200000D6       [2]    _riseTimeB1
0x200000D8       [2]    _fallTimeB1
0x200000DA      [14]    ?lstr38_main
0x200000E8       [4]    ?lstr40_uart
0x200000EC       [2]    _riseTimeB2
0x200000EE       [2]    _fallTimeB2
0x200000F0      [14]    ?lstr39_main
0x200000FE       [2]    _letter_cnt
0x20000100       [4]    ___System_CLOCK_IN_KHZ
0x20000104       [4]    __VOLTAGE_RANGE
0x20000108       [6]    _letter
0x2000010E     [600]    _letters
0x20000366       [2]    _letters_cnt
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x06B4       [4]    ?lstr_29_main
0x06EA       [2]    ?lstr_15_main
0x0712       [2]    ?lstr_30_main
0x0854       [4]    ?lstr_28_uart
0x0A14       [4]    ?lstr_25_uart
0x0BB4       [4]    ?lstr_31_main
0x0D6C       [4]    ?lstr_14_main
0x0F1A       [2]    ?lstr_15_uart
0x1124       [4]    ?lstr_28_main
0x1216       [2]    ?lstr_30_uart
0x122C       [4]    ?lstr_33_uart
0x126C       [4]    ?lstr_31_uart
0x18CC     [144]    ?ICSuart_alpha
0x195C      [13]    ?ICS?lstr41_main
0x196A       [2]    ?ICS_currentTime
0x196C       [2]    ?ICS_cursor_pos
0x196E      [44]    ?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb
0x199A       [5]    ?ICS?lstr40_main
0x199F       [2]    ?ICS?lstr37_uart
0x19A2       [2]    ?ICS_riseTimeB1
0x19A4       [2]    ?ICS_fallTimeB1
0x19A6      [14]    ?ICS?lstr38_main
0x19B4       [4]    ?ICS?lstr40_uart
0x19B8       [2]    ?ICS_riseTimeB2
0x19BA       [2]    ?ICS_fallTimeB2
0x19BC      [14]    ?ICS?lstr39_main
0x19CA       [6]    ?lstr_4_uart
0x19D0       [6]    ?lstr_5_uart
0x19D6       [6]    ?lstr_3_uart
0x19DC       [6]    ?lstr_1_uart
0x19E2       [6]    ?lstr_2_uart
0x19E8       [6]    ?lstr_9_uart
0x19EE       [6]    ?lstr_10_uart
0x19F4       [6]    ?lstr_8_uart
0x19FA       [6]    ?lstr_6_uart
0x1A00       [6]    ?lstr_7_uart
0x1A06       [6]    ?lstr_7_main
0x1A0C       [6]    ?lstr_6_main
0x1A12       [6]    ?lstr_8_main
0x1A18       [6]    ?lstr_10_main
0x1A1E       [6]    ?lstr_9_main
0x1A24       [6]    ?lstr_2_main
0x1A2A       [6]    ?lstr_1_main
0x1A30       [6]    ?lstr_3_main
0x1A36       [6]    ?lstr_5_main
0x1A3C       [6]    ?lstr_4_main
0x1A42       [5]    ?lstr_16_uart
0x1A47       [5]    ?lstr_13_uart
0x1A4C       [5]    ?lstr_20_uart
0x1A51       [5]    ?lstr_18_uart
0x1A56       [5]    ?lstr_20_main
0x1A5B       [5]    ?lstr_22_main
0x1A60       [5]    ?lstr_12_uart
0x1A65       [5]    ?lstr_18_main
0x1A6A       [5]    ?lstr_35_uart
0x1A6F       [5]    ?lstr_34_uart
0x1A74       [5]    ?lstr_16_main
0x1A79       [5]    ?lstr_36_uart
0x1A7E       [5]    ?lstr_26_uart
0x1A83       [5]    ?lstr_22_uart
0x1A88       [5]    ?lstr_32_uart
0x1A8D       [5]    ?lstr_27_uart
0x1A92       [5]    ?lstr_36_main
0x1A97       [5]    ?lstr_13_main
0x1A9C       [5]    ?lstr_35_main
0x1AA1       [5]    ?lstr_32_main
0x1AA6       [5]    ?lstr_34_main
0x1AAB       [5]    ?lstr_12_main
0x1AB0       [5]    ?lstr_26_main
0x1AB5       [5]    ?lstr_27_main
0x1ABA       [4]    ?lstr_25_main
0x1ABE       [4]    ?lstr_29_uart
0x1AC2       [4]    ?lstr_17_uart
0x1AC6       [4]    ?lstr_33_main
0x1ACA       [4]    ?lstr_14_uart
0x1ACE       [4]    ?lstr_21_main
0x1AD2       [4]    ?lstr_17_main
0x1AD6       [4]    ?lstr_21_uart
0x1ADA       [3]    ?lstr_11_uart
0x1ADD       [3]    ?lstr_23_uart
0x1AE0       [3]    ?lstr_19_main
0x1AE3       [3]    ?lstr_24_uart
0x1AE6       [3]    ?lstr_19_uart
0x1AE9       [3]    ?lstr_23_main
0x1AEC       [3]    ?lstr_24_main
0x1AEF       [3]    ?lstr_11_main
