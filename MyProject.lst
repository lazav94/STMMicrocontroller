;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17.04.2017. 17.37.52
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x15F90000  	5625
0x0008	0x180D0000  	6157
0x000C	0x180D0000  	6157
0x0010	0x180D0000  	6157
0x0014	0x180D0000  	6157
0x0018	0x180D0000  	6157
0x001C	0x180D0000  	6157
0x0020	0x180D0000  	6157
0x0024	0x180D0000  	6157
0x0028	0x180D0000  	6157
0x002C	0x180D0000  	6157
0x0030	0x180D0000  	6157
0x0034	0x180D0000  	6157
0x0038	0x180D0000  	6157
0x003C	0x180D0000  	6157
0x0040	0x180D0000  	6157
0x0044	0x180D0000  	6157
0x0048	0x180D0000  	6157
0x004C	0x180D0000  	6157
0x0050	0x180D0000  	6157
0x0054	0x180D0000  	6157
0x0058	0x162D0000  	5677
0x005C	0x180D0000  	6157
0x0060	0x180D0000  	6157
0x0064	0x180D0000  	6157
0x0068	0x180D0000  	6157
0x006C	0x180D0000  	6157
0x0070	0x180D0000  	6157
0x0074	0x180D0000  	6157
0x0078	0x180D0000  	6157
0x007C	0x180D0000  	6157
0x0080	0x180D0000  	6157
0x0084	0x180D0000  	6157
0x0088	0x180D0000  	6157
0x008C	0x180D0000  	6157
0x0090	0x180D0000  	6157
0x0094	0x180D0000  	6157
0x0098	0x180D0000  	6157
0x009C	0x180D0000  	6157
0x00A0	0x180D0000  	6157
0x00A4	0x180D0000  	6157
0x00A8	0x180D0000  	6157
0x00AC	0x180D0000  	6157
0x00B0	0x1C990000  	7321
0x00B4	0x180D0000  	6157
0x00B8	0x180D0000  	6157
0x00BC	0x180D0000  	6157
0x00C0	0x180D0000  	6157
0x00C4	0x180D0000  	6157
0x00C8	0x180D0000  	6157
0x00CC	0x180D0000  	6157
0x00D0	0x180D0000  	6157
0x00D4	0x180D0000  	6157
0x00D8	0x180D0000  	6157
0x00DC	0x180D0000  	6157
0x00E0	0x172D0000  	5933
0x00E4	0x180D0000  	6157
0x00E8	0x180D0000  	6157
0x00EC	0x180D0000  	6157
0x00F0	0x180D0000  	6157
0x00F4	0x180D0000  	6157
0x00F8	0x180D0000  	6157
0x00FC	0x180D0000  	6157
0x0100	0x180D0000  	6157
0x0104	0x180D0000  	6157
0x0108	0x180D0000  	6157
0x010C	0x180D0000  	6157
0x0110	0x18410000  	6209
0x0114	0x180D0000  	6157
0x0118	0x180D0000  	6157
0x011C	0x180D0000  	6157
0x0120	0x180D0000  	6157
0x0124	0x180D0000  	6157
0x0128	0x180D0000  	6157
0x012C	0x180D0000  	6157
0x0130	0x180D0000  	6157
0x0134	0x180D0000  	6157
0x0138	0x180D0000  	6157
0x013C	0x180D0000  	6157
0x0140	0x180D0000  	6157
0x0144	0x180D0000  	6157
0x0148	0x180D0000  	6157
0x014C	0x180D0000  	6157
0x0150	0x180D0000  	6157
0x0154	0x180D0000  	6157
0x0158	0x180D0000  	6157
0x015C	0x180D0000  	6157
0x0160	0x180D0000  	6157
0x0164	0x180D0000  	6157
0x0168	0x180D0000  	6157
0x016C	0x180D0000  	6157
0x0170	0x180D0000  	6157
0x0174	0x180D0000  	6157
0x0178	0x180D0000  	6157
0x017C	0x180D0000  	6157
0x0180	0x180D0000  	6157
0x0184	0x180D0000  	6157
; end of ____SysVT
_main:
;main.c, 103 :: 		void main(){
0x15F8	0xF000F98C  BL	6420
0x15FC	0xF000F90A  BL	6164
0x1600	0xF000FCF4  BL	8172
0x1604	0xF000FB36  BL	7284
0x1608	0xF000FCA2  BL	8016
;main.c, 105 :: 		init_all();                           // Initalize LCD, LEDs, Buttons, UART, Timer...
0x160C	0xF7FFFFB4  BL	_init_all+0
;main.c, 106 :: 		Delay_ms(10);                         // Delay for stabilization initialization
0x1610	0xF648377E  MOVW	R7, #35710
0x1614	0xF2C00708  MOVT	R7, #8
L_main2:
0x1618	0x1E7F    SUBS	R7, R7, #1
0x161A	0xD1FD    BNE	L_main2
0x161C	0xBF00    NOP
0x161E	0xBF00    NOP
0x1620	0xBF00    NOP
0x1622	0xBF00    NOP
0x1624	0xBF00    NOP
;main.c, 108 :: 		doSomething();                      // Infinity loop (dummy loop)
0x1626	0xF7FFFFA3  BL	_doSomething+0
;main.c, 110 :: 		}
L_end_main:
L__main_end_loop:
0x162A	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_4XX.c, 43 :: 		
0x15AC	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 45 :: 		
L_loopDW:
;__Lib_System_4XX.c, 46 :: 		
0x15AE	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 47 :: 		
0x15B2	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 48 :: 		
0x15B6	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 49 :: 		
0x15BA	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 51 :: 		
L_end___CC2DW:
0x15BC	0xB001    ADD	SP, SP, #4
0x15BE	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_4XX.c, 85 :: 		
0x1534	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 87 :: 		
0x1536	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 88 :: 		
0x153A	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 89 :: 		
0x153E	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 90 :: 		
0x1542	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 91 :: 		
0x1544	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 92 :: 		
0x1548	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 93 :: 		
0x154A	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 94 :: 		
0x154C	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 95 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 96 :: 		
0x154E	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 97 :: 		
0x1552	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 98 :: 		
0x1556	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 99 :: 		
0x1558	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 100 :: 		
0x155C	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 101 :: 		
0x155E	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 102 :: 		
0x1560	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 103 :: 		
0x1564	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 104 :: 		
0x1568	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 105 :: 		
L_norep:
;__Lib_System_4XX.c, 107 :: 		
L_end___FillZeros:
0x156A	0xB001    ADD	SP, SP, #4
0x156C	0x4770    BX	LR
; end of ___FillZeros
_init_all:
;main.c, 77 :: 		void init_all(){
0x1578	0xB081    SUB	SP, SP, #4
0x157A	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 83 :: 		RCC_APB2ENR |= (1 << 14);             //  System configuration controller clock enable
0x157E	0x480A    LDR	R0, [PC, #40]
0x1580	0x6800    LDR	R0, [R0, #0]
0x1582	0xF4404180  ORR	R1, R0, #16384
0x1586	0x4808    LDR	R0, [PC, #32]
0x1588	0x6001    STR	R1, [R0, #0]
;main.c, 85 :: 		init_LEDs();
0x158A	0xF7FFFD6D  BL	_init_LEDs+0
;main.c, 86 :: 		init_Buttons();
0x158E	0xF7FFFD05  BL	_init_Buttons+0
;main.c, 87 :: 		init_UART();
0x1592	0xF7FFFDB1  BL	_init_UART+0
;main.c, 88 :: 		init_Lcd();
0x1596	0xF7FFFDFB  BL	_init_Lcd+0
;main.c, 89 :: 		init_Timer2();
0x159A	0xF7FFFE91  BL	_init_Timer2+0
;main.c, 91 :: 		}
L_end_init_all:
0x159E	0xF8DDE000  LDR	LR, [SP, #0]
0x15A2	0xB001    ADD	SP, SP, #4
0x15A4	0x4770    BX	LR
0x15A6	0xBF00    NOP
0x15A8	0x38444002  	RCC_APB2ENR+0
; end of _init_all
_init_LEDs:
;led.c, 4 :: 		void init_LEDs(){
0x1068	0xB081    SUB	SP, SP, #4
0x106A	0xF8CDE000  STR	LR, [SP, #0]
;led.c, 5 :: 		RCC_AHB1ENR    |= (1UL << LEFT_LED_PORT);       // Enable GPIOE clock for left led
0x106E	0x4821    LDR	R0, [PC, #132]
0x1070	0x6800    LDR	R0, [R0, #0]
0x1072	0xF0400110  ORR	R1, R0, #16
0x1076	0x481F    LDR	R0, [PC, #124]
0x1078	0x6001    STR	R1, [R0, #0]
;led.c, 8 :: 		init_GPIO_Pin(MODER,   LEFT_LED_PORT,  LEFT_LED_PIN,  OUTPUT);
0x107A	0xF04F0301  MOV	R3, #1
0x107E	0x220C    MOVS	R2, #12
0x1080	0x2104    MOVS	R1, #4
0x1082	0x2000    MOVS	R0, #0
0x1084	0xF7FFF902  BL	_init_GPIO_Pin+0
;led.c, 9 :: 		init_GPIO_Pin(OTYPER,  LEFT_LED_PORT,  LEFT_LED_PIN,  PUSH_PULL);
0x1088	0xF04F0300  MOV	R3, #0
0x108C	0x220C    MOVS	R2, #12
0x108E	0x2104    MOVS	R1, #4
0x1090	0x2001    MOVS	R0, #1
0x1092	0xF7FFF8FB  BL	_init_GPIO_Pin+0
;led.c, 10 :: 		init_GPIO_Pin(OSPEEDR, LEFT_LED_PORT,  LEFT_LED_PIN,  HIGH);
0x1096	0xF04F0302  MOV	R3, #2
0x109A	0x220C    MOVS	R2, #12
0x109C	0x2104    MOVS	R1, #4
0x109E	0x2002    MOVS	R0, #2
0x10A0	0xF7FFF8F4  BL	_init_GPIO_Pin+0
;led.c, 11 :: 		init_GPIO_Pin(PUPDR,   LEFT_LED_PORT,  LEFT_LED_PIN,  PULL_UP);
0x10A4	0xF04F0301  MOV	R3, #1
0x10A8	0x220C    MOVS	R2, #12
0x10AA	0x2104    MOVS	R1, #4
0x10AC	0x2003    MOVS	R0, #3
0x10AE	0xF7FFF8ED  BL	_init_GPIO_Pin+0
;led.c, 13 :: 		init_GPIO_Pin(MODER,   RIGHT_LED_PORT, RIGHT_LED_PIN, OUTPUT);
0x10B2	0xF04F0301  MOV	R3, #1
0x10B6	0x220F    MOVS	R2, #15
0x10B8	0x2104    MOVS	R1, #4
0x10BA	0x2000    MOVS	R0, #0
0x10BC	0xF7FFF8E6  BL	_init_GPIO_Pin+0
;led.c, 14 :: 		init_GPIO_Pin(OTYPER,  RIGHT_LED_PORT, RIGHT_LED_PIN, PUSH_PULL);
0x10C0	0xF04F0300  MOV	R3, #0
0x10C4	0x220F    MOVS	R2, #15
0x10C6	0x2104    MOVS	R1, #4
0x10C8	0x2001    MOVS	R0, #1
0x10CA	0xF7FFF8DF  BL	_init_GPIO_Pin+0
;led.c, 15 :: 		init_GPIO_Pin(OSPEEDR, RIGHT_LED_PORT, RIGHT_LED_PIN, HIGH);
0x10CE	0xF04F0302  MOV	R3, #2
0x10D2	0x220F    MOVS	R2, #15
0x10D4	0x2104    MOVS	R1, #4
0x10D6	0x2002    MOVS	R0, #2
0x10D8	0xF7FFF8D8  BL	_init_GPIO_Pin+0
;led.c, 16 :: 		init_GPIO_Pin(PUPDR,   RIGHT_LED_PORT, RIGHT_LED_PIN, PULL_UP);
0x10DC	0xF04F0301  MOV	R3, #1
0x10E0	0x220F    MOVS	R2, #15
0x10E2	0x2104    MOVS	R1, #4
0x10E4	0x2003    MOVS	R0, #3
0x10E6	0xF7FFF8D1  BL	_init_GPIO_Pin+0
;led.c, 19 :: 		}
L_end_init_LEDs:
0x10EA	0xF8DDE000  LDR	LR, [SP, #0]
0x10EE	0xB001    ADD	SP, SP, #4
0x10F0	0x4770    BX	LR
0x10F2	0xBF00    NOP
0x10F4	0x38304002  	RCC_AHB1ENR+0
; end of _init_LEDs
_init_GPIO_Pin:
;gpio.c, 24 :: 		int init_GPIO_Pin(unsigned long type, unsigned long port, unsigned long no, unsigned long val){
; val start address is: 12 (R3)
; no start address is: 8 (R2)
; port start address is: 4 (R1)
; type start address is: 0 (R0)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
; port end address is: 4 (R1)
; type end address is: 0 (R0)
; type start address is: 0 (R0)
; port start address is: 4 (R1)
; no start address is: 8 (R2)
; val start address is: 12 (R3)
;gpio.c, 25 :: 		if(type != OTYPER) no <<= 1;
0x028C	0x2801    CMP	R0, #1
0x028E	0xD001    BEQ	L__init_GPIO_Pin62
0x0290	0x0052    LSLS	R2, R2, #1
; no end address is: 8 (R2)
0x0292	0xE7FF    B	L_init_GPIO_Pin0
L__init_GPIO_Pin62:
L_init_GPIO_Pin0:
;gpio.c, 27 :: 		switch(type){
; no start address is: 8 (R2)
0x0294	0xF000BB1D  B	L_init_GPIO_Pin1
; type end address is: 0 (R0)
;gpio.c, 29 :: 		case MODER:
L_init_GPIO_Pin3:
;gpio.c, 30 :: 		switch(port){
0x0298	0xE071    B	L_init_GPIO_Pin4
; port end address is: 4 (R1)
;gpio.c, 31 :: 		case PORT_A:
L_init_GPIO_Pin6:
;gpio.c, 32 :: 		GPIOA_MODER   &= ~(3UL << no);
0x029A	0xF04F0403  MOV	R4, #3
0x029E	0x4094    LSLS	R4, R2
0x02A0	0x43E5    MVN	R5, R4
0x02A2	0x4C91    LDR	R4, [PC, #580]
0x02A4	0x6824    LDR	R4, [R4, #0]
0x02A6	0xEA040505  AND	R5, R4, R5, LSL #0
0x02AA	0x4C8F    LDR	R4, [PC, #572]
0x02AC	0x6025    STR	R5, [R4, #0]
;gpio.c, 33 :: 		GPIOA_MODER   |= (val << no); return 0;
0x02AE	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x02B2	0x4C8D    LDR	R4, [PC, #564]
0x02B4	0x6824    LDR	R4, [R4, #0]
0x02B6	0xEA440505  ORR	R5, R4, R5, LSL #0
0x02BA	0x4C8B    LDR	R4, [PC, #556]
0x02BC	0x6025    STR	R5, [R4, #0]
0x02BE	0x2000    MOVS	R0, #0
0x02C0	0xB200    SXTH	R0, R0
0x02C2	0xF000BB19  B	L_end_init_GPIO_Pin
;gpio.c, 34 :: 		case PORT_B:
L_init_GPIO_Pin7:
;gpio.c, 35 :: 		GPIOB_MODER   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x02C6	0xF04F0403  MOV	R4, #3
0x02CA	0x4094    LSLS	R4, R2
0x02CC	0x43E5    MVN	R5, R4
0x02CE	0x4C87    LDR	R4, [PC, #540]
0x02D0	0x6824    LDR	R4, [R4, #0]
0x02D2	0xEA040505  AND	R5, R4, R5, LSL #0
0x02D6	0x4C85    LDR	R4, [PC, #532]
0x02D8	0x6025    STR	R5, [R4, #0]
;gpio.c, 36 :: 		GPIOB_MODER   |= (val << no); return 0;
0x02DA	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x02DE	0x4C83    LDR	R4, [PC, #524]
0x02E0	0x6824    LDR	R4, [R4, #0]
0x02E2	0xEA440505  ORR	R5, R4, R5, LSL #0
0x02E6	0x4C81    LDR	R4, [PC, #516]
0x02E8	0x6025    STR	R5, [R4, #0]
0x02EA	0x2000    MOVS	R0, #0
0x02EC	0xB200    SXTH	R0, R0
0x02EE	0xF000BB03  B	L_end_init_GPIO_Pin
;gpio.c, 37 :: 		case PORT_C:
L_init_GPIO_Pin8:
;gpio.c, 38 :: 		GPIOC_MODER   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x02F2	0xF04F0403  MOV	R4, #3
0x02F6	0x4094    LSLS	R4, R2
0x02F8	0x43E5    MVN	R5, R4
0x02FA	0x4C7D    LDR	R4, [PC, #500]
0x02FC	0x6824    LDR	R4, [R4, #0]
0x02FE	0xEA040505  AND	R5, R4, R5, LSL #0
0x0302	0x4C7B    LDR	R4, [PC, #492]
0x0304	0x6025    STR	R5, [R4, #0]
;gpio.c, 39 :: 		GPIOC_MODER   |= (val << no); return 0;
0x0306	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x030A	0x4C79    LDR	R4, [PC, #484]
0x030C	0x6824    LDR	R4, [R4, #0]
0x030E	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0312	0x4C77    LDR	R4, [PC, #476]
0x0314	0x6025    STR	R5, [R4, #0]
0x0316	0x2000    MOVS	R0, #0
0x0318	0xB200    SXTH	R0, R0
0x031A	0xF000BAED  B	L_end_init_GPIO_Pin
;gpio.c, 40 :: 		case PORT_D:
L_init_GPIO_Pin9:
;gpio.c, 41 :: 		GPIOD_MODER   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x031E	0xF04F0403  MOV	R4, #3
0x0322	0x4094    LSLS	R4, R2
0x0324	0x43E5    MVN	R5, R4
0x0326	0x4C73    LDR	R4, [PC, #460]
0x0328	0x6824    LDR	R4, [R4, #0]
0x032A	0xEA040505  AND	R5, R4, R5, LSL #0
0x032E	0x4C71    LDR	R4, [PC, #452]
0x0330	0x6025    STR	R5, [R4, #0]
;gpio.c, 42 :: 		GPIOD_MODER   |=  (val << no); return 0;
0x0332	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0336	0x4C6F    LDR	R4, [PC, #444]
0x0338	0x6824    LDR	R4, [R4, #0]
0x033A	0xEA440505  ORR	R5, R4, R5, LSL #0
0x033E	0x4C6D    LDR	R4, [PC, #436]
0x0340	0x6025    STR	R5, [R4, #0]
0x0342	0x2000    MOVS	R0, #0
0x0344	0xB200    SXTH	R0, R0
0x0346	0xF000BAD7  B	L_end_init_GPIO_Pin
;gpio.c, 43 :: 		case PORT_E:
L_init_GPIO_Pin10:
;gpio.c, 44 :: 		GPIOE_MODER    &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x034A	0xF04F0403  MOV	R4, #3
0x034E	0x4094    LSLS	R4, R2
0x0350	0x43E5    MVN	R5, R4
0x0352	0x4C69    LDR	R4, [PC, #420]
0x0354	0x6824    LDR	R4, [R4, #0]
0x0356	0xEA040505  AND	R5, R4, R5, LSL #0
0x035A	0x4C67    LDR	R4, [PC, #412]
0x035C	0x6025    STR	R5, [R4, #0]
;gpio.c, 45 :: 		GPIOE_MODER    |=  (val << no); return 0;
0x035E	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0362	0x4C65    LDR	R4, [PC, #404]
0x0364	0x6824    LDR	R4, [R4, #0]
0x0366	0xEA440505  ORR	R5, R4, R5, LSL #0
0x036A	0x4C63    LDR	R4, [PC, #396]
0x036C	0x6025    STR	R5, [R4, #0]
0x036E	0x2000    MOVS	R0, #0
0x0370	0xB200    SXTH	R0, R0
0x0372	0xF000BAC1  B	L_end_init_GPIO_Pin
;gpio.c, 46 :: 		default:
L_init_GPIO_Pin11:
;gpio.c, 47 :: 		return 1;
0x0376	0x2001    MOVS	R0, #1
0x0378	0xB200    SXTH	R0, R0
0x037A	0xF000BABD  B	L_end_init_GPIO_Pin
;gpio.c, 48 :: 		}
L_init_GPIO_Pin4:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x037E	0x2900    CMP	R1, #0
0x0380	0xF43FAF8B  BEQ	L_init_GPIO_Pin6
0x0384	0x2901    CMP	R1, #1
0x0386	0xF43FAF9E  BEQ	L_init_GPIO_Pin7
0x038A	0x2902    CMP	R1, #2
0x038C	0xD0B1    BEQ	L_init_GPIO_Pin8
0x038E	0x2903    CMP	R1, #3
0x0390	0xD0C5    BEQ	L_init_GPIO_Pin9
0x0392	0x2904    CMP	R1, #4
0x0394	0xD0D9    BEQ	L_init_GPIO_Pin10
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0396	0xE7EE    B	L_init_GPIO_Pin11
;gpio.c, 49 :: 		case OTYPER:
L_init_GPIO_Pin12:
;gpio.c, 50 :: 		switch(port){
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x0398	0xE06C    B	L_init_GPIO_Pin13
; port end address is: 4 (R1)
;gpio.c, 51 :: 		case PORT_A:
L_init_GPIO_Pin15:
;gpio.c, 52 :: 		GPIOA_OTYPER   &= ~(1UL << no);
0x039A	0xF04F0401  MOV	R4, #1
0x039E	0x4094    LSLS	R4, R2
0x03A0	0x43E5    MVN	R5, R4
0x03A2	0x4C56    LDR	R4, [PC, #344]
0x03A4	0x6824    LDR	R4, [R4, #0]
0x03A6	0xEA040505  AND	R5, R4, R5, LSL #0
0x03AA	0x4C54    LDR	R4, [PC, #336]
0x03AC	0x6025    STR	R5, [R4, #0]
;gpio.c, 53 :: 		GPIOA_OTYPER   |= (val << no); return 0;
0x03AE	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x03B2	0x4C52    LDR	R4, [PC, #328]
0x03B4	0x6824    LDR	R4, [R4, #0]
0x03B6	0xEA440505  ORR	R5, R4, R5, LSL #0
0x03BA	0x4C50    LDR	R4, [PC, #320]
0x03BC	0x6025    STR	R5, [R4, #0]
0x03BE	0x2000    MOVS	R0, #0
0x03C0	0xB200    SXTH	R0, R0
0x03C2	0xF000BA99  B	L_end_init_GPIO_Pin
;gpio.c, 54 :: 		case PORT_B:
L_init_GPIO_Pin16:
;gpio.c, 55 :: 		GPIOB_OTYPER   &= ~(1UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x03C6	0xF04F0401  MOV	R4, #1
0x03CA	0x4094    LSLS	R4, R2
0x03CC	0x43E5    MVN	R5, R4
0x03CE	0x4C4C    LDR	R4, [PC, #304]
0x03D0	0x6824    LDR	R4, [R4, #0]
0x03D2	0xEA040505  AND	R5, R4, R5, LSL #0
0x03D6	0x4C4A    LDR	R4, [PC, #296]
0x03D8	0x6025    STR	R5, [R4, #0]
;gpio.c, 56 :: 		GPIOB_OTYPER   |= (val << no); return 0;
0x03DA	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x03DE	0x4C48    LDR	R4, [PC, #288]
0x03E0	0x6824    LDR	R4, [R4, #0]
0x03E2	0xEA440505  ORR	R5, R4, R5, LSL #0
0x03E6	0x4C46    LDR	R4, [PC, #280]
0x03E8	0x6025    STR	R5, [R4, #0]
0x03EA	0x2000    MOVS	R0, #0
0x03EC	0xB200    SXTH	R0, R0
0x03EE	0xE283    B	L_end_init_GPIO_Pin
;gpio.c, 57 :: 		case PORT_C:
L_init_GPIO_Pin17:
;gpio.c, 58 :: 		GPIOC_OTYPER   &= ~(1UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x03F0	0xF04F0401  MOV	R4, #1
0x03F4	0x4094    LSLS	R4, R2
0x03F6	0x43E5    MVN	R5, R4
0x03F8	0x4C42    LDR	R4, [PC, #264]
0x03FA	0x6824    LDR	R4, [R4, #0]
0x03FC	0xEA040505  AND	R5, R4, R5, LSL #0
0x0400	0x4C40    LDR	R4, [PC, #256]
0x0402	0x6025    STR	R5, [R4, #0]
;gpio.c, 59 :: 		GPIOC_OTYPER   |= (val << no); return 0;
0x0404	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0408	0x4C3E    LDR	R4, [PC, #248]
0x040A	0x6824    LDR	R4, [R4, #0]
0x040C	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0410	0x4C3C    LDR	R4, [PC, #240]
0x0412	0x6025    STR	R5, [R4, #0]
0x0414	0x2000    MOVS	R0, #0
0x0416	0xB200    SXTH	R0, R0
0x0418	0xE26E    B	L_end_init_GPIO_Pin
;gpio.c, 60 :: 		case PORT_D:
L_init_GPIO_Pin18:
;gpio.c, 61 :: 		GPIOD_OTYPER   &= ~(1UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x041A	0xF04F0401  MOV	R4, #1
0x041E	0x4094    LSLS	R4, R2
0x0420	0x43E5    MVN	R5, R4
0x0422	0x4C39    LDR	R4, [PC, #228]
0x0424	0x6824    LDR	R4, [R4, #0]
0x0426	0xEA040505  AND	R5, R4, R5, LSL #0
0x042A	0x4C37    LDR	R4, [PC, #220]
0x042C	0x6025    STR	R5, [R4, #0]
;gpio.c, 62 :: 		GPIOD_OTYPER   |= (val << no); return 0;
0x042E	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0432	0x4C35    LDR	R4, [PC, #212]
0x0434	0x6824    LDR	R4, [R4, #0]
0x0436	0xEA440505  ORR	R5, R4, R5, LSL #0
0x043A	0x4C33    LDR	R4, [PC, #204]
0x043C	0x6025    STR	R5, [R4, #0]
0x043E	0x2000    MOVS	R0, #0
0x0440	0xB200    SXTH	R0, R0
0x0442	0xE259    B	L_end_init_GPIO_Pin
;gpio.c, 63 :: 		case PORT_E:
L_init_GPIO_Pin19:
;gpio.c, 64 :: 		GPIOE_OTYPER   &= ~(1UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0444	0xF04F0401  MOV	R4, #1
0x0448	0x4094    LSLS	R4, R2
0x044A	0x43E5    MVN	R5, R4
0x044C	0x4C2F    LDR	R4, [PC, #188]
0x044E	0x6824    LDR	R4, [R4, #0]
0x0450	0xEA040505  AND	R5, R4, R5, LSL #0
0x0454	0x4C2D    LDR	R4, [PC, #180]
0x0456	0x6025    STR	R5, [R4, #0]
;gpio.c, 65 :: 		GPIOE_OTYPER   |= (val << no); return 0;
0x0458	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x045C	0x4C2B    LDR	R4, [PC, #172]
0x045E	0x6824    LDR	R4, [R4, #0]
0x0460	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0464	0x4C29    LDR	R4, [PC, #164]
0x0466	0x6025    STR	R5, [R4, #0]
0x0468	0x2000    MOVS	R0, #0
0x046A	0xB200    SXTH	R0, R0
0x046C	0xE244    B	L_end_init_GPIO_Pin
;gpio.c, 66 :: 		default:
L_init_GPIO_Pin20:
;gpio.c, 67 :: 		return 2;
0x046E	0x2002    MOVS	R0, #2
0x0470	0xB200    SXTH	R0, R0
0x0472	0xE241    B	L_end_init_GPIO_Pin
;gpio.c, 68 :: 		}
L_init_GPIO_Pin13:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x0474	0x2900    CMP	R1, #0
0x0476	0xF43FAF90  BEQ	L_init_GPIO_Pin15
0x047A	0x2901    CMP	R1, #1
0x047C	0xF43FAFA3  BEQ	L_init_GPIO_Pin16
0x0480	0x2902    CMP	R1, #2
0x0482	0xD0B5    BEQ	L_init_GPIO_Pin17
0x0484	0x2903    CMP	R1, #3
0x0486	0xD0C8    BEQ	L_init_GPIO_Pin18
0x0488	0x2904    CMP	R1, #4
0x048A	0xD0DB    BEQ	L_init_GPIO_Pin19
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x048C	0xE7EF    B	L_init_GPIO_Pin20
;gpio.c, 69 :: 		case OSPEEDR:
L_init_GPIO_Pin21:
;gpio.c, 70 :: 		switch(port){
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x048E	0xE085    B	L_init_GPIO_Pin22
; port end address is: 4 (R1)
;gpio.c, 71 :: 		case PORT_A:
L_init_GPIO_Pin24:
;gpio.c, 72 :: 		GPIOA_OSPEEDR &= ~(3UL << no);
0x0490	0xF04F0403  MOV	R4, #3
0x0494	0x4094    LSLS	R4, R2
0x0496	0x43E5    MVN	R5, R4
0x0498	0x4C1D    LDR	R4, [PC, #116]
0x049A	0x6824    LDR	R4, [R4, #0]
0x049C	0xEA040505  AND	R5, R4, R5, LSL #0
0x04A0	0x4C1B    LDR	R4, [PC, #108]
0x04A2	0x6025    STR	R5, [R4, #0]
;gpio.c, 73 :: 		GPIOA_OSPEEDR |= (val << no); return 0;
0x04A4	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x04A8	0x4C19    LDR	R4, [PC, #100]
0x04AA	0x6824    LDR	R4, [R4, #0]
0x04AC	0xEA440505  ORR	R5, R4, R5, LSL #0
0x04B0	0x4C17    LDR	R4, [PC, #92]
0x04B2	0x6025    STR	R5, [R4, #0]
0x04B4	0x2000    MOVS	R0, #0
0x04B6	0xB200    SXTH	R0, R0
0x04B8	0xE21E    B	L_end_init_GPIO_Pin
;gpio.c, 74 :: 		case PORT_B:
L_init_GPIO_Pin25:
;gpio.c, 75 :: 		GPIOB_OSPEEDR &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x04BA	0xF04F0403  MOV	R4, #3
0x04BE	0x4094    LSLS	R4, R2
0x04C0	0x43E5    MVN	R5, R4
0x04C2	0x4C14    LDR	R4, [PC, #80]
0x04C4	0x6824    LDR	R4, [R4, #0]
0x04C6	0xEA040505  AND	R5, R4, R5, LSL #0
0x04CA	0x4C12    LDR	R4, [PC, #72]
0x04CC	0x6025    STR	R5, [R4, #0]
;gpio.c, 76 :: 		GPIOB_OSPEEDR |= (val << no); return 0;
0x04CE	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x04D2	0x4C10    LDR	R4, [PC, #64]
0x04D4	0x6824    LDR	R4, [R4, #0]
0x04D6	0xEA440505  ORR	R5, R4, R5, LSL #0
0x04DA	0x4C0E    LDR	R4, [PC, #56]
0x04DC	0x6025    STR	R5, [R4, #0]
0x04DE	0x2000    MOVS	R0, #0
0x04E0	0xB200    SXTH	R0, R0
0x04E2	0xE209    B	L_end_init_GPIO_Pin
0x04E4	0xF000B818  B	#48
0x04E8	0x00004002  	GPIOA_MODER+0
0x04EC	0x04004002  	GPIOB_MODER+0
0x04F0	0x08004002  	GPIOC_MODER+0
0x04F4	0x0C004002  	GPIOD_MODER+0
0x04F8	0x10004002  	GPIOE_MODER+0
0x04FC	0x00044002  	GPIOA_OTYPER+0
0x0500	0x04044002  	GPIOB_OTYPER+0
0x0504	0x08044002  	GPIOC_OTYPER+0
0x0508	0x0C044002  	GPIOD_OTYPER+0
0x050C	0x10044002  	GPIOE_OTYPER+0
0x0510	0x00084002  	GPIOA_OSPEEDR+0
0x0514	0x04084002  	GPIOB_OSPEEDR+0
;gpio.c, 77 :: 		case PORT_C:
L_init_GPIO_Pin26:
;gpio.c, 78 :: 		GPIOC_OSPEEDR &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0518	0xF04F0403  MOV	R4, #3
0x051C	0x4094    LSLS	R4, R2
0x051E	0x43E5    MVN	R5, R4
0x0520	0x4CAB    LDR	R4, [PC, #684]
0x0522	0x6824    LDR	R4, [R4, #0]
0x0524	0xEA040505  AND	R5, R4, R5, LSL #0
0x0528	0x4CA9    LDR	R4, [PC, #676]
0x052A	0x6025    STR	R5, [R4, #0]
;gpio.c, 79 :: 		GPIOC_OSPEEDR |= (val << no); return 0;
0x052C	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0530	0x4CA7    LDR	R4, [PC, #668]
0x0532	0x6824    LDR	R4, [R4, #0]
0x0534	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0538	0x4CA5    LDR	R4, [PC, #660]
0x053A	0x6025    STR	R5, [R4, #0]
0x053C	0x2000    MOVS	R0, #0
0x053E	0xB200    SXTH	R0, R0
0x0540	0xE1DA    B	L_end_init_GPIO_Pin
;gpio.c, 80 :: 		case PORT_D:
L_init_GPIO_Pin27:
;gpio.c, 81 :: 		GPIOD_OSPEEDR &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0542	0xF04F0403  MOV	R4, #3
0x0546	0x4094    LSLS	R4, R2
0x0548	0x43E5    MVN	R5, R4
0x054A	0x4CA2    LDR	R4, [PC, #648]
0x054C	0x6824    LDR	R4, [R4, #0]
0x054E	0xEA040505  AND	R5, R4, R5, LSL #0
0x0552	0x4CA0    LDR	R4, [PC, #640]
0x0554	0x6025    STR	R5, [R4, #0]
;gpio.c, 82 :: 		GPIOD_OSPEEDR |= (val << no); return 0;
0x0556	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x055A	0x4C9E    LDR	R4, [PC, #632]
0x055C	0x6824    LDR	R4, [R4, #0]
0x055E	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0562	0x4C9C    LDR	R4, [PC, #624]
0x0564	0x6025    STR	R5, [R4, #0]
0x0566	0x2000    MOVS	R0, #0
0x0568	0xB200    SXTH	R0, R0
0x056A	0xE1C5    B	L_end_init_GPIO_Pin
;gpio.c, 83 :: 		case PORT_E:
L_init_GPIO_Pin28:
;gpio.c, 84 :: 		GPIOE_OSPEEDR &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x056C	0xF04F0403  MOV	R4, #3
0x0570	0x4094    LSLS	R4, R2
0x0572	0x43E5    MVN	R5, R4
0x0574	0x4C98    LDR	R4, [PC, #608]
0x0576	0x6824    LDR	R4, [R4, #0]
0x0578	0xEA040505  AND	R5, R4, R5, LSL #0
0x057C	0x4C96    LDR	R4, [PC, #600]
0x057E	0x6025    STR	R5, [R4, #0]
;gpio.c, 85 :: 		GPIOE_OSPEEDR |= (val << no); return 0;
0x0580	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0584	0x4C94    LDR	R4, [PC, #592]
0x0586	0x6824    LDR	R4, [R4, #0]
0x0588	0xEA440505  ORR	R5, R4, R5, LSL #0
0x058C	0x4C92    LDR	R4, [PC, #584]
0x058E	0x6025    STR	R5, [R4, #0]
0x0590	0x2000    MOVS	R0, #0
0x0592	0xB200    SXTH	R0, R0
0x0594	0xE1B0    B	L_end_init_GPIO_Pin
;gpio.c, 86 :: 		default:
L_init_GPIO_Pin29:
;gpio.c, 87 :: 		return 3;
0x0596	0x2003    MOVS	R0, #3
0x0598	0xB200    SXTH	R0, R0
0x059A	0xE1AD    B	L_end_init_GPIO_Pin
;gpio.c, 88 :: 		}
L_init_GPIO_Pin22:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x059C	0x2900    CMP	R1, #0
0x059E	0xF43FAF77  BEQ	L_init_GPIO_Pin24
0x05A2	0x2901    CMP	R1, #1
0x05A4	0xF43FAF89  BEQ	L_init_GPIO_Pin25
0x05A8	0x2902    CMP	R1, #2
0x05AA	0xD0B5    BEQ	L_init_GPIO_Pin26
0x05AC	0x2903    CMP	R1, #3
0x05AE	0xD0C8    BEQ	L_init_GPIO_Pin27
0x05B0	0x2904    CMP	R1, #4
0x05B2	0xD0DB    BEQ	L_init_GPIO_Pin28
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x05B4	0xE7EF    B	L_init_GPIO_Pin29
;gpio.c, 89 :: 		case PUPDR:
L_init_GPIO_Pin30:
;gpio.c, 90 :: 		switch(port){
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x05B6	0xE06B    B	L_init_GPIO_Pin31
; port end address is: 4 (R1)
;gpio.c, 91 :: 		case PORT_A:
L_init_GPIO_Pin33:
;gpio.c, 92 :: 		GPIOA_PUPDR   &= ~(3UL << no);
0x05B8	0xF04F0403  MOV	R4, #3
0x05BC	0x4094    LSLS	R4, R2
0x05BE	0x43E5    MVN	R5, R4
0x05C0	0x4C86    LDR	R4, [PC, #536]
0x05C2	0x6824    LDR	R4, [R4, #0]
0x05C4	0xEA040505  AND	R5, R4, R5, LSL #0
0x05C8	0x4C84    LDR	R4, [PC, #528]
0x05CA	0x6025    STR	R5, [R4, #0]
;gpio.c, 93 :: 		GPIOA_PUPDR   |= (val << no); return 0;
0x05CC	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x05D0	0x4C82    LDR	R4, [PC, #520]
0x05D2	0x6824    LDR	R4, [R4, #0]
0x05D4	0xEA440505  ORR	R5, R4, R5, LSL #0
0x05D8	0x4C80    LDR	R4, [PC, #512]
0x05DA	0x6025    STR	R5, [R4, #0]
0x05DC	0x2000    MOVS	R0, #0
0x05DE	0xB200    SXTH	R0, R0
0x05E0	0xE18A    B	L_end_init_GPIO_Pin
;gpio.c, 94 :: 		case PORT_B:
L_init_GPIO_Pin34:
;gpio.c, 95 :: 		GPIOB_PUPDR   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x05E2	0xF04F0403  MOV	R4, #3
0x05E6	0x4094    LSLS	R4, R2
0x05E8	0x43E5    MVN	R5, R4
0x05EA	0x4C7D    LDR	R4, [PC, #500]
0x05EC	0x6824    LDR	R4, [R4, #0]
0x05EE	0xEA040505  AND	R5, R4, R5, LSL #0
0x05F2	0x4C7B    LDR	R4, [PC, #492]
0x05F4	0x6025    STR	R5, [R4, #0]
;gpio.c, 96 :: 		GPIOB_PUPDR   |= (val << no); return 0;
0x05F6	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x05FA	0x4C79    LDR	R4, [PC, #484]
0x05FC	0x6824    LDR	R4, [R4, #0]
0x05FE	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0602	0x4C77    LDR	R4, [PC, #476]
0x0604	0x6025    STR	R5, [R4, #0]
0x0606	0x2000    MOVS	R0, #0
0x0608	0xB200    SXTH	R0, R0
0x060A	0xE175    B	L_end_init_GPIO_Pin
;gpio.c, 97 :: 		case PORT_C:
L_init_GPIO_Pin35:
;gpio.c, 98 :: 		GPIOC_PUPDR   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x060C	0xF04F0403  MOV	R4, #3
0x0610	0x4094    LSLS	R4, R2
0x0612	0x43E5    MVN	R5, R4
0x0614	0x4C73    LDR	R4, [PC, #460]
0x0616	0x6824    LDR	R4, [R4, #0]
0x0618	0xEA040505  AND	R5, R4, R5, LSL #0
0x061C	0x4C71    LDR	R4, [PC, #452]
0x061E	0x6025    STR	R5, [R4, #0]
;gpio.c, 99 :: 		GPIOC_PUPDR   |= (val << no); return 0;
0x0620	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0624	0x4C6F    LDR	R4, [PC, #444]
0x0626	0x6824    LDR	R4, [R4, #0]
0x0628	0xEA440505  ORR	R5, R4, R5, LSL #0
0x062C	0x4C6D    LDR	R4, [PC, #436]
0x062E	0x6025    STR	R5, [R4, #0]
0x0630	0x2000    MOVS	R0, #0
0x0632	0xB200    SXTH	R0, R0
0x0634	0xE160    B	L_end_init_GPIO_Pin
;gpio.c, 100 :: 		case PORT_D:
L_init_GPIO_Pin36:
;gpio.c, 101 :: 		GPIOD_PUPDR   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0636	0xF04F0403  MOV	R4, #3
0x063A	0x4094    LSLS	R4, R2
0x063C	0x43E5    MVN	R5, R4
0x063E	0x4C6A    LDR	R4, [PC, #424]
0x0640	0x6824    LDR	R4, [R4, #0]
0x0642	0xEA040505  AND	R5, R4, R5, LSL #0
0x0646	0x4C68    LDR	R4, [PC, #416]
0x0648	0x6025    STR	R5, [R4, #0]
;gpio.c, 102 :: 		GPIOD_PUPDR   |= (val << no); return 0;
0x064A	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x064E	0x4C66    LDR	R4, [PC, #408]
0x0650	0x6824    LDR	R4, [R4, #0]
0x0652	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0656	0x4C64    LDR	R4, [PC, #400]
0x0658	0x6025    STR	R5, [R4, #0]
0x065A	0x2000    MOVS	R0, #0
0x065C	0xB200    SXTH	R0, R0
0x065E	0xE14B    B	L_end_init_GPIO_Pin
;gpio.c, 103 :: 		case PORT_E:
L_init_GPIO_Pin37:
;gpio.c, 104 :: 		GPIOE_PUPDR   &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0660	0xF04F0403  MOV	R4, #3
0x0664	0x4094    LSLS	R4, R2
0x0666	0x43E5    MVN	R5, R4
0x0668	0x4C60    LDR	R4, [PC, #384]
0x066A	0x6824    LDR	R4, [R4, #0]
0x066C	0xEA040505  AND	R5, R4, R5, LSL #0
0x0670	0x4C5E    LDR	R4, [PC, #376]
0x0672	0x6025    STR	R5, [R4, #0]
;gpio.c, 105 :: 		GPIOE_PUPDR   |= (val << no); return 0;
0x0674	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0678	0x4C5C    LDR	R4, [PC, #368]
0x067A	0x6824    LDR	R4, [R4, #0]
0x067C	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0680	0x4C5A    LDR	R4, [PC, #360]
0x0682	0x6025    STR	R5, [R4, #0]
0x0684	0x2000    MOVS	R0, #0
0x0686	0xB200    SXTH	R0, R0
0x0688	0xE136    B	L_end_init_GPIO_Pin
;gpio.c, 106 :: 		default:
L_init_GPIO_Pin38:
;gpio.c, 107 :: 		return 4;
0x068A	0x2004    MOVS	R0, #4
0x068C	0xB200    SXTH	R0, R0
0x068E	0xE133    B	L_end_init_GPIO_Pin
;gpio.c, 108 :: 		}
L_init_GPIO_Pin31:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x0690	0x2900    CMP	R1, #0
0x0692	0xF43FAF91  BEQ	L_init_GPIO_Pin33
0x0696	0x2901    CMP	R1, #1
0x0698	0xF43FAFA3  BEQ	L_init_GPIO_Pin34
0x069C	0x2902    CMP	R1, #2
0x069E	0xD0B5    BEQ	L_init_GPIO_Pin35
0x06A0	0x2903    CMP	R1, #3
0x06A2	0xD0C8    BEQ	L_init_GPIO_Pin36
0x06A4	0x2904    CMP	R1, #4
0x06A6	0xD0DB    BEQ	L_init_GPIO_Pin37
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x06A8	0xE7EF    B	L_init_GPIO_Pin38
;gpio.c, 109 :: 		case AFRL:
L_init_GPIO_Pin39:
;gpio.c, 110 :: 		switch(port){
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x06AA	0xE06B    B	L_init_GPIO_Pin40
; port end address is: 4 (R1)
;gpio.c, 111 :: 		case PORT_A:
L_init_GPIO_Pin42:
;gpio.c, 112 :: 		GPIOA_AFRL    &= ~(3UL << no);
0x06AC	0xF04F0403  MOV	R4, #3
0x06B0	0x4094    LSLS	R4, R2
0x06B2	0x43E5    MVN	R5, R4
0x06B4	0x4C4E    LDR	R4, [PC, #312]
0x06B6	0x6824    LDR	R4, [R4, #0]
0x06B8	0xEA040505  AND	R5, R4, R5, LSL #0
0x06BC	0x4C4C    LDR	R4, [PC, #304]
0x06BE	0x6025    STR	R5, [R4, #0]
;gpio.c, 113 :: 		GPIOA_AFRL    |= (val << no); return 0;
0x06C0	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x06C4	0x4C4A    LDR	R4, [PC, #296]
0x06C6	0x6824    LDR	R4, [R4, #0]
0x06C8	0xEA440505  ORR	R5, R4, R5, LSL #0
0x06CC	0x4C48    LDR	R4, [PC, #288]
0x06CE	0x6025    STR	R5, [R4, #0]
0x06D0	0x2000    MOVS	R0, #0
0x06D2	0xB200    SXTH	R0, R0
0x06D4	0xE110    B	L_end_init_GPIO_Pin
;gpio.c, 114 :: 		case PORT_B:
L_init_GPIO_Pin43:
;gpio.c, 115 :: 		GPIOB_AFRL    &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x06D6	0xF04F0403  MOV	R4, #3
0x06DA	0x4094    LSLS	R4, R2
0x06DC	0x43E5    MVN	R5, R4
0x06DE	0x4C45    LDR	R4, [PC, #276]
0x06E0	0x6824    LDR	R4, [R4, #0]
0x06E2	0xEA040505  AND	R5, R4, R5, LSL #0
0x06E6	0x4C43    LDR	R4, [PC, #268]
0x06E8	0x6025    STR	R5, [R4, #0]
;gpio.c, 116 :: 		GPIOB_AFRL    |= (val << no); return 0;
0x06EA	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x06EE	0x4C41    LDR	R4, [PC, #260]
0x06F0	0x6824    LDR	R4, [R4, #0]
0x06F2	0xEA440505  ORR	R5, R4, R5, LSL #0
0x06F6	0x4C3F    LDR	R4, [PC, #252]
0x06F8	0x6025    STR	R5, [R4, #0]
0x06FA	0x2000    MOVS	R0, #0
0x06FC	0xB200    SXTH	R0, R0
0x06FE	0xE0FB    B	L_end_init_GPIO_Pin
;gpio.c, 117 :: 		case PORT_C:
L_init_GPIO_Pin44:
;gpio.c, 118 :: 		GPIOC_AFRL    &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0700	0xF04F0403  MOV	R4, #3
0x0704	0x4094    LSLS	R4, R2
0x0706	0x43E5    MVN	R5, R4
0x0708	0x4C3B    LDR	R4, [PC, #236]
0x070A	0x6824    LDR	R4, [R4, #0]
0x070C	0xEA040505  AND	R5, R4, R5, LSL #0
0x0710	0x4C39    LDR	R4, [PC, #228]
0x0712	0x6025    STR	R5, [R4, #0]
;gpio.c, 119 :: 		GPIOC_AFRL    |= (val << no); return 0;
0x0714	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0718	0x4C37    LDR	R4, [PC, #220]
0x071A	0x6824    LDR	R4, [R4, #0]
0x071C	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0720	0x4C35    LDR	R4, [PC, #212]
0x0722	0x6025    STR	R5, [R4, #0]
0x0724	0x2000    MOVS	R0, #0
0x0726	0xB200    SXTH	R0, R0
0x0728	0xE0E6    B	L_end_init_GPIO_Pin
;gpio.c, 120 :: 		case PORT_D:
L_init_GPIO_Pin45:
;gpio.c, 121 :: 		GPIOD_AFRL    &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x072A	0xF04F0403  MOV	R4, #3
0x072E	0x4094    LSLS	R4, R2
0x0730	0x43E5    MVN	R5, R4
0x0732	0x4C32    LDR	R4, [PC, #200]
0x0734	0x6824    LDR	R4, [R4, #0]
0x0736	0xEA040505  AND	R5, R4, R5, LSL #0
0x073A	0x4C30    LDR	R4, [PC, #192]
0x073C	0x6025    STR	R5, [R4, #0]
;gpio.c, 122 :: 		GPIOD_AFRL    |= (val << no); return 0;
0x073E	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0742	0x4C2E    LDR	R4, [PC, #184]
0x0744	0x6824    LDR	R4, [R4, #0]
0x0746	0xEA440505  ORR	R5, R4, R5, LSL #0
0x074A	0x4C2C    LDR	R4, [PC, #176]
0x074C	0x6025    STR	R5, [R4, #0]
0x074E	0x2000    MOVS	R0, #0
0x0750	0xB200    SXTH	R0, R0
0x0752	0xE0D1    B	L_end_init_GPIO_Pin
;gpio.c, 123 :: 		case PORT_E:
L_init_GPIO_Pin46:
;gpio.c, 124 :: 		GPIOE_AFRL    &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0754	0xF04F0403  MOV	R4, #3
0x0758	0x4094    LSLS	R4, R2
0x075A	0x43E5    MVN	R5, R4
0x075C	0x4C28    LDR	R4, [PC, #160]
0x075E	0x6824    LDR	R4, [R4, #0]
0x0760	0xEA040505  AND	R5, R4, R5, LSL #0
0x0764	0x4C26    LDR	R4, [PC, #152]
0x0766	0x6025    STR	R5, [R4, #0]
;gpio.c, 125 :: 		GPIOE_AFRL    |= (val << no); return 0;
0x0768	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x076C	0x4C24    LDR	R4, [PC, #144]
0x076E	0x6824    LDR	R4, [R4, #0]
0x0770	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0774	0x4C22    LDR	R4, [PC, #136]
0x0776	0x6025    STR	R5, [R4, #0]
0x0778	0x2000    MOVS	R0, #0
0x077A	0xB200    SXTH	R0, R0
0x077C	0xE0BC    B	L_end_init_GPIO_Pin
;gpio.c, 126 :: 		default:
L_init_GPIO_Pin47:
;gpio.c, 127 :: 		return 4;
0x077E	0x2004    MOVS	R0, #4
0x0780	0xB200    SXTH	R0, R0
0x0782	0xE0B9    B	L_end_init_GPIO_Pin
;gpio.c, 128 :: 		}
L_init_GPIO_Pin40:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x0784	0x2900    CMP	R1, #0
0x0786	0xF43FAF91  BEQ	L_init_GPIO_Pin42
0x078A	0x2901    CMP	R1, #1
0x078C	0xF43FAFA3  BEQ	L_init_GPIO_Pin43
0x0790	0x2902    CMP	R1, #2
0x0792	0xD0B5    BEQ	L_init_GPIO_Pin44
0x0794	0x2903    CMP	R1, #3
0x0796	0xD0C8    BEQ	L_init_GPIO_Pin45
0x0798	0x2904    CMP	R1, #4
0x079A	0xD0DB    BEQ	L_init_GPIO_Pin46
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x079C	0xE7EF    B	L_init_GPIO_Pin47
;gpio.c, 129 :: 		case AFRH:
L_init_GPIO_Pin48:
;gpio.c, 130 :: 		switch(port){
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x079E	0xE088    B	L_init_GPIO_Pin49
; port end address is: 4 (R1)
;gpio.c, 131 :: 		case PORT_A:
L_init_GPIO_Pin51:
;gpio.c, 132 :: 		GPIOA_AFRH    &= ~(3UL << no);
0x07A0	0xF04F0403  MOV	R4, #3
0x07A4	0x4094    LSLS	R4, R2
0x07A6	0x43E5    MVN	R5, R4
0x07A8	0x4C16    LDR	R4, [PC, #88]
0x07AA	0x6824    LDR	R4, [R4, #0]
0x07AC	0xEA040505  AND	R5, R4, R5, LSL #0
0x07B0	0x4C14    LDR	R4, [PC, #80]
0x07B2	0x6025    STR	R5, [R4, #0]
;gpio.c, 133 :: 		GPIOA_AFRH    |= (val << no); return 0;
0x07B4	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x07B8	0x4C12    LDR	R4, [PC, #72]
0x07BA	0x6824    LDR	R4, [R4, #0]
0x07BC	0xEA440505  ORR	R5, R4, R5, LSL #0
0x07C0	0x4C10    LDR	R4, [PC, #64]
0x07C2	0x6025    STR	R5, [R4, #0]
0x07C4	0x2000    MOVS	R0, #0
0x07C6	0xB200    SXTH	R0, R0
0x07C8	0xE096    B	L_end_init_GPIO_Pin
;gpio.c, 134 :: 		case PORT_B:
L_init_GPIO_Pin52:
;gpio.c, 135 :: 		GPIOB_AFRH    &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x07CA	0xF04F0403  MOV	R4, #3
0x07CE	0xE01B    B	#54
0x07D0	0x08084002  	GPIOC_OSPEEDR+0
0x07D4	0x0C084002  	GPIOD_OSPEEDR+0
0x07D8	0x10084002  	GPIOE_OSPEEDR+0
0x07DC	0x000C4002  	GPIOA_PUPDR+0
0x07E0	0x040C4002  	GPIOB_PUPDR+0
0x07E4	0x080C4002  	GPIOC_PUPDR+0
0x07E8	0x0C0C4002  	GPIOD_PUPDR+0
0x07EC	0x100C4002  	GPIOE_PUPDR+0
0x07F0	0x00204002  	GPIOA_AFRL+0
0x07F4	0x04204002  	GPIOB_AFRL+0
0x07F8	0x08204002  	GPIOC_AFRL+0
0x07FC	0x0C204002  	GPIOD_AFRL+0
0x0800	0x10204002  	GPIOE_AFRL+0
0x0804	0x00244002  	GPIOA_AFRH+0
0x0808	0x4094    LSLS	R4, R2
0x080A	0x43E5    MVN	R5, R4
0x080C	0x4C3B    LDR	R4, [PC, #236]
0x080E	0x6824    LDR	R4, [R4, #0]
0x0810	0xEA040505  AND	R5, R4, R5, LSL #0
0x0814	0x4C39    LDR	R4, [PC, #228]
0x0816	0x6025    STR	R5, [R4, #0]
;gpio.c, 136 :: 		GPIOB_AFRH    |= (val << no); return 0;
0x0818	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x081C	0x4C37    LDR	R4, [PC, #220]
0x081E	0x6824    LDR	R4, [R4, #0]
0x0820	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0824	0x4C35    LDR	R4, [PC, #212]
0x0826	0x6025    STR	R5, [R4, #0]
0x0828	0x2000    MOVS	R0, #0
0x082A	0xB200    SXTH	R0, R0
0x082C	0xE064    B	L_end_init_GPIO_Pin
;gpio.c, 137 :: 		case PORT_C:
L_init_GPIO_Pin53:
;gpio.c, 138 :: 		GPIOC_AFRH    &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x082E	0xF04F0403  MOV	R4, #3
0x0832	0x4094    LSLS	R4, R2
0x0834	0x43E5    MVN	R5, R4
0x0836	0x4C32    LDR	R4, [PC, #200]
0x0838	0x6824    LDR	R4, [R4, #0]
0x083A	0xEA040505  AND	R5, R4, R5, LSL #0
0x083E	0x4C30    LDR	R4, [PC, #192]
0x0840	0x6025    STR	R5, [R4, #0]
;gpio.c, 139 :: 		GPIOC_AFRH    |= (val << no); return 0;
0x0842	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0846	0x4C2E    LDR	R4, [PC, #184]
0x0848	0x6824    LDR	R4, [R4, #0]
0x084A	0xEA440505  ORR	R5, R4, R5, LSL #0
0x084E	0x4C2C    LDR	R4, [PC, #176]
0x0850	0x6025    STR	R5, [R4, #0]
0x0852	0x2000    MOVS	R0, #0
0x0854	0xB200    SXTH	R0, R0
0x0856	0xE04F    B	L_end_init_GPIO_Pin
;gpio.c, 140 :: 		case PORT_D:
L_init_GPIO_Pin54:
;gpio.c, 141 :: 		GPIOD_AFRH    &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0858	0xF04F0403  MOV	R4, #3
0x085C	0x4094    LSLS	R4, R2
0x085E	0x43E5    MVN	R5, R4
0x0860	0x4C28    LDR	R4, [PC, #160]
0x0862	0x6824    LDR	R4, [R4, #0]
0x0864	0xEA040505  AND	R5, R4, R5, LSL #0
0x0868	0x4C26    LDR	R4, [PC, #152]
0x086A	0x6025    STR	R5, [R4, #0]
;gpio.c, 142 :: 		GPIOD_AFRH    |= (val << no); return 0;
0x086C	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x0870	0x4C24    LDR	R4, [PC, #144]
0x0872	0x6824    LDR	R4, [R4, #0]
0x0874	0xEA440505  ORR	R5, R4, R5, LSL #0
0x0878	0x4C22    LDR	R4, [PC, #136]
0x087A	0x6025    STR	R5, [R4, #0]
0x087C	0x2000    MOVS	R0, #0
0x087E	0xB200    SXTH	R0, R0
0x0880	0xE03A    B	L_end_init_GPIO_Pin
;gpio.c, 143 :: 		case PORT_E:
L_init_GPIO_Pin55:
;gpio.c, 144 :: 		GPIOE_AFRH    &= ~(3UL << no);
; no start address is: 8 (R2)
; val start address is: 12 (R3)
0x0882	0xF04F0403  MOV	R4, #3
0x0886	0x4094    LSLS	R4, R2
0x0888	0x43E5    MVN	R5, R4
0x088A	0x4C1F    LDR	R4, [PC, #124]
0x088C	0x6824    LDR	R4, [R4, #0]
0x088E	0xEA040505  AND	R5, R4, R5, LSL #0
0x0892	0x4C1D    LDR	R4, [PC, #116]
0x0894	0x6025    STR	R5, [R4, #0]
;gpio.c, 145 :: 		GPIOE_AFRH    |= (val << no); return 0;
0x0896	0xFA03F502  LSL	R5, R3, R2
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x089A	0x4C1B    LDR	R4, [PC, #108]
0x089C	0x6824    LDR	R4, [R4, #0]
0x089E	0xEA440505  ORR	R5, R4, R5, LSL #0
0x08A2	0x4C19    LDR	R4, [PC, #100]
0x08A4	0x6025    STR	R5, [R4, #0]
0x08A6	0x2000    MOVS	R0, #0
0x08A8	0xB200    SXTH	R0, R0
0x08AA	0xE025    B	L_end_init_GPIO_Pin
;gpio.c, 146 :: 		default:
L_init_GPIO_Pin56:
;gpio.c, 147 :: 		return 4;
0x08AC	0x2004    MOVS	R0, #4
0x08AE	0xB200    SXTH	R0, R0
0x08B0	0xE022    B	L_end_init_GPIO_Pin
;gpio.c, 148 :: 		}
L_init_GPIO_Pin49:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
0x08B2	0x2900    CMP	R1, #0
0x08B4	0xF43FAF74  BEQ	L_init_GPIO_Pin51
0x08B8	0x2901    CMP	R1, #1
0x08BA	0xF43FAF86  BEQ	L_init_GPIO_Pin52
0x08BE	0x2902    CMP	R1, #2
0x08C0	0xD0B5    BEQ	L_init_GPIO_Pin53
0x08C2	0x2903    CMP	R1, #3
0x08C4	0xD0C8    BEQ	L_init_GPIO_Pin54
0x08C6	0x2904    CMP	R1, #4
0x08C8	0xD0DB    BEQ	L_init_GPIO_Pin55
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x08CA	0xE7EF    B	L_init_GPIO_Pin56
;gpio.c, 149 :: 		default:
L_init_GPIO_Pin57:
;gpio.c, 150 :: 		return 5;
0x08CC	0x2005    MOVS	R0, #5
0x08CE	0xB200    SXTH	R0, R0
0x08D0	0xE012    B	L_end_init_GPIO_Pin
;gpio.c, 151 :: 		}
L_init_GPIO_Pin1:
; no start address is: 8 (R2)
; val start address is: 12 (R3)
; port start address is: 4 (R1)
; type start address is: 0 (R0)
0x08D2	0x2800    CMP	R0, #0
0x08D4	0xF43FACE0  BEQ	L_init_GPIO_Pin3
0x08D8	0x2801    CMP	R0, #1
0x08DA	0xF43FAD5D  BEQ	L_init_GPIO_Pin12
0x08DE	0x2802    CMP	R0, #2
0x08E0	0xF43FADD5  BEQ	L_init_GPIO_Pin21
0x08E4	0x2803    CMP	R0, #3
0x08E6	0xF43FAE66  BEQ	L_init_GPIO_Pin30
0x08EA	0x2804    CMP	R0, #4
0x08EC	0xF43FAEDD  BEQ	L_init_GPIO_Pin39
0x08F0	0x2805    CMP	R0, #5
0x08F2	0xF43FAF54  BEQ	L_init_GPIO_Pin48
; type end address is: 0 (R0)
; port end address is: 4 (R1)
; val end address is: 12 (R3)
; no end address is: 8 (R2)
0x08F6	0xE7E9    B	L_init_GPIO_Pin57
;gpio.c, 153 :: 		}
L_end_init_GPIO_Pin:
0x08F8	0x4770    BX	LR
0x08FA	0xBF00    NOP
0x08FC	0x04244002  	GPIOB_AFRH+0
0x0900	0x08244002  	GPIOC_AFRH+0
0x0904	0x0C244002  	GPIOD_AFRH+0
0x0908	0x10244002  	GPIOE_AFRH+0
; end of _init_GPIO_Pin
_init_Buttons:
;button.c, 3 :: 		void init_Buttons(){
0x0F9C	0xB081    SUB	SP, SP, #4
0x0F9E	0xF8CDE000  STR	LR, [SP, #0]
;button.c, 5 :: 		init_GPIO_Pin(MODER,   LEFT_BUTTON_PORT,  LEFT_BUTTON_PIN,  INPUT);
0x0FA2	0xF04F0300  MOV	R3, #0
0x0FA6	0x2200    MOVS	R2, #0
0x0FA8	0x2104    MOVS	R1, #4
0x0FAA	0x2000    MOVS	R0, #0
0x0FAC	0xF7FFF96E  BL	_init_GPIO_Pin+0
;button.c, 6 :: 		init_GPIO_Pin(OSPEEDR, LEFT_BUTTON_PORT,  LEFT_BUTTON_PIN,  HIGH);
0x0FB0	0xF04F0302  MOV	R3, #2
0x0FB4	0x2200    MOVS	R2, #0
0x0FB6	0x2104    MOVS	R1, #4
0x0FB8	0x2002    MOVS	R0, #2
0x0FBA	0xF7FFF967  BL	_init_GPIO_Pin+0
;button.c, 7 :: 		init_GPIO_Pin(PUPDR,   LEFT_BUTTON_PORT,  LEFT_BUTTON_PIN,  PULL_UP);
0x0FBE	0xF04F0301  MOV	R3, #1
0x0FC2	0x2200    MOVS	R2, #0
0x0FC4	0x2104    MOVS	R1, #4
0x0FC6	0x2003    MOVS	R0, #3
0x0FC8	0xF7FFF960  BL	_init_GPIO_Pin+0
;button.c, 9 :: 		SYSCFG_EXTICR1 |= 0x4;               // SYStem Configuration Controler - EXTernal Interrupt Configuration Register 1
0x0FCC	0x4822    LDR	R0, [PC, #136]
0x0FCE	0x6800    LDR	R0, [R0, #0]
0x0FD0	0xF0400104  ORR	R1, R0, #4
0x0FD4	0x4820    LDR	R0, [PC, #128]
0x0FD6	0x6001    STR	R1, [R0, #0]
;button.c, 12 :: 		EXTI_IMR       |= 1 << LEFT_BUTTON_PIN;                 // Interrupt mask on line (1)
0x0FD8	0x4820    LDR	R0, [PC, #128]
0x0FDA	0x6800    LDR	R0, [R0, #0]
0x0FDC	0xF0400101  ORR	R1, R0, #1
0x0FE0	0x481E    LDR	R0, [PC, #120]
0x0FE2	0x6001    STR	R1, [R0, #0]
;button.c, 13 :: 		EXTI_FTSR      |= 1 << LEFT_BUTTON_PIN;                 // Fall edge (press button)
0x0FE4	0x481E    LDR	R0, [PC, #120]
0x0FE6	0x6800    LDR	R0, [R0, #0]
0x0FE8	0xF0400101  ORR	R1, R0, #1
0x0FEC	0x481C    LDR	R0, [PC, #112]
0x0FEE	0x6001    STR	R1, [R0, #0]
;button.c, 17 :: 		NVIC_IntEnable(IVT_INT_EXTI0);       // Nested Vector Interrupt Controller
0x0FF0	0xF2400016  MOVW	R0, #22
0x0FF4	0xF7FFFC8A  BL	_NVIC_IntEnable+0
;button.c, 20 :: 		init_GPIO_Pin(MODER,   RIGHT_BUTTON_PORT, RIGHT_BUTTON_PIN, INPUT);
0x0FF8	0xF04F0300  MOV	R3, #0
0x0FFC	0x220A    MOVS	R2, #10
0x0FFE	0x2100    MOVS	R1, #0
0x1000	0x2000    MOVS	R0, #0
0x1002	0xF7FFF943  BL	_init_GPIO_Pin+0
;button.c, 21 :: 		init_GPIO_Pin(OSPEEDR, RIGHT_BUTTON_PORT, RIGHT_BUTTON_PIN, HIGH);
0x1006	0xF04F0302  MOV	R3, #2
0x100A	0x220A    MOVS	R2, #10
0x100C	0x2100    MOVS	R1, #0
0x100E	0x2002    MOVS	R0, #2
0x1010	0xF7FFF93C  BL	_init_GPIO_Pin+0
;button.c, 22 :: 		init_GPIO_Pin(PUPDR,   RIGHT_BUTTON_PORT, RIGHT_BUTTON_PIN, PULL_UP);
0x1014	0xF04F0301  MOV	R3, #1
0x1018	0x220A    MOVS	R2, #10
0x101A	0x2100    MOVS	R1, #0
0x101C	0x2003    MOVS	R0, #3
0x101E	0xF7FFF935  BL	_init_GPIO_Pin+0
;button.c, 24 :: 		SYSCFG_EXTICR3 &= ~(15UL << 8);      // EXTI 10 (on 3x4 bits) interrupt Port A (0 - 0000)
0x1022	0x4810    LDR	R0, [PC, #64]
0x1024	0x6801    LDR	R1, [R0, #0]
0x1026	0xF46F6070  MVN	R0, #3840
0x102A	0x4001    ANDS	R1, R0
0x102C	0x480D    LDR	R0, [PC, #52]
0x102E	0x6001    STR	R1, [R0, #0]
;button.c, 28 :: 		EXTI_IMR       |= 1 << RIGHT_BUTTON_PIN;         // Interrupt mask on line (10)
0x1030	0x480A    LDR	R0, [PC, #40]
0x1032	0x6800    LDR	R0, [R0, #0]
0x1034	0xF4406180  ORR	R1, R0, #1024
0x1038	0x4808    LDR	R0, [PC, #32]
0x103A	0x6001    STR	R1, [R0, #0]
;button.c, 29 :: 		EXTI_FTSR      |= 1 << RIGHT_BUTTON_PIN;         // Fall edge (press button)
0x103C	0x4808    LDR	R0, [PC, #32]
0x103E	0x6800    LDR	R0, [R0, #0]
0x1040	0xF4406180  ORR	R1, R0, #1024
0x1044	0x4806    LDR	R0, [PC, #24]
0x1046	0x6001    STR	R1, [R0, #0]
;button.c, 32 :: 		NVIC_IntEnable(IVT_INT_EXTI15_10);   // Nested Vector Interrupt Controller
0x1048	0xF2400038  MOVW	R0, #56
0x104C	0xF7FFFC5E  BL	_NVIC_IntEnable+0
;button.c, 34 :: 		}
L_end_init_Buttons:
0x1050	0xF8DDE000  LDR	LR, [SP, #0]
0x1054	0xB001    ADD	SP, SP, #4
0x1056	0x4770    BX	LR
0x1058	0x38084001  	SYSCFG_EXTICR1+0
0x105C	0x3C004001  	EXTI_IMR+0
0x1060	0x3C0C4001  	EXTI_FTSR+0
0x1064	0x38104001  	SYSCFG_EXTICR3+0
; end of _init_Buttons
_NVIC_IntEnable:
;__Lib_System_4XX.c, 171 :: 		
; ivt start address is: 0 (R0)
0x090C	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_4XX.c, 183 :: 		
0x090E	0x2804    CMP	R0, #4
0x0910	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 188 :: 		
0x0912	0x4919    LDR	R1, [PC, #100]
0x0914	0x6809    LDR	R1, [R1, #0]
0x0916	0xF4413280  ORR	R2, R1, #65536
0x091A	0x4917    LDR	R1, [PC, #92]
0x091C	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 189 :: 		
0x091E	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_4XX.c, 190 :: 		
; ivt start address is: 0 (R0)
0x0920	0x2805    CMP	R0, #5
0x0922	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 195 :: 		
0x0924	0x4914    LDR	R1, [PC, #80]
0x0926	0x6809    LDR	R1, [R1, #0]
0x0928	0xF4413200  ORR	R2, R1, #131072
0x092C	0x4912    LDR	R1, [PC, #72]
0x092E	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 196 :: 		
0x0930	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_4XX.c, 197 :: 		
; ivt start address is: 0 (R0)
0x0932	0x2806    CMP	R0, #6
0x0934	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 202 :: 		
0x0936	0x4910    LDR	R1, [PC, #64]
0x0938	0x6809    LDR	R1, [R1, #0]
0x093A	0xF4412280  ORR	R2, R1, #262144
0x093E	0x490E    LDR	R1, [PC, #56]
0x0940	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 203 :: 		
0x0942	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_4XX.c, 204 :: 		
; ivt start address is: 0 (R0)
0x0944	0x280F    CMP	R0, #15
0x0946	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 209 :: 		
0x0948	0x490C    LDR	R1, [PC, #48]
0x094A	0x6809    LDR	R1, [R1, #0]
0x094C	0xF0410202  ORR	R2, R1, #2
0x0950	0x490A    LDR	R1, [PC, #40]
0x0952	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 210 :: 		
0x0954	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_4XX.c, 211 :: 		
; ivt start address is: 0 (R0)
0x0956	0x2810    CMP	R0, #16
0x0958	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_4XX.c, 216 :: 		
0x095A	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x095E	0x0961    LSRS	R1, R4, #5
0x0960	0x008A    LSLS	R2, R1, #2
0x0962	0x4907    LDR	R1, [PC, #28]
0x0964	0x188B    ADDS	R3, R1, R2
;__Lib_System_4XX.c, 217 :: 		
0x0966	0xF004021F  AND	R2, R4, #31
0x096A	0xF04F0101  MOV	R1, #1
0x096E	0x4091    LSLS	R1, R2
0x0970	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 218 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_4XX.c, 219 :: 		
L_end_NVIC_IntEnable:
0x0972	0xB001    ADD	SP, SP, #4
0x0974	0x4770    BX	LR
0x0976	0xBF00    NOP
0x0978	0xED24E000  	SCB_SHCRS+0
0x097C	0xE010E000  	STK_CTRL+0
0x0980	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_init_UART:
;uart.c, 80 :: 		void init_UART(){
0x10F8	0xB081    SUB	SP, SP, #4
0x10FA	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 81 :: 		init_UART_pins();
0x10FE	0xF7FFFC41  BL	_init_UART_pins+0
;uart.c, 94 :: 		UART4_BRR = 0x00000682;
0x1102	0xF2406182  MOVW	R1, #1666
0x1106	0x4819    LDR	R0, [PC, #100]
0x1108	0x6001    STR	R1, [R0, #0]
;uart.c, 96 :: 		init_UART4_Register(CR1, WORD_LENGTH, WORD_8B);
0x110A	0xF04F0200  MOV	R2, #0
0x110E	0x210C    MOVS	R1, #12
0x1110	0x2001    MOVS	R0, #1
0x1112	0xF7FFFD6D  BL	_init_UART4_Register+0
;uart.c, 97 :: 		init_UART4_Register(CR1, PARITY, PARITY_DISABLE);
0x1116	0xF04F0200  MOV	R2, #0
0x111A	0x210A    MOVS	R1, #10
0x111C	0x2001    MOVS	R0, #1
0x111E	0xF7FFFD67  BL	_init_UART4_Register+0
;uart.c, 99 :: 		init_UART4_Register(CR1, UART_RECEIVE, UART_RX_ON);
0x1122	0xF04F0201  MOV	R2, #1
0x1126	0xF04F0102  MOV	R1, #2
0x112A	0x2001    MOVS	R0, #1
0x112C	0xF7FFFD60  BL	_init_UART4_Register+0
;uart.c, 100 :: 		init_UART4_Register(CR1, UART_TRANSMIT, UART_TX_ON);
0x1130	0xF04F0201  MOV	R2, #1
0x1134	0xF04F0103  MOV	R1, #3
0x1138	0x2001    MOVS	R0, #1
0x113A	0xF7FFFD59  BL	_init_UART4_Register+0
;uart.c, 102 :: 		init_UART4_Register(CR1, UART_RX_INTERRUPT,UART_RX_INTERRUPT_ON);
0x113E	0xF04F0201  MOV	R2, #1
0x1142	0xF04F0105  MOV	R1, #5
0x1146	0x2001    MOVS	R0, #1
0x1148	0xF7FFFD52  BL	_init_UART4_Register+0
;uart.c, 105 :: 		NVIC_IntEnable(IVT_INT_UART4);        // TODO change this!
0x114C	0xF2400044  MOVW	R0, #68
0x1150	0xF7FFFBDC  BL	_NVIC_IntEnable+0
;uart.c, 107 :: 		init_UART4_Register(CR1, UART4_ED,UART4_ENABLE);
0x1154	0xF04F0201  MOV	R2, #1
0x1158	0xF04F010D  MOV	R1, #13
0x115C	0x2001    MOVS	R0, #1
0x115E	0xF7FFFD47  BL	_init_UART4_Register+0
;uart.c, 108 :: 		}
L_end_init_UART:
0x1162	0xF8DDE000  LDR	LR, [SP, #0]
0x1166	0xB001    ADD	SP, SP, #4
0x1168	0x4770    BX	LR
0x116A	0xBF00    NOP
0x116C	0x4C084000  	UART4_BRR+0
; end of _init_UART
_init_UART_pins:
;uart.c, 21 :: 		void init_UART_pins(){
0x0984	0xB081    SUB	SP, SP, #4
0x0986	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 24 :: 		RCC_AHB1ENR    |=  (1UL << UART4_TX_PORT);      // Enable clock for port A TX
0x098A	0x4830    LDR	R0, [PC, #192]
0x098C	0x6800    LDR	R0, [R0, #0]
0x098E	0xF0400101  ORR	R1, R0, #1
0x0992	0x482E    LDR	R0, [PC, #184]
0x0994	0x6001    STR	R1, [R0, #0]
;uart.c, 26 :: 		RCC_APB1ENR    |=   (1UL << 19);      // Enable UART4 Clock
0x0996	0x482E    LDR	R0, [PC, #184]
0x0998	0x6800    LDR	R0, [R0, #0]
0x099A	0xF4402100  ORR	R1, R0, #524288
0x099E	0x482C    LDR	R0, [PC, #176]
0x09A0	0x6001    STR	R1, [R0, #0]
;uart.c, 28 :: 		init_GPIO_Pin(MODER,   UART4_TX_PORT, UART4_TX_PIN, ALTERNATIVE_FUNCTION);
0x09A2	0xF04F0302  MOV	R3, #2
0x09A6	0x2200    MOVS	R2, #0
0x09A8	0x2100    MOVS	R1, #0
0x09AA	0x2000    MOVS	R0, #0
0x09AC	0xF7FFFC6E  BL	_init_GPIO_Pin+0
;uart.c, 29 :: 		init_GPIO_Pin(MODER,   UART4_RX_PORT, UART4_RX_PIN, ALTERNATIVE_FUNCTION);
0x09B0	0xF04F0302  MOV	R3, #2
0x09B4	0x2201    MOVS	R2, #1
0x09B6	0x2100    MOVS	R1, #0
0x09B8	0x2000    MOVS	R0, #0
0x09BA	0xF7FFFC67  BL	_init_GPIO_Pin+0
;uart.c, 31 :: 		init_GPIO_Pin(OTYPER,  UART4_TX_PORT, UART4_TX_PIN, PUSH_PULL);
0x09BE	0xF04F0300  MOV	R3, #0
0x09C2	0x2200    MOVS	R2, #0
0x09C4	0x2100    MOVS	R1, #0
0x09C6	0x2001    MOVS	R0, #1
0x09C8	0xF7FFFC60  BL	_init_GPIO_Pin+0
;uart.c, 32 :: 		init_GPIO_Pin(OTYPER,  UART4_RX_PORT, UART4_RX_PIN, PUSH_PULL);
0x09CC	0xF04F0300  MOV	R3, #0
0x09D0	0x2201    MOVS	R2, #1
0x09D2	0x2100    MOVS	R1, #0
0x09D4	0x2001    MOVS	R0, #1
0x09D6	0xF7FFFC59  BL	_init_GPIO_Pin+0
;uart.c, 34 :: 		init_GPIO_Pin(OSPEEDR, UART4_TX_PORT, UART4_TX_PIN, HIGH);
0x09DA	0xF04F0302  MOV	R3, #2
0x09DE	0x2200    MOVS	R2, #0
0x09E0	0x2100    MOVS	R1, #0
0x09E2	0x2002    MOVS	R0, #2
0x09E4	0xF7FFFC52  BL	_init_GPIO_Pin+0
;uart.c, 35 :: 		init_GPIO_Pin(OSPEEDR, UART4_RX_PORT, UART4_RX_PIN, HIGH);
0x09E8	0xF04F0302  MOV	R3, #2
0x09EC	0x2201    MOVS	R2, #1
0x09EE	0x2100    MOVS	R1, #0
0x09F0	0x2002    MOVS	R0, #2
0x09F2	0xF7FFFC4B  BL	_init_GPIO_Pin+0
;uart.c, 37 :: 		init_GPIO_Pin(PUPDR, UART4_TX_PORT, UART4_TX_PIN, PULL_UP);
0x09F6	0xF04F0301  MOV	R3, #1
0x09FA	0x2200    MOVS	R2, #0
0x09FC	0x2100    MOVS	R1, #0
0x09FE	0x2003    MOVS	R0, #3
0x0A00	0xF7FFFC44  BL	_init_GPIO_Pin+0
;uart.c, 38 :: 		init_GPIO_Pin(PUPDR, UART4_RX_PORT, UART4_RX_PIN, PULL_UP);
0x0A04	0xF04F0301  MOV	R3, #1
0x0A08	0x2201    MOVS	R2, #1
0x0A0A	0x2100    MOVS	R1, #0
0x0A0C	0x2003    MOVS	R0, #3
0x0A0E	0xF7FFFC3D  BL	_init_GPIO_Pin+0
;uart.c, 42 :: 		GPIOA_AFRL     &= ~(15UL << 0);       // Clear Alternative Function
0x0A12	0x4810    LDR	R0, [PC, #64]
0x0A14	0x6801    LDR	R1, [R0, #0]
0x0A16	0xF06F000F  MVN	R0, #15
0x0A1A	0x4001    ANDS	R1, R0
0x0A1C	0x480D    LDR	R0, [PC, #52]
0x0A1E	0x6001    STR	R1, [R0, #0]
;uart.c, 43 :: 		GPIOA_AFRL     &= ~(15UL << 4);       // Clear Alternative Function
0x0A20	0x480C    LDR	R0, [PC, #48]
0x0A22	0x6800    LDR	R0, [R0, #0]
0x0A24	0xF000010F  AND	R1, R0, #15
0x0A28	0x480A    LDR	R0, [PC, #40]
0x0A2A	0x6001    STR	R1, [R0, #0]
;uart.c, 44 :: 		GPIOA_AFRL     |=  (8UL << 0);        // Set Alternative Function 8 (low registar)
0x0A2C	0x4809    LDR	R0, [PC, #36]
0x0A2E	0x6800    LDR	R0, [R0, #0]
0x0A30	0xF0400108  ORR	R1, R0, #8
0x0A34	0x4807    LDR	R0, [PC, #28]
0x0A36	0x6001    STR	R1, [R0, #0]
;uart.c, 45 :: 		GPIOA_AFRL     |=  (8UL << 4);        // Set Alternative Function 8 (low registar)
0x0A38	0x4806    LDR	R0, [PC, #24]
0x0A3A	0x6800    LDR	R0, [R0, #0]
0x0A3C	0xF0400180  ORR	R1, R0, #128
0x0A40	0x4804    LDR	R0, [PC, #16]
0x0A42	0x6001    STR	R1, [R0, #0]
;uart.c, 47 :: 		}
L_end_init_UART_pins:
0x0A44	0xF8DDE000  LDR	LR, [SP, #0]
0x0A48	0xB001    ADD	SP, SP, #4
0x0A4A	0x4770    BX	LR
0x0A4C	0x38304002  	RCC_AHB1ENR+0
0x0A50	0x38404002  	RCC_APB1ENR+0
0x0A54	0x00204002  	GPIOA_AFRL+0
; end of _init_UART_pins
_init_UART4_Register:
;gpio.c, 156 :: 		int init_UART4_Register(unsigned long type, unsigned long no, unsigned long val){
; val start address is: 8 (R2)
; no start address is: 4 (R1)
; type start address is: 0 (R0)
; val end address is: 8 (R2)
; no end address is: 4 (R1)
; type end address is: 0 (R0)
; type start address is: 0 (R0)
; no start address is: 4 (R1)
; val start address is: 8 (R2)
;gpio.c, 157 :: 		switch(type){
0x0BF0	0xE013    B	L_init_UART4_Register58
; type end address is: 0 (R0)
;gpio.c, 159 :: 		case CR1:
L_init_UART4_Register60:
;gpio.c, 160 :: 		UART4_CR1 &= ~(val << no);
0x0BF2	0xFA02F501  LSL	R5, R2, R1
; no end address is: 4 (R1)
; val end address is: 8 (R2)
0x0BF6	0x43EC    MVN	R4, R5
0x0BF8	0x4B0B    LDR	R3, [PC, #44]
0x0BFA	0x681B    LDR	R3, [R3, #0]
0x0BFC	0xEA030404  AND	R4, R3, R4, LSL #0
0x0C00	0x4B09    LDR	R3, [PC, #36]
0x0C02	0x601C    STR	R4, [R3, #0]
;gpio.c, 161 :: 		UART4_CR1 |=   val << no;
0x0C04	0x4B08    LDR	R3, [PC, #32]
0x0C06	0x681B    LDR	R3, [R3, #0]
0x0C08	0xEA430405  ORR	R4, R3, R5, LSL #0
0x0C0C	0x4B06    LDR	R3, [PC, #24]
0x0C0E	0x601C    STR	R4, [R3, #0]
;gpio.c, 162 :: 		break;
0x0C10	0xE006    B	L_init_UART4_Register59
;gpio.c, 165 :: 		default: return -1;
L_init_UART4_Register61:
0x0C12	0xF64F70FF  MOVW	R0, #65535
0x0C16	0xB200    SXTH	R0, R0
0x0C18	0xE004    B	L_end_init_UART4_Register
;gpio.c, 167 :: 		}
L_init_UART4_Register58:
; val start address is: 8 (R2)
; no start address is: 4 (R1)
; type start address is: 0 (R0)
0x0C1A	0x2801    CMP	R0, #1
0x0C1C	0xD0E9    BEQ	L_init_UART4_Register60
; type end address is: 0 (R0)
; no end address is: 4 (R1)
; val end address is: 8 (R2)
0x0C1E	0xE7F8    B	L_init_UART4_Register61
L_init_UART4_Register59:
;gpio.c, 168 :: 		return 0;
0x0C20	0x2000    MOVS	R0, #0
0x0C22	0xB200    SXTH	R0, R0
;gpio.c, 169 :: 		}
L_end_init_UART4_Register:
0x0C24	0x4770    BX	LR
0x0C26	0xBF00    NOP
0x0C28	0x4C0C4000  	UART4_CR1+0
; end of _init_UART4_Register
_init_Lcd:
;lcd.c, 163 :: 		void init_Lcd(){
0x1190	0xB081    SUB	SP, SP, #4
0x1192	0xF8CDE000  STR	LR, [SP, #0]
;lcd.c, 165 :: 		lcd_gpio_init();
0x1196	0xF7FFFD49  BL	_lcd_gpio_init+0
;lcd.c, 166 :: 		Delay_ms(20);
0x119A	0xF24167FE  MOVW	R7, #5886
0x119E	0xF2C00711  MOVT	R7, #17
L_init_Lcd20:
0x11A2	0x1E7F    SUBS	R7, R7, #1
0x11A4	0xD1FD    BNE	L_init_Lcd20
0x11A6	0xBF00    NOP
0x11A8	0xBF00    NOP
0x11AA	0xBF00    NOP
0x11AC	0xBF00    NOP
0x11AE	0xBF00    NOP
;lcd.c, 168 :: 		lcd_Control_Write(0x33);
0x11B0	0x2033    MOVS	R0, #51
0x11B2	0xF7FFFFDD  BL	_lcd_Control_Write+0
;lcd.c, 169 :: 		Delay_ms(20);
0x11B6	0xF24167FE  MOVW	R7, #5886
0x11BA	0xF2C00711  MOVT	R7, #17
0x11BE	0xBF00    NOP
0x11C0	0xBF00    NOP
L_init_Lcd22:
0x11C2	0x1E7F    SUBS	R7, R7, #1
0x11C4	0xD1FD    BNE	L_init_Lcd22
0x11C6	0xBF00    NOP
0x11C8	0xBF00    NOP
0x11CA	0xBF00    NOP
;lcd.c, 170 :: 		lcd_Control_Write(0x32);
0x11CC	0x2032    MOVS	R0, #50
0x11CE	0xF7FFFFCF  BL	_lcd_Control_Write+0
;lcd.c, 172 :: 		Delay_us(20);
0x11D2	0xF240475E  MOVW	R7, #1118
0x11D6	0xF2C00700  MOVT	R7, #0
L_init_Lcd24:
0x11DA	0x1E7F    SUBS	R7, R7, #1
0x11DC	0xD1FD    BNE	L_init_Lcd24
0x11DE	0xBF00    NOP
0x11E0	0xBF00    NOP
0x11E2	0xBF00    NOP
0x11E4	0xBF00    NOP
0x11E6	0xBF00    NOP
;lcd.c, 174 :: 		lcd_Control_Write(LCD_DISP_INIT);     // 0x28  Start to set LCD function
0x11E8	0x2028    MOVS	R0, #40
0x11EA	0xF7FFFFC1  BL	_lcd_Control_Write+0
;lcd.c, 175 :: 		Delay_us(20);
0x11EE	0xF240475E  MOVW	R7, #1118
0x11F2	0xF2C00700  MOVT	R7, #0
0x11F6	0xBF00    NOP
0x11F8	0xBF00    NOP
L_init_Lcd26:
0x11FA	0x1E7F    SUBS	R7, R7, #1
0x11FC	0xD1FD    BNE	L_init_Lcd26
0x11FE	0xBF00    NOP
0x1200	0xBF00    NOP
0x1202	0xBF00    NOP
;lcd.c, 177 :: 		lcd_Control_Write(LCD_DISP_OFF);
0x1204	0x2008    MOVS	R0, #8
0x1206	0xF7FFFFB3  BL	_lcd_Control_Write+0
;lcd.c, 178 :: 		Delay_us(20);
0x120A	0xF240475E  MOVW	R7, #1118
0x120E	0xF2C00700  MOVT	R7, #0
L_init_Lcd28:
0x1212	0x1E7F    SUBS	R7, R7, #1
0x1214	0xD1FD    BNE	L_init_Lcd28
0x1216	0xBF00    NOP
0x1218	0xBF00    NOP
0x121A	0xBF00    NOP
0x121C	0xBF00    NOP
0x121E	0xBF00    NOP
;lcd.c, 180 :: 		lcd_Control_Write(LCD_CLEAR_DISPLAY); //0x01  clear LCD
0x1220	0x2001    MOVS	R0, #1
0x1222	0xF7FFFFA5  BL	_lcd_Control_Write+0
;lcd.c, 181 :: 		Delay_us(900);
0x1226	0xF24C47DE  MOVW	R7, #50398
0x122A	0xF2C00700  MOVT	R7, #0
0x122E	0xBF00    NOP
0x1230	0xBF00    NOP
L_init_Lcd30:
0x1232	0x1E7F    SUBS	R7, R7, #1
0x1234	0xD1FD    BNE	L_init_Lcd30
0x1236	0xBF00    NOP
0x1238	0xBF00    NOP
0x123A	0xBF00    NOP
;lcd.c, 183 :: 		lcd_Control_Write(LCD_INC_MODE);      // set entry mode
0x123C	0x2006    MOVS	R0, #6
0x123E	0xF7FFFF97  BL	_lcd_Control_Write+0
;lcd.c, 184 :: 		Delay_us(20);
0x1242	0xF240475E  MOVW	R7, #1118
0x1246	0xF2C00700  MOVT	R7, #0
L_init_Lcd32:
0x124A	0x1E7F    SUBS	R7, R7, #1
0x124C	0xD1FD    BNE	L_init_Lcd32
0x124E	0xBF00    NOP
0x1250	0xBF00    NOP
0x1252	0xBF00    NOP
0x1254	0xBF00    NOP
0x1256	0xBF00    NOP
;lcd.c, 186 :: 		lcd_Control_Write(LCD_DISP_ON);       // set display to on
0x1258	0x200C    MOVS	R0, #12
0x125A	0xF7FFFF89  BL	_lcd_Control_Write+0
;lcd.c, 187 :: 		Delay_us(20);
0x125E	0xF240475E  MOVW	R7, #1118
0x1262	0xF2C00700  MOVT	R7, #0
0x1266	0xBF00    NOP
0x1268	0xBF00    NOP
L_init_Lcd34:
0x126A	0x1E7F    SUBS	R7, R7, #1
0x126C	0xD1FD    BNE	L_init_Lcd34
0x126E	0xBF00    NOP
0x1270	0xBF00    NOP
0x1272	0xBF00    NOP
;lcd.c, 189 :: 		lcd_Control_Write(LCD_RETRN_HOME);    // move cursor to home and set data address to 0
0x1274	0x2002    MOVS	R0, #2
0x1276	0xF7FFFF7B  BL	_lcd_Control_Write+0
;lcd.c, 190 :: 		Delay_us(20);
0x127A	0xF240475E  MOVW	R7, #1118
0x127E	0xF2C00700  MOVT	R7, #0
L_init_Lcd36:
0x1282	0x1E7F    SUBS	R7, R7, #1
0x1284	0xD1FD    BNE	L_init_Lcd36
0x1286	0xBF00    NOP
0x1288	0xBF00    NOP
0x128A	0xBF00    NOP
0x128C	0xBF00    NOP
0x128E	0xBF00    NOP
;lcd.c, 192 :: 		}
L_end_init_Lcd:
0x1290	0xF8DDE000  LDR	LR, [SP, #0]
0x1294	0xB001    ADD	SP, SP, #4
0x1296	0x4770    BX	LR
; end of _init_Lcd
_lcd_gpio_init:
;lcd.c, 25 :: 		void lcd_gpio_init(){
0x0C2C	0xB081    SUB	SP, SP, #4
0x0C2E	0xF8CDE000  STR	LR, [SP, #0]
;lcd.c, 27 :: 		RCC_AHB1ENR    |= (1UL << PORT_C) ;
0x0C32	0x4859    LDR	R0, [PC, #356]
0x0C34	0x6800    LDR	R0, [R0, #0]
0x0C36	0xF0400104  ORR	R1, R0, #4
0x0C3A	0x4857    LDR	R0, [PC, #348]
0x0C3C	0x6001    STR	R1, [R0, #0]
;lcd.c, 32 :: 		init_GPIO_Pin(MODER,   LCD_EN_PORT, LCD_EN_PIN  ,OUTPUT);
0x0C3E	0xF04F0301  MOV	R3, #1
0x0C42	0x220D    MOVS	R2, #13
0x0C44	0x2102    MOVS	R1, #2
0x0C46	0x2000    MOVS	R0, #0
0x0C48	0xF7FFFB20  BL	_init_GPIO_Pin+0
;lcd.c, 33 :: 		init_GPIO_Pin(MODER,   LCD_RS_PORT, LCD_RS_PIN  ,OUTPUT);
0x0C4C	0xF04F0301  MOV	R3, #1
0x0C50	0x2204    MOVS	R2, #4
0x0C52	0x2102    MOVS	R1, #2
0x0C54	0x2000    MOVS	R0, #0
0x0C56	0xF7FFFB19  BL	_init_GPIO_Pin+0
;lcd.c, 34 :: 		init_GPIO_Pin(MODER,   LCD_D4_PORT, LCD_D4_PIN  ,OUTPUT);
0x0C5A	0xF04F0301  MOV	R3, #1
0x0C5E	0x2203    MOVS	R2, #3
0x0C60	0x2102    MOVS	R1, #2
0x0C62	0x2000    MOVS	R0, #0
0x0C64	0xF7FFFB12  BL	_init_GPIO_Pin+0
;lcd.c, 35 :: 		init_GPIO_Pin(MODER,   LCD_D5_PORT, LCD_D5_PIN  ,OUTPUT);
0x0C68	0xF04F0301  MOV	R3, #1
0x0C6C	0x2202    MOVS	R2, #2
0x0C6E	0x2102    MOVS	R1, #2
0x0C70	0x2000    MOVS	R0, #0
0x0C72	0xF7FFFB0B  BL	_init_GPIO_Pin+0
;lcd.c, 36 :: 		init_GPIO_Pin(MODER,   LCD_D6_PORT, LCD_D6_PIN  ,OUTPUT);
0x0C76	0xF04F0301  MOV	R3, #1
0x0C7A	0x2201    MOVS	R2, #1
0x0C7C	0x2102    MOVS	R1, #2
0x0C7E	0x2000    MOVS	R0, #0
0x0C80	0xF7FFFB04  BL	_init_GPIO_Pin+0
;lcd.c, 37 :: 		init_GPIO_Pin(MODER,   LCD_D7_PORT, LCD_D7_PIN  ,OUTPUT);
0x0C84	0xF04F0301  MOV	R3, #1
0x0C88	0x2200    MOVS	R2, #0
0x0C8A	0x2102    MOVS	R1, #2
0x0C8C	0x2000    MOVS	R0, #0
0x0C8E	0xF7FFFAFD  BL	_init_GPIO_Pin+0
;lcd.c, 41 :: 		init_GPIO_Pin(OTYPER,  LCD_EN_PORT, LCD_EN_PIN  ,PUSH_PULL);
0x0C92	0xF04F0300  MOV	R3, #0
0x0C96	0x220D    MOVS	R2, #13
0x0C98	0x2102    MOVS	R1, #2
0x0C9A	0x2001    MOVS	R0, #1
0x0C9C	0xF7FFFAF6  BL	_init_GPIO_Pin+0
;lcd.c, 42 :: 		init_GPIO_Pin(OTYPER,  LCD_RS_PORT, LCD_RS_PIN  ,PUSH_PULL);
0x0CA0	0xF04F0300  MOV	R3, #0
0x0CA4	0x2204    MOVS	R2, #4
0x0CA6	0x2102    MOVS	R1, #2
0x0CA8	0x2001    MOVS	R0, #1
0x0CAA	0xF7FFFAEF  BL	_init_GPIO_Pin+0
;lcd.c, 43 :: 		init_GPIO_Pin(OTYPER,  LCD_D4_PORT, LCD_D4_PIN  ,PUSH_PULL);
0x0CAE	0xF04F0300  MOV	R3, #0
0x0CB2	0x2203    MOVS	R2, #3
0x0CB4	0x2102    MOVS	R1, #2
0x0CB6	0x2001    MOVS	R0, #1
0x0CB8	0xF7FFFAE8  BL	_init_GPIO_Pin+0
;lcd.c, 44 :: 		init_GPIO_Pin(OTYPER,  LCD_D5_PORT, LCD_D5_PIN  ,PUSH_PULL);
0x0CBC	0xF04F0300  MOV	R3, #0
0x0CC0	0x2202    MOVS	R2, #2
0x0CC2	0x2102    MOVS	R1, #2
0x0CC4	0x2001    MOVS	R0, #1
0x0CC6	0xF7FFFAE1  BL	_init_GPIO_Pin+0
;lcd.c, 45 :: 		init_GPIO_Pin(OTYPER,  LCD_D6_PORT, LCD_D6_PIN  ,PUSH_PULL);
0x0CCA	0xF04F0300  MOV	R3, #0
0x0CCE	0x2201    MOVS	R2, #1
0x0CD0	0x2102    MOVS	R1, #2
0x0CD2	0x2001    MOVS	R0, #1
0x0CD4	0xF7FFFADA  BL	_init_GPIO_Pin+0
;lcd.c, 46 :: 		init_GPIO_Pin(OTYPER,  LCD_D7_PORT, LCD_D7_PIN  ,PUSH_PULL);
0x0CD8	0xF04F0300  MOV	R3, #0
0x0CDC	0x2200    MOVS	R2, #0
0x0CDE	0x2102    MOVS	R1, #2
0x0CE0	0x2001    MOVS	R0, #1
0x0CE2	0xF7FFFAD3  BL	_init_GPIO_Pin+0
;lcd.c, 50 :: 		init_GPIO_Pin(OSPEEDR, LCD_EN_PORT, LCD_EN_PIN  ,HIGH);
0x0CE6	0xF04F0302  MOV	R3, #2
0x0CEA	0x220D    MOVS	R2, #13
0x0CEC	0x2102    MOVS	R1, #2
0x0CEE	0x2002    MOVS	R0, #2
0x0CF0	0xF7FFFACC  BL	_init_GPIO_Pin+0
;lcd.c, 51 :: 		init_GPIO_Pin(OSPEEDR, LCD_RS_PORT, LCD_RS_PIN  ,HIGH);
0x0CF4	0xF04F0302  MOV	R3, #2
0x0CF8	0x2204    MOVS	R2, #4
0x0CFA	0x2102    MOVS	R1, #2
0x0CFC	0x2002    MOVS	R0, #2
0x0CFE	0xF7FFFAC5  BL	_init_GPIO_Pin+0
;lcd.c, 52 :: 		init_GPIO_Pin(OSPEEDR, LCD_D4_PORT, LCD_D4_PIN  ,HIGH);
0x0D02	0xF04F0302  MOV	R3, #2
0x0D06	0x2203    MOVS	R2, #3
0x0D08	0x2102    MOVS	R1, #2
0x0D0A	0x2002    MOVS	R0, #2
0x0D0C	0xF7FFFABE  BL	_init_GPIO_Pin+0
;lcd.c, 53 :: 		init_GPIO_Pin(OSPEEDR, LCD_D5_PORT, LCD_D5_PIN  ,HIGH);
0x0D10	0xF04F0302  MOV	R3, #2
0x0D14	0x2202    MOVS	R2, #2
0x0D16	0x2102    MOVS	R1, #2
0x0D18	0x2002    MOVS	R0, #2
0x0D1A	0xF7FFFAB7  BL	_init_GPIO_Pin+0
;lcd.c, 54 :: 		init_GPIO_Pin(OSPEEDR, LCD_D6_PORT, LCD_D6_PIN  ,HIGH);
0x0D1E	0xF04F0302  MOV	R3, #2
0x0D22	0x2201    MOVS	R2, #1
0x0D24	0x2102    MOVS	R1, #2
0x0D26	0x2002    MOVS	R0, #2
0x0D28	0xF7FFFAB0  BL	_init_GPIO_Pin+0
;lcd.c, 55 :: 		init_GPIO_Pin(OSPEEDR, LCD_D7_PORT, LCD_D7_PIN  ,HIGH);
0x0D2C	0xF04F0302  MOV	R3, #2
0x0D30	0x2200    MOVS	R2, #0
0x0D32	0x2102    MOVS	R1, #2
0x0D34	0x2002    MOVS	R0, #2
0x0D36	0xF7FFFAA9  BL	_init_GPIO_Pin+0
;lcd.c, 58 :: 		init_GPIO_Pin(PUPDR,   LCD_EN_PORT, LCD_EN_PIN  ,NO_PULL_PUSH);
0x0D3A	0xF04F0300  MOV	R3, #0
0x0D3E	0x220D    MOVS	R2, #13
0x0D40	0x2102    MOVS	R1, #2
0x0D42	0x2003    MOVS	R0, #3
0x0D44	0xF7FFFAA2  BL	_init_GPIO_Pin+0
;lcd.c, 59 :: 		init_GPIO_Pin(PUPDR,   LCD_RS_PORT, LCD_RS_PIN  ,NO_PULL_PUSH);
0x0D48	0xF04F0300  MOV	R3, #0
0x0D4C	0x2204    MOVS	R2, #4
0x0D4E	0x2102    MOVS	R1, #2
0x0D50	0x2003    MOVS	R0, #3
0x0D52	0xF7FFFA9B  BL	_init_GPIO_Pin+0
;lcd.c, 60 :: 		init_GPIO_Pin(PUPDR,   LCD_D4_PORT, LCD_D4_PIN  ,NO_PULL_PUSH);
0x0D56	0xF04F0300  MOV	R3, #0
0x0D5A	0x2203    MOVS	R2, #3
0x0D5C	0x2102    MOVS	R1, #2
0x0D5E	0x2003    MOVS	R0, #3
0x0D60	0xF7FFFA94  BL	_init_GPIO_Pin+0
;lcd.c, 61 :: 		init_GPIO_Pin(PUPDR,   LCD_D5_PORT, LCD_D5_PIN  ,NO_PULL_PUSH);
0x0D64	0xF04F0300  MOV	R3, #0
0x0D68	0x2202    MOVS	R2, #2
0x0D6A	0x2102    MOVS	R1, #2
0x0D6C	0x2003    MOVS	R0, #3
0x0D6E	0xF7FFFA8D  BL	_init_GPIO_Pin+0
;lcd.c, 62 :: 		init_GPIO_Pin(PUPDR,   LCD_D6_PORT, LCD_D6_PIN  ,NO_PULL_PUSH);
0x0D72	0xF04F0300  MOV	R3, #0
0x0D76	0x2201    MOVS	R2, #1
0x0D78	0x2102    MOVS	R1, #2
0x0D7A	0x2003    MOVS	R0, #3
0x0D7C	0xF7FFFA86  BL	_init_GPIO_Pin+0
;lcd.c, 63 :: 		init_GPIO_Pin(PUPDR,   LCD_D7_PORT, LCD_D7_PIN  ,NO_PULL_PUSH);
0x0D80	0xF04F0300  MOV	R3, #0
0x0D84	0x2200    MOVS	R2, #0
0x0D86	0x2102    MOVS	R1, #2
0x0D88	0x2003    MOVS	R0, #3
0x0D8A	0xF7FFFA7F  BL	_init_GPIO_Pin+0
;lcd.c, 66 :: 		}
L_end_lcd_gpio_init:
0x0D8E	0xF8DDE000  LDR	LR, [SP, #0]
0x0D92	0xB001    ADD	SP, SP, #4
0x0D94	0x4770    BX	LR
0x0D96	0xBF00    NOP
0x0D98	0x38304002  	RCC_AHB1ENR+0
; end of _lcd_gpio_init
_lcd_Control_Write:
;lcd.c, 152 :: 		void lcd_Control_Write(char d){
; d start address is: 0 (R0)
0x1170	0xB081    SUB	SP, SP, #4
0x1172	0xF8CDE000  STR	LR, [SP, #0]
0x1176	0xB2C2    UXTB	R2, R0
; d end address is: 0 (R0)
; d start address is: 8 (R2)
;lcd.c, 153 :: 		clear_lcd_rs();
0x1178	0xF7FFFCB2  BL	_clear_lcd_rs+0
;lcd.c, 154 :: 		lcd_data_line_write(d);
0x117C	0xB2D0    UXTB	R0, R2
; d end address is: 8 (R2)
0x117E	0xF7FFFCBB  BL	_lcd_data_line_write+0
;lcd.c, 155 :: 		}
L_end_lcd_Control_Write:
0x1182	0xF8DDE000  LDR	LR, [SP, #0]
0x1186	0xB001    ADD	SP, SP, #4
0x1188	0x4770    BX	LR
; end of _lcd_Control_Write
_clear_lcd_rs:
;lcd.c, 11 :: 		void clear_lcd_rs(){ GPIOC_ODR &= ~(1UL << LCD_RS_PIN); }
0x0AE0	0x4803    LDR	R0, [PC, #12]
0x0AE2	0x6801    LDR	R1, [R0, #0]
0x0AE4	0xF06F0010  MVN	R0, #16
0x0AE8	0x4001    ANDS	R1, R0
0x0AEA	0x4801    LDR	R0, [PC, #4]
0x0AEC	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_rs:
0x0AEE	0x4770    BX	LR
0x0AF0	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_rs
_lcd_data_line_write:
;lcd.c, 123 :: 		void lcd_data_line_write(char d){
; d start address is: 0 (R0)
0x0AF8	0xB081    SUB	SP, SP, #4
0x0AFA	0xF8CDE000  STR	LR, [SP, #0]
0x0AFE	0xB2C2    UXTB	R2, R0
; d end address is: 0 (R0)
; d start address is: 8 (R2)
;lcd.c, 125 :: 		set_lcd_en();
0x0B00	0xF7FFFB60  BL	_set_lcd_en+0
;lcd.c, 126 :: 		if(d&0x80) set_lcd_d7();
0x0B04	0xF0020180  AND	R1, R2, #128
0x0B08	0xB2C9    UXTB	R1, R1
0x0B0A	0xB111    CBZ	R1, L_lcd_data_line_write0
0x0B0C	0xF7FFFB64  BL	_set_lcd_d7+0
0x0B10	0xE001    B	L_lcd_data_line_write1
L_lcd_data_line_write0:
;lcd.c, 127 :: 		else clear_lcd_d7();
0x0B12	0xF7FFFB6B  BL	_clear_lcd_d7+0
L_lcd_data_line_write1:
;lcd.c, 128 :: 		if(d&0x40) set_lcd_d6();
0x0B16	0xF0020140  AND	R1, R2, #64
0x0B1A	0xB2C9    UXTB	R1, R1
0x0B1C	0xB111    CBZ	R1, L_lcd_data_line_write2
0x0B1E	0xF7FFFB33  BL	_set_lcd_d6+0
0x0B22	0xE001    B	L_lcd_data_line_write3
L_lcd_data_line_write2:
;lcd.c, 129 :: 		else clear_lcd_d6();
0x0B24	0xF7FFFB3A  BL	_clear_lcd_d6+0
L_lcd_data_line_write3:
;lcd.c, 130 :: 		if(d&0x20) set_lcd_d5();
0x0B28	0xF0020120  AND	R1, R2, #32
0x0B2C	0xB2C9    UXTB	R1, R1
0x0B2E	0xB111    CBZ	R1, L_lcd_data_line_write4
0x0B30	0xF7FFFB3E  BL	_set_lcd_d5+0
0x0B34	0xE001    B	L_lcd_data_line_write5
L_lcd_data_line_write4:
;lcd.c, 131 :: 		else clear_lcd_d5();
0x0B36	0xF7FFFB8B  BL	_clear_lcd_d5+0
L_lcd_data_line_write5:
;lcd.c, 132 :: 		if(d&0x10) set_lcd_d4();
0x0B3A	0xF0020110  AND	R1, R2, #16
0x0B3E	0xB2C9    UXTB	R1, R1
0x0B40	0xB111    CBZ	R1, L_lcd_data_line_write6
0x0B42	0xF7FFFB8F  BL	_set_lcd_d4+0
0x0B46	0xE001    B	L_lcd_data_line_write7
L_lcd_data_line_write6:
;lcd.c, 133 :: 		else clear_lcd_d4();
0x0B48	0xF7FFFB96  BL	_clear_lcd_d4+0
L_lcd_data_line_write7:
;lcd.c, 134 :: 		clear_lcd_en();
0x0B4C	0xF7FFFB58  BL	_clear_lcd_en+0
;lcd.c, 136 :: 		set_lcd_en();
0x0B50	0xF7FFFB38  BL	_set_lcd_en+0
;lcd.c, 137 :: 		if(d&0x08) set_lcd_d7();
0x0B54	0xF0020108  AND	R1, R2, #8
0x0B58	0xB2C9    UXTB	R1, R1
0x0B5A	0xB111    CBZ	R1, L_lcd_data_line_write8
0x0B5C	0xF7FFFB3C  BL	_set_lcd_d7+0
0x0B60	0xE001    B	L_lcd_data_line_write9
L_lcd_data_line_write8:
;lcd.c, 138 :: 		else clear_lcd_d7();
0x0B62	0xF7FFFB43  BL	_clear_lcd_d7+0
L_lcd_data_line_write9:
;lcd.c, 139 :: 		if(d&0x04) set_lcd_d6();
0x0B66	0xF0020104  AND	R1, R2, #4
0x0B6A	0xB2C9    UXTB	R1, R1
0x0B6C	0xB111    CBZ	R1, L_lcd_data_line_write10
0x0B6E	0xF7FFFB0B  BL	_set_lcd_d6+0
0x0B72	0xE001    B	L_lcd_data_line_write11
L_lcd_data_line_write10:
;lcd.c, 140 :: 		else clear_lcd_d6();
0x0B74	0xF7FFFB12  BL	_clear_lcd_d6+0
L_lcd_data_line_write11:
;lcd.c, 141 :: 		if(d&0x02) set_lcd_d5();
0x0B78	0xF0020102  AND	R1, R2, #2
0x0B7C	0xB2C9    UXTB	R1, R1
0x0B7E	0xB111    CBZ	R1, L_lcd_data_line_write12
0x0B80	0xF7FFFB16  BL	_set_lcd_d5+0
0x0B84	0xE001    B	L_lcd_data_line_write13
L_lcd_data_line_write12:
;lcd.c, 142 :: 		else clear_lcd_d5();
0x0B86	0xF7FFFB63  BL	_clear_lcd_d5+0
L_lcd_data_line_write13:
;lcd.c, 143 :: 		if(d&0x1) set_lcd_d4();
0x0B8A	0xF0020101  AND	R1, R2, #1
0x0B8E	0xB2C9    UXTB	R1, R1
; d end address is: 8 (R2)
0x0B90	0xB111    CBZ	R1, L_lcd_data_line_write14
0x0B92	0xF7FFFB67  BL	_set_lcd_d4+0
0x0B96	0xE001    B	L_lcd_data_line_write15
L_lcd_data_line_write14:
;lcd.c, 144 :: 		else clear_lcd_d4();
0x0B98	0xF7FFFB6E  BL	_clear_lcd_d4+0
L_lcd_data_line_write15:
;lcd.c, 145 :: 		clear_lcd_en();
0x0B9C	0xF7FFFB30  BL	_clear_lcd_en+0
;lcd.c, 147 :: 		Delay_us(1);
0x0BA0	0xF2400736  MOVW	R7, #54
0x0BA4	0xF2C00700  MOVT	R7, #0
L_lcd_data_line_write16:
0x0BA8	0x1E7F    SUBS	R7, R7, #1
0x0BAA	0xD1FD    BNE	L_lcd_data_line_write16
0x0BAC	0xBF00    NOP
0x0BAE	0xBF00    NOP
0x0BB0	0xBF00    NOP
0x0BB2	0xBF00    NOP
0x0BB4	0xBF00    NOP
;lcd.c, 150 :: 		}
L_end_lcd_data_line_write:
0x0BB6	0xF8DDE000  LDR	LR, [SP, #0]
0x0BBA	0xB001    ADD	SP, SP, #4
0x0BBC	0x4770    BX	LR
; end of _lcd_data_line_write
_set_lcd_en:
;lcd.c, 7 :: 		void set_lcd_en()  { GPIOC_ODR |=  (1UL << LCD_EN_PIN); }
0x01C4	0x4803    LDR	R0, [PC, #12]
0x01C6	0x6800    LDR	R0, [R0, #0]
0x01C8	0xF4405100  ORR	R1, R0, #8192
0x01CC	0x4801    LDR	R0, [PC, #4]
0x01CE	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_en:
0x01D0	0x4770    BX	LR
0x01D2	0xBF00    NOP
0x01D4	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_en
_set_lcd_d7:
;lcd.c, 22 :: 		void set_lcd_d7()  { GPIOC_ODR |=  (1UL << LCD_D7_PIN); }
0x01D8	0x4803    LDR	R0, [PC, #12]
0x01DA	0x6800    LDR	R0, [R0, #0]
0x01DC	0xF0400101  ORR	R1, R0, #1
0x01E0	0x4801    LDR	R0, [PC, #4]
0x01E2	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_d7:
0x01E4	0x4770    BX	LR
0x01E6	0xBF00    NOP
0x01E8	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_d7
_clear_lcd_d7:
;lcd.c, 23 :: 		void clear_lcd_d7(){ GPIOC_ODR &= ~(1UL << LCD_D7_PIN); }
0x01EC	0x4803    LDR	R0, [PC, #12]
0x01EE	0x6801    LDR	R1, [R0, #0]
0x01F0	0xF06F0001  MVN	R0, #1
0x01F4	0x4001    ANDS	R1, R0
0x01F6	0x4801    LDR	R0, [PC, #4]
0x01F8	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_d7:
0x01FA	0x4770    BX	LR
0x01FC	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_d7
_set_lcd_d6:
;lcd.c, 19 :: 		void set_lcd_d6()  { GPIOC_ODR |=  (1UL << LCD_D6_PIN); }
0x0188	0x4803    LDR	R0, [PC, #12]
0x018A	0x6800    LDR	R0, [R0, #0]
0x018C	0xF0400102  ORR	R1, R0, #2
0x0190	0x4801    LDR	R0, [PC, #4]
0x0192	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_d6:
0x0194	0x4770    BX	LR
0x0196	0xBF00    NOP
0x0198	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_d6
_clear_lcd_d6:
;lcd.c, 20 :: 		void clear_lcd_d6(){ GPIOC_ODR &= ~(1UL << LCD_D6_PIN); }
0x019C	0x4803    LDR	R0, [PC, #12]
0x019E	0x6801    LDR	R1, [R0, #0]
0x01A0	0xF06F0002  MVN	R0, #2
0x01A4	0x4001    ANDS	R1, R0
0x01A6	0x4801    LDR	R0, [PC, #4]
0x01A8	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_d6:
0x01AA	0x4770    BX	LR
0x01AC	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_d6
_set_lcd_d5:
;lcd.c, 16 :: 		void set_lcd_d5()  { GPIOC_ODR |=  (1UL << LCD_D5_PIN); }
0x01B0	0x4803    LDR	R0, [PC, #12]
0x01B2	0x6800    LDR	R0, [R0, #0]
0x01B4	0xF0400104  ORR	R1, R0, #4
0x01B8	0x4801    LDR	R0, [PC, #4]
0x01BA	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_d5:
0x01BC	0x4770    BX	LR
0x01BE	0xBF00    NOP
0x01C0	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_d5
_clear_lcd_d5:
;lcd.c, 17 :: 		void clear_lcd_d5(){ GPIOC_ODR &= ~(1UL << LCD_D5_PIN); }
0x0250	0x4803    LDR	R0, [PC, #12]
0x0252	0x6801    LDR	R1, [R0, #0]
0x0254	0xF06F0004  MVN	R0, #4
0x0258	0x4001    ANDS	R1, R0
0x025A	0x4801    LDR	R0, [PC, #4]
0x025C	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_d5:
0x025E	0x4770    BX	LR
0x0260	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_d5
_set_lcd_d4:
;lcd.c, 13 :: 		void set_lcd_d4()  { GPIOC_ODR |=  (1UL << LCD_D4_PIN); }
0x0264	0x4803    LDR	R0, [PC, #12]
0x0266	0x6800    LDR	R0, [R0, #0]
0x0268	0xF0400108  ORR	R1, R0, #8
0x026C	0x4801    LDR	R0, [PC, #4]
0x026E	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_d4:
0x0270	0x4770    BX	LR
0x0272	0xBF00    NOP
0x0274	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_d4
_clear_lcd_d4:
;lcd.c, 14 :: 		void clear_lcd_d4(){ GPIOC_ODR &= ~(1UL << LCD_D4_PIN); }
0x0278	0x4803    LDR	R0, [PC, #12]
0x027A	0x6801    LDR	R1, [R0, #0]
0x027C	0xF06F0008  MVN	R0, #8
0x0280	0x4001    ANDS	R1, R0
0x0282	0x4801    LDR	R0, [PC, #4]
0x0284	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_d4:
0x0286	0x4770    BX	LR
0x0288	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_d4
_clear_lcd_en:
;lcd.c, 8 :: 		void clear_lcd_en(){ GPIOC_ODR &= ~(1UL << LCD_EN_PIN); }
0x0200	0x4803    LDR	R0, [PC, #12]
0x0202	0x6801    LDR	R1, [R0, #0]
0x0204	0xF46F5000  MVN	R0, #8192
0x0208	0x4001    ANDS	R1, R0
0x020A	0x4801    LDR	R0, [PC, #4]
0x020C	0x6001    STR	R1, [R0, #0]
L_end_clear_lcd_en:
0x020E	0x4770    BX	LR
0x0210	0x08144002  	GPIOC_ODR+0
; end of _clear_lcd_en
_init_Timer2:
;timers.c, 3 :: 		void init_Timer2(){
0x12C0	0xB081    SUB	SP, SP, #4
0x12C2	0xF8CDE000  STR	LR, [SP, #0]
;timers.c, 4 :: 		currentTime  = 0;               // Initial time
0x12C6	0x2100    MOVS	R1, #0
0x12C8	0xB209    SXTH	R1, R1
0x12CA	0x4815    LDR	R0, [PC, #84]
0x12CC	0x8001    STRH	R1, [R0, #0]
;timers.c, 5 :: 		RCC_APB1ENR |=  (1UL << 0);     // RCC_APB1ENR.TIM2EN = 1;    // Bit 0 for Timer2      //TIM2 clock enabled
0x12CE	0x4815    LDR	R0, [PC, #84]
0x12D0	0x6800    LDR	R0, [R0, #0]
0x12D2	0xF0400101  ORR	R1, R0, #1
0x12D6	0x4813    LDR	R0, [PC, #76]
0x12D8	0x6001    STR	R1, [R0, #0]
;timers.c, 6 :: 		TIM2_CR1    &= ~(1UL << 0);     // Counter disable    [TIM2_CR1 bit 0        TIM2_CR1.CEN = 0;
0x12DA	0x4813    LDR	R0, [PC, #76]
0x12DC	0x6801    LDR	R1, [R0, #0]
0x12DE	0xF06F0001  MVN	R0, #1
0x12E2	0x4001    ANDS	R1, R0
0x12E4	0x4810    LDR	R0, [PC, #64]
0x12E6	0x6001    STR	R1, [R0, #0]
;timers.c, 7 :: 		TIM2_PSC     = 16000;           // The counter clock CK_CNT is equal Fc_psc / (PSC[15:0] + 1)
0x12E8	0xF6436180  MOVW	R1, #16000
0x12EC	0x480F    LDR	R0, [PC, #60]
0x12EE	0x6001    STR	R1, [R0, #0]
;timers.c, 8 :: 		TIM2_ARR     = INTERRUPT_TIME;   // Auto-reload value - ARR is the value to be loaded in the actual auto-reload register
0x12F0	0x2164    MOVS	R1, #100
0x12F2	0x480F    LDR	R0, [PC, #60]
0x12F4	0x6001    STR	R1, [R0, #0]
;timers.c, 9 :: 		NVIC_IntEnable(IVT_INT_TIM2);   // Nested Vector Interrupt Controller
0x12F6	0xF240002C  MOVW	R0, #44
0x12FA	0xF7FFFB07  BL	_NVIC_IntEnable+0
;timers.c, 10 :: 		TIM2_DIER   |= 1;               // Update interrupt enable [TIM2_DIEr bit 0]    TIM2_DIER.UIE = 1;
0x12FE	0x480D    LDR	R0, [PC, #52]
0x1300	0x6800    LDR	R0, [R0, #0]
0x1302	0xF0400101  ORR	R1, R0, #1
0x1306	0x480B    LDR	R0, [PC, #44]
0x1308	0x6001    STR	R1, [R0, #0]
;timers.c, 11 :: 		TIM2_CR1    |=  (1UL << 0);     // Counter enable    [TIM2_CR1 bit 0]       TIM2_CR1.CEN = 1;
0x130A	0x4807    LDR	R0, [PC, #28]
0x130C	0x6800    LDR	R0, [R0, #0]
0x130E	0xF0400101  ORR	R1, R0, #1
0x1312	0x4805    LDR	R0, [PC, #20]
0x1314	0x6001    STR	R1, [R0, #0]
;timers.c, 13 :: 		}
L_end_init_Timer2:
0x1316	0xF8DDE000  LDR	LR, [SP, #0]
0x131A	0xB001    ADD	SP, SP, #4
0x131C	0x4770    BX	LR
0x131E	0xBF00    NOP
0x1320	0x00002000  	_currentTime+0
0x1324	0x38404002  	RCC_APB1ENR+0
0x1328	0x00004000  	TIM2_CR1+0
0x132C	0x00284000  	TIM2_PSC+0
0x1330	0x002C4000  	TIM2_ARR+0
0x1334	0x000C4000  	TIM2_DIER+0
; end of _init_Timer2
_doSomething:
;main.c, 95 :: 		void doSomething(){
;main.c, 96 :: 		while(1) {
L_doSomething0:
;main.c, 97 :: 		asm WFI; // sleep until interrupt
0x1570	0xBF30    WFI
;main.c, 98 :: 		}
0x1572	0xE7FD    B	L_doSomething0
;main.c, 99 :: 		}
L_end_doSomething:
0x1574	0x4770    BX	LR
; end of _doSomething
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 452 :: 		
0x1914	0xB082    SUB	SP, SP, #8
0x1916	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 455 :: 		
; ulRCC_CR start address is: 8 (R2)
0x191A	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 456 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x191C	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 457 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x191E	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 458 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1920	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 459 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1922	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 461 :: 		
0x1924	0x2803    CMP	R0, #3
0x1926	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC231
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 462 :: 		
0x192A	0x4893    LDR	R0, [PC, #588]
0x192C	0x4281    CMP	R1, R0
0x192E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 463 :: 		
0x1930	0x4892    LDR	R0, [PC, #584]
0x1932	0x6800    LDR	R0, [R0, #0]
0x1934	0xF0400105  ORR	R1, R0, #5
0x1938	0x4890    LDR	R0, [PC, #576]
0x193A	0x6001    STR	R1, [R0, #0]
0x193C	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC233
L___Lib_System_4XX_InitialSetUpRCCRCC232:
;__Lib_System_4XX.c, 464 :: 		
; Fosc_kHz start address is: 4 (R1)
0x193E	0x4890    LDR	R0, [PC, #576]
0x1940	0x4281    CMP	R1, R0
0x1942	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 465 :: 		
0x1944	0x488D    LDR	R0, [PC, #564]
0x1946	0x6800    LDR	R0, [R0, #0]
0x1948	0xF0400104  ORR	R1, R0, #4
0x194C	0x488B    LDR	R0, [PC, #556]
0x194E	0x6001    STR	R1, [R0, #0]
0x1950	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC235
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 466 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1952	0x488C    LDR	R0, [PC, #560]
0x1954	0x4281    CMP	R1, R0
0x1956	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 467 :: 		
0x1958	0x4888    LDR	R0, [PC, #544]
0x195A	0x6800    LDR	R0, [R0, #0]
0x195C	0xF0400103  ORR	R1, R0, #3
0x1960	0x4886    LDR	R0, [PC, #536]
0x1962	0x6001    STR	R1, [R0, #0]
0x1964	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC237
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 468 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1966	0xF64E2060  MOVW	R0, #60000
0x196A	0x4281    CMP	R1, R0
0x196C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC238
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 469 :: 		
0x196E	0x4883    LDR	R0, [PC, #524]
0x1970	0x6800    LDR	R0, [R0, #0]
0x1972	0xF0400102  ORR	R1, R0, #2
0x1976	0x4881    LDR	R0, [PC, #516]
0x1978	0x6001    STR	R1, [R0, #0]
0x197A	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC239
L___Lib_System_4XX_InitialSetUpRCCRCC238:
;__Lib_System_4XX.c, 470 :: 		
; Fosc_kHz start address is: 4 (R1)
0x197C	0xF2475030  MOVW	R0, #30000
0x1980	0x4281    CMP	R1, R0
0x1982	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC240
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 471 :: 		
0x1984	0x487D    LDR	R0, [PC, #500]
0x1986	0x6800    LDR	R0, [R0, #0]
0x1988	0xF0400101  ORR	R1, R0, #1
0x198C	0x487B    LDR	R0, [PC, #492]
0x198E	0x6001    STR	R1, [R0, #0]
0x1990	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC241
L___Lib_System_4XX_InitialSetUpRCCRCC240:
;__Lib_System_4XX.c, 473 :: 		
0x1992	0x487A    LDR	R0, [PC, #488]
0x1994	0x6801    LDR	R1, [R0, #0]
0x1996	0xF06F0007  MVN	R0, #7
0x199A	0x4001    ANDS	R1, R0
0x199C	0x4877    LDR	R0, [PC, #476]
0x199E	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC241:
L___Lib_System_4XX_InitialSetUpRCCRCC239:
L___Lib_System_4XX_InitialSetUpRCCRCC237:
L___Lib_System_4XX_InitialSetUpRCCRCC235:
L___Lib_System_4XX_InitialSetUpRCCRCC233:
;__Lib_System_4XX.c, 474 :: 		
0x19A0	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC231:
;__Lib_System_4XX.c, 475 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x19A2	0x2802    CMP	R0, #2
0x19A4	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC243
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 476 :: 		
0x19A8	0x4877    LDR	R0, [PC, #476]
0x19AA	0x4281    CMP	R1, R0
0x19AC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC244
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 477 :: 		
0x19AE	0x4873    LDR	R0, [PC, #460]
0x19B0	0x6800    LDR	R0, [R0, #0]
0x19B2	0xF0400106  ORR	R1, R0, #6
0x19B6	0x4871    LDR	R0, [PC, #452]
0x19B8	0x6001    STR	R1, [R0, #0]
0x19BA	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC244:
;__Lib_System_4XX.c, 478 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19BC	0x4870    LDR	R0, [PC, #448]
0x19BE	0x4281    CMP	R1, R0
0x19C0	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC246
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 479 :: 		
0x19C2	0x486E    LDR	R0, [PC, #440]
0x19C4	0x6800    LDR	R0, [R0, #0]
0x19C6	0xF0400105  ORR	R1, R0, #5
0x19CA	0x486C    LDR	R0, [PC, #432]
0x19CC	0x6001    STR	R1, [R0, #0]
0x19CE	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC247
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 480 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19D0	0x486E    LDR	R0, [PC, #440]
0x19D2	0x4281    CMP	R1, R0
0x19D4	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC248
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 481 :: 		
0x19D6	0x4869    LDR	R0, [PC, #420]
0x19D8	0x6800    LDR	R0, [R0, #0]
0x19DA	0xF0400104  ORR	R1, R0, #4
0x19DE	0x4867    LDR	R0, [PC, #412]
0x19E0	0x6001    STR	R1, [R0, #0]
0x19E2	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC249
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 482 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19E4	0x486A    LDR	R0, [PC, #424]
0x19E6	0x4281    CMP	R1, R0
0x19E8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC250
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 483 :: 		
0x19EA	0x4864    LDR	R0, [PC, #400]
0x19EC	0x6800    LDR	R0, [R0, #0]
0x19EE	0xF0400103  ORR	R1, R0, #3
0x19F2	0x4862    LDR	R0, [PC, #392]
0x19F4	0x6001    STR	R1, [R0, #0]
0x19F6	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC251
L___Lib_System_4XX_InitialSetUpRCCRCC250:
;__Lib_System_4XX.c, 484 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19F8	0xF64B3080  MOVW	R0, #48000
0x19FC	0x4281    CMP	R1, R0
0x19FE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC252
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 485 :: 		
0x1A00	0x485E    LDR	R0, [PC, #376]
0x1A02	0x6800    LDR	R0, [R0, #0]
0x1A04	0xF0400102  ORR	R1, R0, #2
0x1A08	0x485C    LDR	R0, [PC, #368]
0x1A0A	0x6001    STR	R1, [R0, #0]
0x1A0C	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC253
L___Lib_System_4XX_InitialSetUpRCCRCC252:
;__Lib_System_4XX.c, 486 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A0E	0xF64550C0  MOVW	R0, #24000
0x1A12	0x4281    CMP	R1, R0
0x1A14	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC254
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 487 :: 		
0x1A16	0x4859    LDR	R0, [PC, #356]
0x1A18	0x6800    LDR	R0, [R0, #0]
0x1A1A	0xF0400101  ORR	R1, R0, #1
0x1A1E	0x4857    LDR	R0, [PC, #348]
0x1A20	0x6001    STR	R1, [R0, #0]
0x1A22	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC255
L___Lib_System_4XX_InitialSetUpRCCRCC254:
;__Lib_System_4XX.c, 489 :: 		
0x1A24	0x4855    LDR	R0, [PC, #340]
0x1A26	0x6801    LDR	R1, [R0, #0]
0x1A28	0xF06F0007  MVN	R0, #7
0x1A2C	0x4001    ANDS	R1, R0
0x1A2E	0x4853    LDR	R0, [PC, #332]
0x1A30	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC255:
L___Lib_System_4XX_InitialSetUpRCCRCC253:
L___Lib_System_4XX_InitialSetUpRCCRCC251:
L___Lib_System_4XX_InitialSetUpRCCRCC249:
L___Lib_System_4XX_InitialSetUpRCCRCC247:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 490 :: 		
0x1A32	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1A34	0x2801    CMP	R0, #1
0x1A36	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC257
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 492 :: 		
0x1A3A	0x4851    LDR	R0, [PC, #324]
0x1A3C	0x4281    CMP	R1, R0
0x1A3E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC258
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 493 :: 		
0x1A40	0x484E    LDR	R0, [PC, #312]
0x1A42	0x6800    LDR	R0, [R0, #0]
0x1A44	0xF0400107  ORR	R1, R0, #7
0x1A48	0x484C    LDR	R0, [PC, #304]
0x1A4A	0x6001    STR	R1, [R0, #0]
0x1A4C	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC258:
;__Lib_System_4XX.c, 494 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A4E	0x4851    LDR	R0, [PC, #324]
0x1A50	0x4281    CMP	R1, R0
0x1A52	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC260
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 495 :: 		
0x1A54	0x4849    LDR	R0, [PC, #292]
0x1A56	0x6800    LDR	R0, [R0, #0]
0x1A58	0xF0400106  ORR	R1, R0, #6
0x1A5C	0x4847    LDR	R0, [PC, #284]
0x1A5E	0x6001    STR	R1, [R0, #0]
0x1A60	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC261
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 496 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A62	0x4848    LDR	R0, [PC, #288]
0x1A64	0x4281    CMP	R1, R0
0x1A66	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC262
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 497 :: 		
0x1A68	0x4844    LDR	R0, [PC, #272]
0x1A6A	0x6800    LDR	R0, [R0, #0]
0x1A6C	0xF0400105  ORR	R1, R0, #5
0x1A70	0x4842    LDR	R0, [PC, #264]
0x1A72	0x6001    STR	R1, [R0, #0]
0x1A74	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC263
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 498 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A76	0x4846    LDR	R0, [PC, #280]
0x1A78	0x4281    CMP	R1, R0
0x1A7A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC264
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 499 :: 		
0x1A7C	0x483F    LDR	R0, [PC, #252]
0x1A7E	0x6800    LDR	R0, [R0, #0]
0x1A80	0xF0400104  ORR	R1, R0, #4
0x1A84	0x483D    LDR	R0, [PC, #244]
0x1A86	0x6001    STR	R1, [R0, #0]
0x1A88	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC265
L___Lib_System_4XX_InitialSetUpRCCRCC264:
;__Lib_System_4XX.c, 500 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A8A	0xF24D20F0  MOVW	R0, #54000
0x1A8E	0x4281    CMP	R1, R0
0x1A90	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC266
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 501 :: 		
0x1A92	0x483A    LDR	R0, [PC, #232]
0x1A94	0x6800    LDR	R0, [R0, #0]
0x1A96	0xF0400103  ORR	R1, R0, #3
0x1A9A	0x4838    LDR	R0, [PC, #224]
0x1A9C	0x6001    STR	R1, [R0, #0]
0x1A9E	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC267
L___Lib_System_4XX_InitialSetUpRCCRCC266:
;__Lib_System_4XX.c, 502 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1AA0	0xF64840A0  MOVW	R0, #36000
0x1AA4	0x4281    CMP	R1, R0
0x1AA6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC268
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 503 :: 		
0x1AA8	0x4834    LDR	R0, [PC, #208]
0x1AAA	0x6800    LDR	R0, [R0, #0]
0x1AAC	0xF0400102  ORR	R1, R0, #2
0x1AB0	0x4832    LDR	R0, [PC, #200]
0x1AB2	0x6001    STR	R1, [R0, #0]
0x1AB4	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC269
L___Lib_System_4XX_InitialSetUpRCCRCC268:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1AB6	0xF2446050  MOVW	R0, #18000
0x1ABA	0x4281    CMP	R1, R0
0x1ABC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC270
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 505 :: 		
0x1ABE	0x482F    LDR	R0, [PC, #188]
0x1AC0	0x6800    LDR	R0, [R0, #0]
0x1AC2	0xF0400101  ORR	R1, R0, #1
0x1AC6	0x482D    LDR	R0, [PC, #180]
0x1AC8	0x6001    STR	R1, [R0, #0]
0x1ACA	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC271
L___Lib_System_4XX_InitialSetUpRCCRCC270:
;__Lib_System_4XX.c, 507 :: 		
0x1ACC	0x482B    LDR	R0, [PC, #172]
0x1ACE	0x6801    LDR	R1, [R0, #0]
0x1AD0	0xF06F0007  MVN	R0, #7
0x1AD4	0x4001    ANDS	R1, R0
0x1AD6	0x4829    LDR	R0, [PC, #164]
0x1AD8	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC271:
L___Lib_System_4XX_InitialSetUpRCCRCC269:
L___Lib_System_4XX_InitialSetUpRCCRCC267:
L___Lib_System_4XX_InitialSetUpRCCRCC265:
L___Lib_System_4XX_InitialSetUpRCCRCC263:
L___Lib_System_4XX_InitialSetUpRCCRCC261:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
;__Lib_System_4XX.c, 508 :: 		
0x1ADA	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1ADC	0x2800    CMP	R0, #0
0x1ADE	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC273
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 510 :: 		
0x1AE2	0x482D    LDR	R0, [PC, #180]
0x1AE4	0x4281    CMP	R1, R0
0x1AE6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC274
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 511 :: 		
0x1AE8	0x4824    LDR	R0, [PC, #144]
0x1AEA	0x6800    LDR	R0, [R0, #0]
0x1AEC	0xF0400107  ORR	R1, R0, #7
0x1AF0	0x4822    LDR	R0, [PC, #136]
0x1AF2	0x6001    STR	R1, [R0, #0]
0x1AF4	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC274:
;__Lib_System_4XX.c, 512 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1AF6	0x4825    LDR	R0, [PC, #148]
0x1AF8	0x4281    CMP	R1, R0
0x1AFA	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC276
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 513 :: 		
0x1AFC	0x481F    LDR	R0, [PC, #124]
0x1AFE	0x6800    LDR	R0, [R0, #0]
0x1B00	0xF0400106  ORR	R1, R0, #6
0x1B04	0x481D    LDR	R0, [PC, #116]
0x1B06	0x6001    STR	R1, [R0, #0]
0x1B08	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC277
L___Lib_System_4XX_InitialSetUpRCCRCC276:
;__Lib_System_4XX.c, 514 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1B0A	0x4824    LDR	R0, [PC, #144]
0x1B0C	0x4281    CMP	R1, R0
0x1B0E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC278
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 515 :: 		
0x1B10	0x481A    LDR	R0, [PC, #104]
0x1B12	0x6800    LDR	R0, [R0, #0]
0x1B14	0xF0400105  ORR	R1, R0, #5
0x1B18	0x4818    LDR	R0, [PC, #96]
0x1B1A	0x6001    STR	R1, [R0, #0]
0x1B1C	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC279
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 516 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1B1E	0xF5B14F7A  CMP	R1, #64000
0x1B22	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC280
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 517 :: 		
0x1B24	0x4815    LDR	R0, [PC, #84]
0x1B26	0x6800    LDR	R0, [R0, #0]
0x1B28	0xF0400104  ORR	R1, R0, #4
0x1B2C	0x4813    LDR	R0, [PC, #76]
0x1B2E	0x6001    STR	R1, [R0, #0]
0x1B30	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC281
L___Lib_System_4XX_InitialSetUpRCCRCC280:
;__Lib_System_4XX.c, 518 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1B32	0xF64B3080  MOVW	R0, #48000
0x1B36	0x4281    CMP	R1, R0
0x1B38	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC282
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 519 :: 		
0x1B3A	0x4810    LDR	R0, [PC, #64]
0x1B3C	0x6800    LDR	R0, [R0, #0]
0x1B3E	0xF0400103  ORR	R1, R0, #3
0x1B42	0x480E    LDR	R0, [PC, #56]
0x1B44	0x6001    STR	R1, [R0, #0]
0x1B46	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC283
L___Lib_System_4XX_InitialSetUpRCCRCC282:
;__Lib_System_4XX.c, 520 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1B48	0xF5B14FFA  CMP	R1, #32000
0x1B4C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC284
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 521 :: 		
0x1B4E	0x480B    LDR	R0, [PC, #44]
0x1B50	0x6800    LDR	R0, [R0, #0]
0x1B52	0xF0400102  ORR	R1, R0, #2
0x1B56	0x4809    LDR	R0, [PC, #36]
0x1B58	0x6001    STR	R1, [R0, #0]
0x1B5A	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC285
L___Lib_System_4XX_InitialSetUpRCCRCC284:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1B5C	0xF5B15F7A  CMP	R1, #16000
0x1B60	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC286
0x1B62	0xE01D    B	#58
0x1B64	0x00810000  	#129
0x1B68	0x00100400  	#67108880
0x1B6C	0x00000000  	#0
0x1B70	0x00030000  	#3
0x1B74	0x90400002  	#168000
0x1B78	0x49F00002  	#150000
0x1B7C	0x3C004002  	FLASH_ACR+0
0x1B80	0xD4C00001  	#120000
0x1B84	0x5F900001  	#90000
0x1B88	0x32800002  	#144000
0x1B8C	0x77000001  	#96000
0x1B90	0x19400001  	#72000
0x1B94	0xA5E00001  	#108000
0x1B98	0xB5800001  	#112000
0x1B9C	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 523 :: 		
0x1BA0	0x482D    LDR	R0, [PC, #180]
0x1BA2	0x6800    LDR	R0, [R0, #0]
0x1BA4	0xF0400101  ORR	R1, R0, #1
0x1BA8	0x482B    LDR	R0, [PC, #172]
0x1BAA	0x6001    STR	R1, [R0, #0]
0x1BAC	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC287
L___Lib_System_4XX_InitialSetUpRCCRCC286:
;__Lib_System_4XX.c, 525 :: 		
0x1BAE	0x482A    LDR	R0, [PC, #168]
0x1BB0	0x6801    LDR	R1, [R0, #0]
0x1BB2	0xF06F0007  MVN	R0, #7
0x1BB6	0x4001    ANDS	R1, R0
0x1BB8	0x4827    LDR	R0, [PC, #156]
0x1BBA	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC287:
L___Lib_System_4XX_InitialSetUpRCCRCC285:
L___Lib_System_4XX_InitialSetUpRCCRCC283:
L___Lib_System_4XX_InitialSetUpRCCRCC281:
L___Lib_System_4XX_InitialSetUpRCCRCC279:
L___Lib_System_4XX_InitialSetUpRCCRCC277:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
;__Lib_System_4XX.c, 526 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC273:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
;__Lib_System_4XX.c, 528 :: 		
0x1BBC	0x2101    MOVS	R1, #1
0x1BBE	0xB249    SXTB	R1, R1
0x1BC0	0x4826    LDR	R0, [PC, #152]
0x1BC2	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 529 :: 		
0x1BC4	0x4826    LDR	R0, [PC, #152]
0x1BC6	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 531 :: 		
0x1BC8	0xF7FFFC8E  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 533 :: 		
0x1BCC	0x4825    LDR	R0, [PC, #148]
0x1BCE	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 534 :: 		
0x1BD0	0x4825    LDR	R0, [PC, #148]
0x1BD2	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 535 :: 		
0x1BD4	0x4825    LDR	R0, [PC, #148]
0x1BD6	0xEA020100  AND	R1, R2, R0, LSL #0
0x1BDA	0x4825    LDR	R0, [PC, #148]
0x1BDC	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 537 :: 		
0x1BDE	0xF0020001  AND	R0, R2, #1
0x1BE2	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x1BE4	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 538 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC289:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1BE6	0x4822    LDR	R0, [PC, #136]
0x1BE8	0x6800    LDR	R0, [R0, #0]
0x1BEA	0xF0000002  AND	R0, R0, #2
0x1BEE	0x2800    CMP	R0, #0
0x1BF0	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC290
;__Lib_System_4XX.c, 539 :: 		
0x1BF2	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC289
L___Lib_System_4XX_InitialSetUpRCCRCC290:
;__Lib_System_4XX.c, 540 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x1BF4	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 537 :: 		
0x1BF6	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 540 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC288:
;__Lib_System_4XX.c, 542 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1BF8	0xF4023080  AND	R0, R2, #65536
0x1BFC	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2100
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 543 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x1BFE	0x481C    LDR	R0, [PC, #112]
0x1C00	0x6800    LDR	R0, [R0, #0]
0x1C02	0xF4003000  AND	R0, R0, #131072
0x1C06	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 544 :: 		
0x1C08	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 545 :: 		
0x1C0A	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x1C0C	0x460A    MOV	R2, R1
0x1C0E	0x9901    LDR	R1, [SP, #4]
0x1C10	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
;__Lib_System_4XX.c, 542 :: 		
0x1C12	0x9101    STR	R1, [SP, #4]
0x1C14	0x4611    MOV	R1, R2
0x1C16	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 545 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 547 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1C18	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x1C1C	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 548 :: 		
0x1C1E	0x4814    LDR	R0, [PC, #80]
0x1C20	0x6800    LDR	R0, [R0, #0]
0x1C22	0xF0407180  ORR	R1, R0, #16777216
0x1C26	0x4812    LDR	R0, [PC, #72]
0x1C28	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x1C2A	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 549 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CFGR start address is: 4 (R1)
0x1C2C	0x4810    LDR	R0, [PC, #64]
0x1C2E	0x6800    LDR	R0, [R0, #0]
0x1C30	0xF0007000  AND	R0, R0, #33554432
0x1C34	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 550 :: 		
0x1C36	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 551 :: 		
0x1C38	0x460A    MOV	R2, R1
0x1C3A	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 547 :: 		
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 554 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC297:
; ulRCC_CFGR start address is: 8 (R2)
0x1C3C	0x480A    LDR	R0, [PC, #40]
0x1C3E	0x6800    LDR	R0, [R0, #0]
0x1C40	0xF000010C  AND	R1, R0, #12
0x1C44	0x0090    LSLS	R0, R2, #2
0x1C46	0xF000000C  AND	R0, R0, #12
0x1C4A	0x4281    CMP	R1, R0
0x1C4C	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC298
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1C4E	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
L___Lib_System_4XX_InitialSetUpRCCRCC298:
;__Lib_System_4XX.c, 557 :: 		
L_end_InitialSetUpRCCRCC2:
0x1C50	0xF8DDE000  LDR	LR, [SP, #0]
0x1C54	0xB002    ADD	SP, SP, #8
0x1C56	0x4770    BX	LR
0x1C58	0x3C004002  	FLASH_ACR+0
0x1C5C	0x80204247  	FLASH_ACR+0
0x1C60	0x80244247  	FLASH_ACR+0
0x1C64	0x38044002  	RCC_PLLCFGR+0
0x1C68	0x38084002  	RCC_CFGR+0
0x1C6C	0xFFFF000F  	#1048575
0x1C70	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 431 :: 		
0x14E8	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 434 :: 		
0x14EA	0x480D    LDR	R0, [PC, #52]
0x14EC	0x6800    LDR	R0, [R0, #0]
0x14EE	0xF0400101  ORR	R1, R0, #1
0x14F2	0x480B    LDR	R0, [PC, #44]
0x14F4	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 437 :: 		
0x14F6	0x2100    MOVS	R1, #0
0x14F8	0x480A    LDR	R0, [PC, #40]
0x14FA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 440 :: 		
0x14FC	0x4808    LDR	R0, [PC, #32]
0x14FE	0x6801    LDR	R1, [R0, #0]
0x1500	0x4809    LDR	R0, [PC, #36]
0x1502	0x4001    ANDS	R1, R0
0x1504	0x4806    LDR	R0, [PC, #24]
0x1506	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 443 :: 		
0x1508	0x4908    LDR	R1, [PC, #32]
0x150A	0x4809    LDR	R0, [PC, #36]
0x150C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 446 :: 		
0x150E	0x4804    LDR	R0, [PC, #16]
0x1510	0x6801    LDR	R1, [R0, #0]
0x1512	0xF46F2080  MVN	R0, #262144
0x1516	0x4001    ANDS	R1, R0
0x1518	0x4801    LDR	R0, [PC, #4]
0x151A	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
L_end_SystemClockSetDefault:
0x151C	0xB001    ADD	SP, SP, #4
0x151E	0x4770    BX	LR
0x1520	0x38004002  	RCC_CR+0
0x1524	0x38084002  	RCC_CFGR+0
0x1528	0xFFFFFEF6  	#-17367041
0x152C	0x30102400  	#603992080
0x1530	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 369 :: 		
0x1C74	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 370 :: 		
0x1C76	0x4904    LDR	R1, [PC, #16]
0x1C78	0x4804    LDR	R0, [PC, #16]
0x1C7A	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 371 :: 		
0x1C7C	0x4904    LDR	R1, [PC, #16]
0x1C7E	0x4805    LDR	R0, [PC, #20]
0x1C80	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
L_end_InitialSetUpFosc:
0x1C82	0xB001    ADD	SP, SP, #4
0x1C84	0x4770    BX	LR
0x1C86	0xBF00    NOP
0x1C88	0x90400002  	#168000
0x1C8C	0x00E82000  	___System_CLOCK_IN_KHZ+0
0x1C90	0x00030000  	#3
0x1C94	0x00EC2000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 314 :: 		
0x180C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 315 :: 		
L___GenExcept27:
0x180E	0xE7FE    B	L___GenExcept27
;__Lib_System_4XX.c, 316 :: 		
L_end___GenExcept:
0x1810	0xB001    ADD	SP, SP, #4
0x1812	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 347 :: 		
0x1814	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 350 :: 		
0x1816	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 351 :: 		
0x181A	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 353 :: 		
0x181E	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 355 :: 		
0x1820	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 357 :: 		
0x1824	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 359 :: 		
0x1826	0xBF00    NOP
;__Lib_System_4XX.c, 360 :: 		
0x1828	0xBF00    NOP
;__Lib_System_4XX.c, 361 :: 		
0x182A	0xBF00    NOP
;__Lib_System_4XX.c, 362 :: 		
0x182C	0xBF00    NOP
;__Lib_System_4XX.c, 364 :: 		
0x182E	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 365 :: 		
0x1832	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 366 :: 		
0x1836	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 367 :: 		
L_end___EnableFPU:
0x183A	0xB001    ADD	SP, SP, #4
0x183C	0x4770    BX	LR
; end of ___EnableFPU
0x1F50	0xB500    PUSH	(R14)
0x1F52	0xF8DFB024  LDR	R11, [PC, #36]
0x1F56	0xF8DFA024  LDR	R10, [PC, #36]
0x1F5A	0xF8DFC024  LDR	R12, [PC, #36]
0x1F5E	0xF7FFFB25  BL	5548
0x1F62	0xF8DFB020  LDR	R11, [PC, #32]
0x1F66	0xF8DFA020  LDR	R10, [PC, #32]
0x1F6A	0xF8DFC020  LDR	R12, [PC, #32]
0x1F6E	0xF7FFFB1D  BL	5548
0x1F72	0xBD00    POP	(R15)
0x1F74	0x4770    BX	LR
0x1F76	0xBF00    NOP
0x1F78	0x00002000  	#536870912
0x1F7C	0x00372000  	#536870967
0x1F80	0x1DDE0000  	#7646
0x1F84	0x00382000  	#536870968
0x1F88	0x00E52000  	#536871141
0x1F8C	0x1D300000  	#7472
0x1FEC	0xB500    PUSH	(R14)
0x1FEE	0xF8DFB010  LDR	R11, [PC, #16]
0x1FF2	0xF8DFA010  LDR	R10, [PC, #16]
0x1FF6	0xF7FFFA9D  BL	5428
0x1FFA	0xBD00    POP	(R15)
0x1FFC	0x4770    BX	LR
0x1FFE	0xBF00    NOP
0x2000	0x00002000  	#536870912
0x2004	0x03502000  	#536871760
_UART_Interrupt:
;main.c, 198 :: 		void UART_Interrupt() iv IVT_INT_UART4  {
0x1840	0xB4B0    PUSH	(R4, R5, R7)
0x1842	0xB081    SUB	SP, SP, #4
0x1844	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 200 :: 		if(UART4_SR & 0x20){
0x1848	0x4829    LDR	R0, [PC, #164]
0x184A	0x6800    LDR	R0, [R0, #0]
0x184C	0xF0000020  AND	R0, R0, #32
0x1850	0x2800    CMP	R0, #0
0x1852	0xD025    BEQ	L_UART_Interrupt22
;main.c, 201 :: 		uart_rd = ((char)(UART4_DR & 0x01FF));
0x1854	0x4827    LDR	R0, [PC, #156]
0x1856	0x6801    LDR	R1, [R0, #0]
0x1858	0xF24010FF  MOVW	R0, #511
0x185C	0xEA010000  AND	R0, R1, R0, LSL #0
0x1860	0xB2C1    UXTB	R1, R0
0x1862	0x4825    LDR	R0, [PC, #148]
0x1864	0x7001    STRB	R1, [R0, #0]
;main.c, 202 :: 		LCD_CLEAR_SCREEN();
0x1866	0xF7FFFEAB  BL	_LCD_CLEAR_SCREEN+0
;main.c, 203 :: 		LCD_PRINT_CHAR(uart_rd);
0x186A	0x4823    LDR	R0, [PC, #140]
0x186C	0x7800    LDRB	R0, [R0, #0]
0x186E	0xF7FFFB4D  BL	_LCD_PRINT_CHAR+0
;main.c, 204 :: 		LCD_PRINT_STRING(" -> ");
0x1872	0x4822    LDR	R0, [PC, #136]
0x1874	0xF7FFFADC  BL	_LCD_PRINT_STRING+0
;main.c, 205 :: 		convert(uart_rd);
0x1878	0x481F    LDR	R0, [PC, #124]
0x187A	0x7800    LDRB	R0, [R0, #0]
0x187C	0xF7FFFE10  BL	_convert+0
;main.c, 206 :: 		LCD_PRINT_STRING(letter);
0x1880	0x481F    LDR	R0, [PC, #124]
0x1882	0xF7FFFAD5  BL	_LCD_PRINT_STRING+0
;main.c, 207 :: 		LED_string_translate(letter);
0x1886	0x481E    LDR	R0, [PC, #120]
0x1888	0xF7FFFDFA  BL	_LED_string_translate+0
;main.c, 209 :: 		EXTI_PR = (1UL << UART4_RX_PIN);
0x188C	0x2102    MOVS	R1, #2
0x188E	0x481D    LDR	R0, [PC, #116]
0x1890	0x6001    STR	R1, [R0, #0]
;main.c, 210 :: 		EXTI_IMR |= (1UL << UART4_RX_PIN);
0x1892	0x481D    LDR	R0, [PC, #116]
0x1894	0x6800    LDR	R0, [R0, #0]
0x1896	0xF0400102  ORR	R1, R0, #2
0x189A	0x481B    LDR	R0, [PC, #108]
0x189C	0x6001    STR	R1, [R0, #0]
;main.c, 212 :: 		}
0x189E	0xE01C    B	L_UART_Interrupt23
L_UART_Interrupt22:
;main.c, 213 :: 		else if( UART4_SR & 0x80){
0x18A0	0x4813    LDR	R0, [PC, #76]
0x18A2	0x6800    LDR	R0, [R0, #0]
0x18A4	0xF0000080  AND	R0, R0, #128
0x18A8	0xB1B8    CBZ	R0, L_UART_Interrupt24
;main.c, 214 :: 		UART4_CR1 &= ~(1UL << UART_TX_INTERRUPT);         // disable TXEIE bit
0x18AA	0x4818    LDR	R0, [PC, #96]
0x18AC	0x6800    LDR	R0, [R0, #0]
0x18AE	0xF000017F  AND	R1, R0, #127
0x18B2	0x4816    LDR	R0, [PC, #88]
0x18B4	0x6001    STR	R1, [R0, #0]
;main.c, 215 :: 		UART4_DR = (uart_tr & 0x01FF);
0x18B6	0x4816    LDR	R0, [PC, #88]
0x18B8	0x7801    LDRB	R1, [R0, #0]
0x18BA	0xF24010FF  MOVW	R0, #511
0x18BE	0xB200    SXTH	R0, R0
0x18C0	0x4001    ANDS	R1, R0
0x18C2	0xB209    SXTH	R1, R1
0x18C4	0x480B    LDR	R0, [PC, #44]
0x18C6	0x6001    STR	R1, [R0, #0]
;main.c, 216 :: 		EXTI_PR = (1UL << UART4_TX_PIN);
0x18C8	0x2101    MOVS	R1, #1
0x18CA	0x480E    LDR	R0, [PC, #56]
0x18CC	0x6001    STR	R1, [R0, #0]
;main.c, 217 :: 		EXTI_IMR |= (1UL << UART4_TX_PIN);
0x18CE	0x480E    LDR	R0, [PC, #56]
0x18D0	0x6800    LDR	R0, [R0, #0]
0x18D2	0xF0400101  ORR	R1, R0, #1
0x18D6	0x480C    LDR	R0, [PC, #48]
0x18D8	0x6001    STR	R1, [R0, #0]
;main.c, 218 :: 		}
L_UART_Interrupt24:
L_UART_Interrupt23:
;main.c, 219 :: 		UART4_CR1 |= (1UL << 13);             // Enable UART  (when we write UART4_DR , we reset this bit , so we must enable uart again!!!!!!
0x18DA	0x480C    LDR	R0, [PC, #48]
0x18DC	0x6800    LDR	R0, [R0, #0]
0x18DE	0xF4405100  ORR	R1, R0, #8192
0x18E2	0x480A    LDR	R0, [PC, #40]
0x18E4	0x6001    STR	R1, [R0, #0]
;main.c, 221 :: 		}
L_end_UART_Interrupt:
0x18E6	0xF8DDE000  LDR	LR, [SP, #0]
0x18EA	0xB001    ADD	SP, SP, #4
0x18EC	0xBCB0    POP	(R4, R5, R7)
0x18EE	0x4770    BX	LR
0x18F0	0x4C004000  	UART4_SR+0
0x18F4	0x4C044000  	UART4_DR+0
0x18F8	0x00372000  	_uart_rd+0
0x18FC	0x00302000  	?lstr38_main+0
0x1900	0x00F02000  	_letter+0
0x1904	0x3C144001  	EXTI_PR+0
0x1908	0x3C004001  	EXTI_IMR+0
0x190C	0x4C0C4000  	UART4_CR1+0
0x1910	0x00E52000  	_uart_tr+0
; end of _UART_Interrupt
_LCD_CLEAR_SCREEN:
;lcd.c, 230 :: 		void LCD_CLEAR_SCREEN(void){
0x15C0	0xB081    SUB	SP, SP, #4
0x15C2	0xF8CDE000  STR	LR, [SP, #0]
;lcd.c, 231 :: 		cursor_pos = 0;
0x15C6	0x2100    MOVS	R1, #0
0x15C8	0x4809    LDR	R0, [PC, #36]
0x15CA	0x8001    STRH	R1, [R0, #0]
;lcd.c, 232 :: 		lcd_Control_Write(LCD_CLEAR_DISPLAY);
0x15CC	0x2001    MOVS	R0, #1
0x15CE	0xF7FFFDCF  BL	_lcd_Control_Write+0
;lcd.c, 233 :: 		Delay_ms(10);
0x15D2	0xF648377E  MOVW	R7, #35710
0x15D6	0xF2C00708  MOVT	R7, #8
L_LCD_CLEAR_SCREEN55:
0x15DA	0x1E7F    SUBS	R7, R7, #1
0x15DC	0xD1FD    BNE	L_LCD_CLEAR_SCREEN55
0x15DE	0xBF00    NOP
0x15E0	0xBF00    NOP
0x15E2	0xBF00    NOP
0x15E4	0xBF00    NOP
0x15E6	0xBF00    NOP
;lcd.c, 234 :: 		}
L_end_LCD_CLEAR_SCREEN:
0x15E8	0xF8DDE000  LDR	LR, [SP, #0]
0x15EC	0xB001    ADD	SP, SP, #4
0x15EE	0x4770    BX	LR
0x15F0	0x00022000  	_cursor_pos+0
; end of _LCD_CLEAR_SCREEN
_LCD_PRINT_CHAR:
;lcd.c, 253 :: 		void LCD_PRINT_CHAR(char d){
; d start address is: 0 (R0)
0x0F0C	0xB081    SUB	SP, SP, #4
0x0F0E	0xF8CDE000  STR	LR, [SP, #0]
0x0F12	0xB2C5    UXTB	R5, R0
; d end address is: 0 (R0)
; d start address is: 20 (R5)
;lcd.c, 255 :: 		if(cursor_pos == 16)
0x0F14	0x490E    LDR	R1, [PC, #56]
0x0F16	0x8809    LDRH	R1, [R1, #0]
0x0F18	0x2910    CMP	R1, #16
0x0F1A	0xD104    BNE	L_LCD_PRINT_CHAR63
;lcd.c, 256 :: 		LCD_CURSOR(1,0);
0x0F1C	0x2100    MOVS	R1, #0
0x0F1E	0x2001    MOVS	R0, #1
0x0F20	0xF7FFFFC6  BL	_LCD_CURSOR+0
0x0F24	0xE007    B	L_LCD_PRINT_CHAR64
L_LCD_PRINT_CHAR63:
;lcd.c, 257 :: 		else if (cursor_pos == 32)
0x0F26	0x490A    LDR	R1, [PC, #40]
0x0F28	0x8809    LDRH	R1, [R1, #0]
0x0F2A	0x2920    CMP	R1, #32
0x0F2C	0xD103    BNE	L_LCD_PRINT_CHAR65
;lcd.c, 258 :: 		LCD_CURSOR(0,0);
0x0F2E	0x2100    MOVS	R1, #0
0x0F30	0x2000    MOVS	R0, #0
0x0F32	0xF7FFFFBD  BL	_LCD_CURSOR+0
L_LCD_PRINT_CHAR65:
L_LCD_PRINT_CHAR64:
;lcd.c, 259 :: 		cursor_pos++;
0x0F36	0x4906    LDR	R1, [PC, #24]
0x0F38	0x8809    LDRH	R1, [R1, #0]
0x0F3A	0x1C4A    ADDS	R2, R1, #1
0x0F3C	0x4904    LDR	R1, [PC, #16]
0x0F3E	0x800A    STRH	R2, [R1, #0]
;lcd.c, 260 :: 		if(d != '\0')
0x0F40	0xB115    CBZ	R5, L_LCD_PRINT_CHAR66
;lcd.c, 261 :: 		lcd_Data_Write(d);
0x0F42	0xB2E8    UXTB	R0, R5
; d end address is: 20 (R5)
0x0F44	0xF7FFFE3C  BL	_lcd_Data_Write+0
L_LCD_PRINT_CHAR66:
;lcd.c, 262 :: 		}
L_end_LCD_PRINT_CHAR:
0x0F48	0xF8DDE000  LDR	LR, [SP, #0]
0x0F4C	0xB001    ADD	SP, SP, #4
0x0F4E	0x4770    BX	LR
0x0F50	0x00022000  	_cursor_pos+0
; end of _LCD_PRINT_CHAR
_LCD_CURSOR:
;lcd.c, 194 :: 		void LCD_CURSOR(char x, char y){
; y start address is: 4 (R1)
; x start address is: 0 (R0)
0x0EB0	0xB081    SUB	SP, SP, #4
0x0EB2	0xF8CDE000  STR	LR, [SP, #0]
0x0EB6	0xB2C3    UXTB	R3, R0
0x0EB8	0xB2CC    UXTB	R4, R1
; y end address is: 4 (R1)
; x end address is: 0 (R0)
; x start address is: 12 (R3)
; y start address is: 16 (R4)
;lcd.c, 196 :: 		switch(x){
0x0EBA	0xE007    B	L_LCD_CURSOR38
;lcd.c, 197 :: 		case 0:  pos = y;      break;
L_LCD_CURSOR40:
; pos start address is: 0 (R0)
0x0EBC	0xB2E0    UXTB	R0, R4
; pos end address is: 0 (R0)
0x0EBE	0xE00A    B	L_LCD_CURSOR39
;lcd.c, 198 :: 		case 1:  pos = 0x40+y; break;
L_LCD_CURSOR41:
0x0EC0	0xF2040240  ADDW	R2, R4, #64
; pos start address is: 0 (R0)
0x0EC4	0xB2D0    UXTB	R0, R2
; pos end address is: 0 (R0)
0x0EC6	0xE006    B	L_LCD_CURSOR39
;lcd.c, 199 :: 		default: pos = y;      break;
L_LCD_CURSOR42:
; pos start address is: 0 (R0)
0x0EC8	0xB2E0    UXTB	R0, R4
; pos end address is: 0 (R0)
0x0ECA	0xE004    B	L_LCD_CURSOR39
;lcd.c, 200 :: 		}
L_LCD_CURSOR38:
0x0ECC	0x2B00    CMP	R3, #0
0x0ECE	0xD0F5    BEQ	L_LCD_CURSOR40
0x0ED0	0x2B01    CMP	R3, #1
0x0ED2	0xD0F5    BEQ	L_LCD_CURSOR41
0x0ED4	0xE7F8    B	L_LCD_CURSOR42
L_LCD_CURSOR39:
;lcd.c, 202 :: 		lcd_Control_Write(0x80 | pos);
; pos start address is: 0 (R0)
0x0ED6	0xF0400280  ORR	R2, R0, #128
; pos end address is: 0 (R0)
0x0EDA	0xB2D0    UXTB	R0, R2
0x0EDC	0xF000F948  BL	_lcd_Control_Write+0
;lcd.c, 203 :: 		cursor_pos = 16 * x + y;
0x0EE0	0x011A    LSLS	R2, R3, #4
0x0EE2	0xB212    SXTH	R2, R2
; x end address is: 12 (R3)
0x0EE4	0x1913    ADDS	R3, R2, R4
; y end address is: 16 (R4)
0x0EE6	0x4A08    LDR	R2, [PC, #32]
0x0EE8	0x8013    STRH	R3, [R2, #0]
;lcd.c, 204 :: 		Delay_ms(10);
0x0EEA	0xF648377E  MOVW	R7, #35710
0x0EEE	0xF2C00708  MOVT	R7, #8
L_LCD_CURSOR43:
0x0EF2	0x1E7F    SUBS	R7, R7, #1
0x0EF4	0xD1FD    BNE	L_LCD_CURSOR43
0x0EF6	0xBF00    NOP
0x0EF8	0xBF00    NOP
0x0EFA	0xBF00    NOP
0x0EFC	0xBF00    NOP
0x0EFE	0xBF00    NOP
;lcd.c, 205 :: 		}
L_end_LCD_CURSOR:
0x0F00	0xF8DDE000  LDR	LR, [SP, #0]
0x0F04	0xB001    ADD	SP, SP, #4
0x0F06	0x4770    BX	LR
0x0F08	0x00022000  	_cursor_pos+0
; end of _LCD_CURSOR
_lcd_Data_Write:
;lcd.c, 157 :: 		void lcd_Data_Write(char d){
; d start address is: 0 (R0)
0x0BC0	0xB081    SUB	SP, SP, #4
0x0BC2	0xF8CDE000  STR	LR, [SP, #0]
0x0BC6	0xB2C2    UXTB	R2, R0
; d end address is: 0 (R0)
; d start address is: 8 (R2)
;lcd.c, 158 :: 		set_lcd_rs();
0x0BC8	0xF7FFFB38  BL	_set_lcd_rs+0
;lcd.c, 159 :: 		lcd_data_line_write(d);
0x0BCC	0xB2D0    UXTB	R0, R2
; d end address is: 8 (R2)
0x0BCE	0xF7FFFF93  BL	_lcd_data_line_write+0
;lcd.c, 160 :: 		Delay_us(50);
0x0BD2	0xF64027EE  MOVW	R7, #2798
0x0BD6	0xF2C00700  MOVT	R7, #0
L_lcd_Data_Write18:
0x0BDA	0x1E7F    SUBS	R7, R7, #1
0x0BDC	0xD1FD    BNE	L_lcd_Data_Write18
0x0BDE	0xBF00    NOP
0x0BE0	0xBF00    NOP
0x0BE2	0xBF00    NOP
0x0BE4	0xBF00    NOP
0x0BE6	0xBF00    NOP
;lcd.c, 161 :: 		}
L_end_lcd_Data_Write:
0x0BE8	0xF8DDE000  LDR	LR, [SP, #0]
0x0BEC	0xB001    ADD	SP, SP, #4
0x0BEE	0x4770    BX	LR
; end of _lcd_Data_Write
_set_lcd_rs:
;lcd.c, 10 :: 		void set_lcd_rs()  { GPIOC_ODR |=  (1UL << LCD_RS_PIN); }
0x023C	0x4803    LDR	R0, [PC, #12]
0x023E	0x6800    LDR	R0, [R0, #0]
0x0240	0xF0400110  ORR	R1, R0, #16
0x0244	0x4801    LDR	R0, [PC, #4]
0x0246	0x6001    STR	R1, [R0, #0]
L_end_set_lcd_rs:
0x0248	0x4770    BX	LR
0x024A	0xBF00    NOP
0x024C	0x08144002  	GPIOC_ODR+0
; end of _set_lcd_rs
_LCD_PRINT_STRING:
;lcd.c, 246 :: 		void LCD_PRINT_STRING(char* d){
; d start address is: 0 (R0)
0x0E30	0xB081    SUB	SP, SP, #4
0x0E32	0xF8CDE000  STR	LR, [SP, #0]
; d end address is: 0 (R0)
; d start address is: 0 (R0)
0x0E36	0x4603    MOV	R3, R0
; d end address is: 0 (R0)
;lcd.c, 247 :: 		while(*d){
L_LCD_PRINT_STRING61:
; d start address is: 12 (R3)
0x0E38	0x7819    LDRB	R1, [R3, #0]
0x0E3A	0xB129    CBZ	R1, L_LCD_PRINT_STRING62
;lcd.c, 248 :: 		lcd_Data_Write(*d);
0x0E3C	0x7819    LDRB	R1, [R3, #0]
0x0E3E	0xB2C8    UXTB	R0, R1
0x0E40	0xF7FFFEBE  BL	_lcd_Data_Write+0
;lcd.c, 249 :: 		d++;
0x0E44	0x1C5B    ADDS	R3, R3, #1
;lcd.c, 250 :: 		}
; d end address is: 12 (R3)
0x0E46	0xE7F7    B	L_LCD_PRINT_STRING61
L_LCD_PRINT_STRING62:
;lcd.c, 251 :: 		}
L_end_LCD_PRINT_STRING:
0x0E48	0xF8DDE000  LDR	LR, [SP, #0]
0x0E4C	0xB001    ADD	SP, SP, #4
0x0E4E	0x4770    BX	LR
; end of _LCD_PRINT_STRING
_convert:
;uart.c, 187 :: 		int convert(char c){
; c start address is: 0 (R0)
0x14A0	0xB081    SUB	SP, SP, #4
0x14A2	0xF8CDE000  STR	LR, [SP, #0]
0x14A6	0xB2C2    UXTB	R2, R0
; c end address is: 0 (R0)
; c start address is: 8 (R2)
;uart.c, 188 :: 		if(charToInt(c) == -1) strcpy(letter, "!");
0x14A8	0xB2D0    UXTB	R0, R2
0x14AA	0xF7FFFD53  BL	_charToInt+0
0x14AE	0xF1B03FFF  CMP	R0, #-1
0x14B2	0xD104    BNE	L_convert29
; c end address is: 8 (R2)
0x14B4	0x4909    LDR	R1, [PC, #36]
0x14B6	0x480A    LDR	R0, [PC, #40]
0x14B8	0xF7FFFAFE  BL	_strcpy+0
0x14BC	0xE009    B	L_convert30
L_convert29:
;uart.c, 190 :: 		strcpy(letter, alpha[charToInt(c)]);
; c start address is: 8 (R2)
0x14BE	0xB2D0    UXTB	R0, R2
; c end address is: 8 (R2)
0x14C0	0xF7FFFD48  BL	_charToInt+0
0x14C4	0x0082    LSLS	R2, R0, #2
0x14C6	0x4907    LDR	R1, [PC, #28]
0x14C8	0x1889    ADDS	R1, R1, R2
0x14CA	0x6809    LDR	R1, [R1, #0]
0x14CC	0x4804    LDR	R0, [PC, #16]
0x14CE	0xF7FFFAF3  BL	_strcpy+0
;uart.c, 192 :: 		}
L_convert30:
;uart.c, 193 :: 		}
L_end_convert:
0x14D2	0xF8DDE000  LDR	LR, [SP, #0]
0x14D6	0xB001    ADD	SP, SP, #4
0x14D8	0x4770    BX	LR
0x14DA	0xBF00    NOP
0x14DC	0x00352000  	?lstr37_uart+0
0x14E0	0x00F02000  	_letter+0
0x14E4	0x00382000  	uart_alpha+0
; end of _convert
_charToInt:
;uart.c, 160 :: 		int charToInt(char c){
; c start address is: 0 (R0)
; c end address is: 0 (R0)
; c start address is: 0 (R0)
;uart.c, 161 :: 		if( c >= 48 && c <= 57)
0x0F54	0x2830    CMP	R0, #48
0x0F56	0xD305    BCC	L__charToInt56
0x0F58	0x2839    CMP	R0, #57
0x0F5A	0xD803    BHI	L__charToInt55
L__charToInt54:
;uart.c, 162 :: 		return c - 48;
0x0F5C	0xF2A00130  SUBW	R1, R0, #48
; c end address is: 0 (R0)
0x0F60	0xB208    SXTH	R0, R1
0x0F62	0xE01A    B	L_end_charToInt
;uart.c, 161 :: 		if( c >= 48 && c <= 57)
L__charToInt56:
; c start address is: 0 (R0)
L__charToInt55:
;uart.c, 163 :: 		else if ((c >= 65 && c <= 90) || (c >= 97 && c <= 122)) {
0x0F64	0x2841    CMP	R0, #65
0x0F66	0xD302    BCC	L__charToInt58
0x0F68	0x285A    CMP	R0, #90
0x0F6A	0xD800    BHI	L__charToInt57
0x0F6C	0xE005    B	L__charToInt51
L__charToInt58:
L__charToInt57:
0x0F6E	0x2861    CMP	R0, #97
0x0F70	0xD302    BCC	L__charToInt60
0x0F72	0x287A    CMP	R0, #122
0x0F74	0xD800    BHI	L__charToInt59
0x0F76	0xE000    B	L__charToInt51
; c end address is: 0 (R0)
L__charToInt60:
L__charToInt59:
0x0F78	0xE00C    B	L_charToInt14
L__charToInt51:
;uart.c, 164 :: 		if(c >= 97 && c <= 122)
; c start address is: 0 (R0)
0x0F7A	0x2861    CMP	R0, #97
0x0F7C	0xD305    BCC	L__charToInt63
0x0F7E	0x287A    CMP	R0, #122
0x0F80	0xD804    BHI	L__charToInt64
L__charToInt50:
;uart.c, 165 :: 		c -= 'a'-'A';
0x0F82	0xF2A00120  SUBW	R1, R0, #32
0x0F86	0xB2C8    UXTB	R0, R1
; c end address is: 0 (R0)
;uart.c, 164 :: 		if(c >= 97 && c <= 122)
0x0F88	0xE7FF    B	L__charToInt62
L__charToInt63:
L__charToInt62:
; c start address is: 0 (R0)
; c end address is: 0 (R0)
0x0F8A	0xE7FF    B	L__charToInt61
L__charToInt64:
L__charToInt61:
;uart.c, 166 :: 		return c - 55;
; c start address is: 0 (R0)
0x0F8C	0xF2A00137  SUBW	R1, R0, #55
; c end address is: 0 (R0)
0x0F90	0xB208    SXTH	R0, R1
0x0F92	0xE002    B	L_end_charToInt
;uart.c, 167 :: 		}
L_charToInt14:
;uart.c, 168 :: 		else return -1;
0x0F94	0xF64F70FF  MOVW	R0, #65535
0x0F98	0xB200    SXTH	R0, R0
;uart.c, 169 :: 		}
L_end_charToInt:
0x0F9A	0x4770    BX	LR
; end of _charToInt
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x0AB8	0xB081    SUB	SP, SP, #4
0x0ABA	0x9100    STR	R1, [SP, #0]
0x0ABC	0x4601    MOV	R1, R0
0x0ABE	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x0AC0	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x0AC2	0x461C    MOV	R4, R3
0x0AC4	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x0AC6	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x0AC8	0x4603    MOV	R3, R0
0x0ACA	0x1C42    ADDS	R2, R0, #1
0x0ACC	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x0ACE	0x781A    LDRB	R2, [R3, #0]
0x0AD0	0x7022    STRB	R2, [R4, #0]
0x0AD2	0x7822    LDRB	R2, [R4, #0]
0x0AD4	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x0AD6	0x462B    MOV	R3, R5
0x0AD8	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x0ADA	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x0ADC	0xB001    ADD	SP, SP, #4
0x0ADE	0x4770    BX	LR
; end of _strcpy
_LED_string_translate:
;uart.c, 179 :: 		void LED_string_translate(char *s){
; s start address is: 0 (R0)
0x1480	0xB081    SUB	SP, SP, #4
0x1482	0xF8CDE000  STR	LR, [SP, #0]
; s end address is: 0 (R0)
; s start address is: 0 (R0)
0x1486	0x4603    MOV	R3, R0
; s end address is: 0 (R0)
;uart.c, 180 :: 		while(*s){
L_LED_string_translate27:
; s start address is: 12 (R3)
0x1488	0x7819    LDRB	R1, [R3, #0]
0x148A	0xB129    CBZ	R1, L_LED_string_translate28
;uart.c, 181 :: 		LED_char_translate(*s);
0x148C	0x7819    LDRB	R1, [R3, #0]
0x148E	0xB2C8    UXTB	R0, R1
0x1490	0xF7FFFCDE  BL	_LED_char_translate+0
;uart.c, 182 :: 		s++;
0x1494	0x1C5B    ADDS	R3, R3, #1
;uart.c, 184 :: 		}
; s end address is: 12 (R3)
0x1496	0xE7F7    B	L_LED_string_translate27
L_LED_string_translate28:
;uart.c, 185 :: 		}
L_end_LED_string_translate:
0x1498	0xF8DDE000  LDR	LR, [SP, #0]
0x149C	0xB001    ADD	SP, SP, #4
0x149E	0x4770    BX	LR
; end of _LED_string_translate
_LED_char_translate:
;uart.c, 171 :: 		void LED_char_translate(char c){
; c start address is: 0 (R0)
; c end address is: 0 (R0)
; c start address is: 0 (R0)
;uart.c, 172 :: 		LED_1 = 1;
0x0E50	0x2201    MOVS	R2, #1
0x0E52	0xB252    SXTB	R2, R2
0x0E54	0x4915    LDR	R1, [PC, #84]
0x0E56	0x600A    STR	R2, [R1, #0]
;uart.c, 173 :: 		if(c == DOT) Delay_ms(ONE_SECOND_DASH);
0x0E58	0x282E    CMP	R0, #46
0x0E5A	0xD10B    BNE	L_LED_char_translate19
; c end address is: 0 (R0)
0x0E5C	0xF24B07BE  MOVW	R7, #45246
0x0E60	0xF2C00707  MOVT	R7, #7
0x0E64	0xBF00    NOP
0x0E66	0xBF00    NOP
L_LED_char_translate20:
0x0E68	0x1E7F    SUBS	R7, R7, #1
0x0E6A	0xD1FD    BNE	L_LED_char_translate20
0x0E6C	0xBF00    NOP
0x0E6E	0xBF00    NOP
0x0E70	0xBF00    NOP
0x0E72	0xE00A    B	L_LED_char_translate22
L_LED_char_translate19:
;uart.c, 174 :: 		else         Delay_ms(3*ONE_SECOND_DASH);
0x0E74	0xF241273E  MOVW	R7, #4670
0x0E78	0xF2C00717  MOVT	R7, #23
0x0E7C	0xBF00    NOP
0x0E7E	0xBF00    NOP
L_LED_char_translate23:
0x0E80	0x1E7F    SUBS	R7, R7, #1
0x0E82	0xD1FD    BNE	L_LED_char_translate23
0x0E84	0xBF00    NOP
0x0E86	0xBF00    NOP
0x0E88	0xBF00    NOP
L_LED_char_translate22:
;uart.c, 175 :: 		LED_1 = 0;
0x0E8A	0x2200    MOVS	R2, #0
0x0E8C	0xB252    SXTB	R2, R2
0x0E8E	0x4907    LDR	R1, [PC, #28]
0x0E90	0x600A    STR	R2, [R1, #0]
;uart.c, 176 :: 		Delay_ms(ONE_SECOND_DASH);
0x0E92	0xF24B07BE  MOVW	R7, #45246
0x0E96	0xF2C00707  MOVT	R7, #7
L_LED_char_translate25:
0x0E9A	0x1E7F    SUBS	R7, R7, #1
0x0E9C	0xD1FD    BNE	L_LED_char_translate25
0x0E9E	0xBF00    NOP
0x0EA0	0xBF00    NOP
0x0EA2	0xBF00    NOP
0x0EA4	0xBF00    NOP
0x0EA6	0xBF00    NOP
;uart.c, 177 :: 		}
L_end_LED_char_translate:
0x0EA8	0x4770    BX	LR
0x0EAA	0xBF00    NOP
0x0EAC	0x02B04242  	GPIOE_ODR+0
; end of _LED_char_translate
_Timer2_Interrupt:
;main.c, 224 :: 		void Timer2_Interrupt() iv IVT_INT_TIM2 {
0x1C98	0xB4B0    PUSH	(R4, R5, R7)
0x1C9A	0xB081    SUB	SP, SP, #4
0x1C9C	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 226 :: 		if(TIM2_SR){
0x1CA0	0x481D    LDR	R0, [PC, #116]
0x1CA2	0x6800    LDR	R0, [R0, #0]
0x1CA4	0x2800    CMP	R0, #0
0x1CA6	0xD032    BEQ	L_Timer2_Interrupt25
;main.c, 227 :: 		currentTime++;
0x1CA8	0x481C    LDR	R0, [PC, #112]
0x1CAA	0x8800    LDRH	R0, [R0, #0]
0x1CAC	0x1C41    ADDS	R1, R0, #1
0x1CAE	0x481B    LDR	R0, [PC, #108]
0x1CB0	0x8001    STRH	R1, [R0, #0]
;main.c, 228 :: 		TIM2_SR = 0x00;
0x1CB2	0x2100    MOVS	R1, #0
0x1CB4	0x4818    LDR	R0, [PC, #96]
0x1CB6	0x6001    STR	R1, [R0, #0]
;main.c, 231 :: 		if(canTranslate == 1)
0x1CB8	0x4819    LDR	R0, [PC, #100]
0x1CBA	0xF9B00000  LDRSH	R0, [R0, #0]
0x1CBE	0x2801    CMP	R0, #1
0x1CC0	0xD105    BNE	L_Timer2_Interrupt26
;main.c, 232 :: 		confirmTime++;
0x1CC2	0x4818    LDR	R0, [PC, #96]
0x1CC4	0x8800    LDRH	R0, [R0, #0]
0x1CC6	0x1C41    ADDS	R1, R0, #1
0x1CC8	0x4816    LDR	R0, [PC, #88]
0x1CCA	0x8001    STRH	R1, [R0, #0]
0x1CCC	0xE004    B	L_Timer2_Interrupt27
L_Timer2_Interrupt26:
;main.c, 234 :: 		spaceTime--;
0x1CCE	0x4816    LDR	R0, [PC, #88]
0x1CD0	0x8800    LDRH	R0, [R0, #0]
0x1CD2	0x1E41    SUBS	R1, R0, #1
0x1CD4	0x4814    LDR	R0, [PC, #80]
0x1CD6	0x8001    STRH	R1, [R0, #0]
L_Timer2_Interrupt27:
;main.c, 236 :: 		if(confirmTime == CONFIRM_TIME){
0x1CD8	0x4812    LDR	R0, [PC, #72]
0x1CDA	0x8800    LDRH	R0, [R0, #0]
0x1CDC	0x2819    CMP	R0, #25
0x1CDE	0xD110    BNE	L_Timer2_Interrupt28
;main.c, 238 :: 		translate();
0x1CE0	0xF7FFF85C  BL	_translate+0
;main.c, 239 :: 		confirmTime = canTranslate = 0;
0x1CE4	0x2100    MOVS	R1, #0
0x1CE6	0xB209    SXTH	R1, R1
0x1CE8	0x480D    LDR	R0, [PC, #52]
0x1CEA	0x8001    STRH	R1, [R0, #0]
0x1CEC	0x480C    LDR	R0, [PC, #48]
0x1CEE	0xF9B01000  LDRSH	R1, [R0, #0]
0x1CF2	0x480C    LDR	R0, [PC, #48]
0x1CF4	0x8001    STRH	R1, [R0, #0]
;main.c, 240 :: 		spaceTime = SPACE_TIME;
0x1CF6	0x480D    LDR	R0, [PC, #52]
0x1CF8	0x8801    LDRH	R1, [R0, #0]
0x1CFA	0x2007    MOVS	R0, #7
0x1CFC	0x4341    MULS	R1, R0, R1
0x1CFE	0x480A    LDR	R0, [PC, #40]
0x1D00	0x8001    STRH	R1, [R0, #0]
;main.c, 241 :: 		}
L_Timer2_Interrupt28:
;main.c, 242 :: 		if(spaceTime == 0)
0x1D02	0x4809    LDR	R0, [PC, #36]
0x1D04	0x8800    LDRH	R0, [R0, #0]
0x1D06	0xB910    CBNZ	R0, L_Timer2_Interrupt29
;main.c, 243 :: 		fnc(SPACE);
0x1D08	0x2023    MOVS	R0, #35
0x1D0A	0xF7FFFB2D  BL	_fnc+0
L_Timer2_Interrupt29:
;main.c, 245 :: 		}
L_Timer2_Interrupt25:
;main.c, 247 :: 		}
L_end_Timer2_Interrupt:
0x1D0E	0xF8DDE000  LDR	LR, [SP, #0]
0x1D12	0xB001    ADD	SP, SP, #4
0x1D14	0xBCB0    POP	(R4, R5, R7)
0x1D16	0x4770    BX	LR
0x1D18	0x00104000  	TIM2_SR+0
0x1D1C	0x00002000  	_currentTime+0
0x1D20	0x00C82000  	_canTranslate+0
0x1D24	0x00CA2000  	_confirmTime+0
0x1D28	0x00CC2000  	_spaceTime+0
0x1D2C	0x00CE2000  	_dotTime+0
; end of _Timer2_Interrupt
_translate:
;uart.c, 231 :: 		void translate(){
0x0D9C	0xB082    SUB	SP, SP, #8
0x0D9E	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 235 :: 		letter[letter_cnt + 1] = '\0';
0x0DA2	0x481E    LDR	R0, [PC, #120]
0x0DA4	0x8800    LDRH	R0, [R0, #0]
0x0DA6	0x1C41    ADDS	R1, R0, #1
0x0DA8	0xB289    UXTH	R1, R1
0x0DAA	0x481D    LDR	R0, [PC, #116]
0x0DAC	0x1841    ADDS	R1, R0, R1
0x0DAE	0x2000    MOVS	R0, #0
0x0DB0	0x7008    STRB	R0, [R1, #0]
;uart.c, 236 :: 		temp = findLetter();
0x0DB2	0xF7FFFE51  BL	_findLetter+0
0x0DB6	0xF8AD0004  STRH	R0, [SP, #4]
;uart.c, 238 :: 		LCD_PRINT_STRING(" = ");
0x0DBA	0x481A    LDR	R0, [PC, #104]
0x0DBC	0xF000F838  BL	_LCD_PRINT_STRING+0
;uart.c, 239 :: 		if(temp != -1){
0x0DC0	0xF9BD0004  LDRSH	R0, [SP, #4]
0x0DC4	0xF1B03FFF  CMP	R0, #-1
0x0DC8	0xD01A    BEQ	L_translate45
;uart.c, 240 :: 		strcpy(letters[letters_cnt++] ,letter);
0x0DCA	0x4817    LDR	R0, [PC, #92]
0x0DCC	0x8801    LDRH	R1, [R0, #0]
0x0DCE	0x2006    MOVS	R0, #6
0x0DD0	0x4341    MULS	R1, R0, R1
0x0DD2	0x4816    LDR	R0, [PC, #88]
0x0DD4	0x1840    ADDS	R0, R0, R1
0x0DD6	0x4912    LDR	R1, [PC, #72]
0x0DD8	0xF7FFFE6E  BL	_strcpy+0
0x0DDC	0x4812    LDR	R0, [PC, #72]
0x0DDE	0x8800    LDRH	R0, [R0, #0]
0x0DE0	0x1C41    ADDS	R1, R0, #1
0x0DE2	0x4811    LDR	R0, [PC, #68]
0x0DE4	0x8001    STRH	R1, [R0, #0]
;uart.c, 241 :: 		LCD_PRINT_CHAR(intToChar(temp));
0x0DE6	0xF9BD0004  LDRSH	R0, [SP, #4]
0x0DEA	0xF7FFFE55  BL	_intToChar+0
0x0DEE	0xF000F88D  BL	_LCD_PRINT_CHAR+0
;uart.c, 242 :: 		SendCharInterrupt(intToChar(temp));
0x0DF2	0xF9BD0004  LDRSH	R0, [SP, #4]
0x0DF6	0xF7FFFE4F  BL	_intToChar+0
0x0DFA	0xF000FA9D  BL	_SendCharInterrupt+0
;uart.c, 244 :: 		} else{                            //ERROR not found this sequence of dots and dashes
0x0DFE	0xE006    B	L_translate46
L_translate45:
;uart.c, 245 :: 		LCD_PRINT_STRING('!');
0x0E00	0x2021    MOVS	R0, #33
0x0E02	0xF000F815  BL	_LCD_PRINT_STRING+0
;uart.c, 246 :: 		SendCharInterrupt('!');
0x0E06	0x2021    MOVS	R0, #33
0x0E08	0xB200    SXTH	R0, R0
0x0E0A	0xF000FA95  BL	_SendCharInterrupt+0
;uart.c, 247 :: 		}
L_translate46:
;uart.c, 248 :: 		clearLetter();
0x0E0E	0xF000FA43  BL	_clearLetter+0
;uart.c, 250 :: 		}
L_end_translate:
0x0E12	0xF8DDE000  LDR	LR, [SP, #0]
0x0E16	0xB002    ADD	SP, SP, #8
0x0E18	0x4770    BX	LR
0x0E1A	0xBF00    NOP
0x0E1C	0x00E62000  	_letter_cnt+0
0x0E20	0x00F02000  	_letter+0
0x0E24	0x00D02000  	?lstr40_uart+0
0x0E28	0x034E2000  	_letters_cnt+0
0x0E2C	0x00F62000  	_letters+0
; end of _translate
_findLetter:
;uart.c, 207 :: 		int findLetter(){
0x0A58	0xB081    SUB	SP, SP, #4
0x0A5A	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 209 :: 		for(i = 0; i < ALPHABET_SIZE; i++){
; i start address is: 16 (R4)
0x0A5E	0x2400    MOVS	R4, #0
0x0A60	0xB224    SXTH	R4, R4
; i end address is: 16 (R4)
L_findLetter33:
; i start address is: 16 (R4)
0x0A62	0x2C24    CMP	R4, #36
0x0A64	0xDA0D    BGE	L_findLetter34
;uart.c, 210 :: 		if(strcmp(letter, alpha[i]) == 0)
0x0A66	0x00A1    LSLS	R1, R4, #2
0x0A68	0x4809    LDR	R0, [PC, #36]
0x0A6A	0x1840    ADDS	R0, R0, R1
0x0A6C	0x6800    LDR	R0, [R0, #0]
0x0A6E	0x4601    MOV	R1, R0
0x0A70	0x4808    LDR	R0, [PC, #32]
0x0A72	0xF7FFFBCF  BL	_strcmp+0
0x0A76	0xB908    CBNZ	R0, L_findLetter36
;uart.c, 211 :: 		return i;
0x0A78	0xB220    SXTH	R0, R4
; i end address is: 16 (R4)
0x0A7A	0xE005    B	L_end_findLetter
L_findLetter36:
;uart.c, 209 :: 		for(i = 0; i < ALPHABET_SIZE; i++){
; i start address is: 16 (R4)
0x0A7C	0x1C64    ADDS	R4, R4, #1
0x0A7E	0xB224    SXTH	R4, R4
;uart.c, 212 :: 		}
; i end address is: 16 (R4)
0x0A80	0xE7EF    B	L_findLetter33
L_findLetter34:
;uart.c, 213 :: 		return -1;
0x0A82	0xF64F70FF  MOVW	R0, #65535
0x0A86	0xB200    SXTH	R0, R0
;uart.c, 214 :: 		}
L_end_findLetter:
0x0A88	0xF8DDE000  LDR	LR, [SP, #0]
0x0A8C	0xB001    ADD	SP, SP, #4
0x0A8E	0x4770    BX	LR
0x0A90	0x00382000  	uart_alpha+0
0x0A94	0x00F02000  	_letter+0
; end of _findLetter
_strcmp:
;__Lib_CString.c, 122 :: 		
; s2 start address is: 4 (R1)
; s1 start address is: 0 (R0)
0x0214	0xB081    SUB	SP, SP, #4
; s2 end address is: 4 (R1)
; s1 end address is: 0 (R0)
; s1 start address is: 0 (R0)
; s2 start address is: 4 (R1)
0x0216	0x9100    STR	R1, [SP, #0]
; s1 end address is: 0 (R0)
; s2 end address is: 4 (R1)
0x0218	0x4601    MOV	R1, R0
0x021A	0x9800    LDR	R0, [SP, #0]
;__Lib_CString.c, 124 :: 		
L_strcmp30:
; s2 start address is: 0 (R0)
; s1 start address is: 4 (R1)
0x021C	0x780A    LDRB	R2, [R1, #0]
0x021E	0xB132    CBZ	R2, L__strcmp89
0x0220	0x780B    LDRB	R3, [R1, #0]
0x0222	0x7802    LDRB	R2, [R0, #0]
0x0224	0x4293    CMP	R3, R2
0x0226	0xD102    BNE	L__strcmp88
L__strcmp87:
;__Lib_CString.c, 125 :: 		
0x0228	0x1C49    ADDS	R1, R1, #1
0x022A	0x1C40    ADDS	R0, R0, #1
0x022C	0xE7F6    B	L_strcmp30
;__Lib_CString.c, 124 :: 		
L__strcmp89:
L__strcmp88:
;__Lib_CString.c, 127 :: 		
0x022E	0x780B    LDRB	R3, [R1, #0]
; s1 end address is: 4 (R1)
0x0230	0x7802    LDRB	R2, [R0, #0]
; s2 end address is: 0 (R0)
0x0232	0x1A9A    SUB	R2, R3, R2
0x0234	0xB210    SXTH	R0, R2
;__Lib_CString.c, 128 :: 		
L_end_strcmp:
0x0236	0xB001    ADD	SP, SP, #4
0x0238	0x4770    BX	LR
; end of _strcmp
_intToChar:
;uart.c, 216 :: 		char intToChar(int i){
; i start address is: 0 (R0)
; i end address is: 0 (R0)
; i start address is: 0 (R0)
;uart.c, 217 :: 		if( i >= 0 && i <= 9)
0x0A98	0x2800    CMP	R0, #0
0x0A9A	0xDB05    BLT	L__intToChar67
0x0A9C	0x2809    CMP	R0, #9
0x0A9E	0xDC03    BGT	L__intToChar66
L__intToChar65:
;uart.c, 218 :: 		return 48 + i;
0x0AA0	0xF2000130  ADDW	R1, R0, #48
; i end address is: 0 (R0)
0x0AA4	0xB2C8    UXTB	R0, R1
0x0AA6	0xE006    B	L_end_intToChar
;uart.c, 217 :: 		if( i >= 0 && i <= 9)
L__intToChar67:
; i start address is: 0 (R0)
L__intToChar66:
;uart.c, 219 :: 		else if ( i < ALPHABET_SIZE)
0x0AA8	0x2824    CMP	R0, #36
0x0AAA	0xDA03    BGE	L_intToChar41
;uart.c, 220 :: 		return 55 + i;
0x0AAC	0xF2000137  ADDW	R1, R0, #55
; i end address is: 0 (R0)
0x0AB0	0xB2C8    UXTB	R0, R1
0x0AB2	0xE000    B	L_end_intToChar
L_intToChar41:
;uart.c, 221 :: 		return '!';
0x0AB4	0x2021    MOVS	R0, #33
;uart.c, 222 :: 		}
L_end_intToChar:
0x0AB6	0x4770    BX	LR
; end of _intToChar
_SendCharInterrupt:
;uart.c, 146 :: 		void SendCharInterrupt (int ch)  {
; ch start address is: 0 (R0)
; ch end address is: 0 (R0)
; ch start address is: 0 (R0)
;uart.c, 147 :: 		uart_tr = ch;
0x1338	0x4909    LDR	R1, [PC, #36]
0x133A	0x7008    STRB	R0, [R1, #0]
; ch end address is: 0 (R0)
;uart.c, 148 :: 		UART4_CR1 |= (1UL << UART_TX_INTERRUPT);              // Enable intrrupt (TXEIE)
0x133C	0x4909    LDR	R1, [PC, #36]
0x133E	0x6809    LDR	R1, [R1, #0]
0x1340	0xF0410280  ORR	R2, R1, #128
0x1344	0x4907    LDR	R1, [PC, #28]
0x1346	0x600A    STR	R2, [R1, #0]
;uart.c, 149 :: 		Delay_ms(1);
0x1348	0xF64D27BE  MOVW	R7, #55998
0x134C	0xF2C00700  MOVT	R7, #0
L_SendCharInterrupt0:
0x1350	0x1E7F    SUBS	R7, R7, #1
0x1352	0xD1FD    BNE	L_SendCharInterrupt0
0x1354	0xBF00    NOP
0x1356	0xBF00    NOP
0x1358	0xBF00    NOP
0x135A	0xBF00    NOP
0x135C	0xBF00    NOP
;uart.c, 150 :: 		}
L_end_SendCharInterrupt:
0x135E	0x4770    BX	LR
0x1360	0x00E52000  	_uart_tr+0
0x1364	0x4C0C4000  	UART4_CR1+0
; end of _SendCharInterrupt
_clearLetter:
;uart.c, 224 :: 		void clearLetter(){
;uart.c, 226 :: 		for(i = 0; i < 6; letter[i++] = '\0');
; i start address is: 8 (R2)
0x1298	0x2200    MOVS	R2, #0
0x129A	0xB212    SXTH	R2, R2
; i end address is: 8 (R2)
L_clearLetter42:
; i start address is: 8 (R2)
0x129C	0x2A06    CMP	R2, #6
0x129E	0xDA06    BGE	L_clearLetter43
0x12A0	0x4805    LDR	R0, [PC, #20]
0x12A2	0x1881    ADDS	R1, R0, R2
0x12A4	0x2000    MOVS	R0, #0
0x12A6	0x7008    STRB	R0, [R1, #0]
0x12A8	0x1C52    ADDS	R2, R2, #1
0x12AA	0xB212    SXTH	R2, R2
; i end address is: 8 (R2)
0x12AC	0xE7F6    B	L_clearLetter42
L_clearLetter43:
;uart.c, 227 :: 		letter_cnt = 0;
0x12AE	0x2100    MOVS	R1, #0
0x12B0	0x4802    LDR	R0, [PC, #8]
0x12B2	0x8001    STRH	R1, [R0, #0]
;uart.c, 228 :: 		}
L_end_clearLetter:
0x12B4	0x4770    BX	LR
0x12B6	0xBF00    NOP
0x12B8	0x00F02000  	_letter+0
0x12BC	0x00E62000  	_letter_cnt+0
; end of _clearLetter
_fnc:
;uart.c, 252 :: 		void fnc(char DD){
; DD start address is: 0 (R0)
0x1368	0xB082    SUB	SP, SP, #8
0x136A	0xF8CDE000  STR	LR, [SP, #0]
; DD end address is: 0 (R0)
; DD start address is: 0 (R0)
;uart.c, 254 :: 		if(DD == SPACE){
0x136E	0x2823    CMP	R0, #35
0x1370	0xD10E    BNE	L_fnc47
;uart.c, 255 :: 		LCD_CLEAR_SCREEN();
0x1372	0xF88D0004  STRB	R0, [SP, #4]
0x1376	0xF000F923  BL	_LCD_CLEAR_SCREEN+0
0x137A	0xF89D0004  LDRB	R0, [SP, #4]
;uart.c, 256 :: 		LCD_PRINT_CHAR(DD);
; DD end address is: 0 (R0)
0x137E	0xF7FFFDC5  BL	_LCD_PRINT_CHAR+0
;uart.c, 257 :: 		SendCharInterrupt(' ');
0x1382	0x2020    MOVS	R0, #32
0x1384	0xB200    SXTH	R0, R0
0x1386	0xF7FFFFD7  BL	_SendCharInterrupt+0
;uart.c, 258 :: 		clearLetter();
0x138A	0xF7FFFF85  BL	_clearLetter+0
;uart.c, 259 :: 		}
0x138E	0xE015    B	L_fnc48
L_fnc47:
;uart.c, 261 :: 		LCD_PRINT_CHAR(DD);
; DD start address is: 0 (R0)
0x1390	0xF88D0004  STRB	R0, [SP, #4]
0x1394	0xF7FFFDBA  BL	_LCD_PRINT_CHAR+0
0x1398	0xF89D0004  LDRB	R0, [SP, #4]
;uart.c, 263 :: 		letter[letter_cnt++] = DD;
0x139C	0x4909    LDR	R1, [PC, #36]
0x139E	0x880A    LDRH	R2, [R1, #0]
0x13A0	0x4909    LDR	R1, [PC, #36]
0x13A2	0x1889    ADDS	R1, R1, R2
0x13A4	0x7008    STRB	R0, [R1, #0]
; DD end address is: 0 (R0)
0x13A6	0x4907    LDR	R1, [PC, #28]
0x13A8	0x8809    LDRH	R1, [R1, #0]
0x13AA	0x1C4A    ADDS	R2, R1, #1
0x13AC	0x4905    LDR	R1, [PC, #20]
0x13AE	0x800A    STRH	R2, [R1, #0]
;uart.c, 264 :: 		if(letter_cnt == 5)
0x13B0	0x4904    LDR	R1, [PC, #16]
0x13B2	0x8809    LDRH	R1, [R1, #0]
0x13B4	0x2905    CMP	R1, #5
0x13B6	0xD101    BNE	L_fnc49
;uart.c, 265 :: 		translate();
0x13B8	0xF7FFFCF0  BL	_translate+0
L_fnc49:
;uart.c, 266 :: 		}
L_fnc48:
;uart.c, 268 :: 		}
L_end_fnc:
0x13BC	0xF8DDE000  LDR	LR, [SP, #0]
0x13C0	0xB002    ADD	SP, SP, #8
0x13C2	0x4770    BX	LR
0x13C4	0x00E62000  	_letter_cnt+0
0x13C8	0x00F02000  	_letter+0
; end of _fnc
_Button1_Interrupt:
;main.c, 144 :: 		void Button1_Interrupt() iv IVT_INT_EXTI0 {
0x162C	0xB4B0    PUSH	(R4, R5, R7)
0x162E	0xB081    SUB	SP, SP, #4
0x1630	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 146 :: 		if( EXTI_FTSR & (1UL << LEFT_BUTTON_PIN)){         // is Button PE0 pressed
0x1634	0x4830    LDR	R0, [PC, #192]
0x1636	0x6800    LDR	R0, [R0, #0]
0x1638	0xF0000001  AND	R0, R0, #1
0x163C	0xB1A8    CBZ	R0, L_Button1_Interrupt10
;main.c, 147 :: 		LED_11 = 1;
0x163E	0x2101    MOVS	R1, #1
0x1640	0xB249    SXTB	R1, R1
0x1642	0x482E    LDR	R0, [PC, #184]
0x1644	0x6001    STR	R1, [R0, #0]
;main.c, 148 :: 		riseTimeB1 = currentTime;
0x1646	0x482E    LDR	R0, [PC, #184]
0x1648	0x8801    LDRH	R1, [R0, #0]
0x164A	0x482E    LDR	R0, [PC, #184]
0x164C	0x8001    STRH	R1, [R0, #0]
;main.c, 149 :: 		EXTI_FTSR &= ~(1UL << LEFT_BUTTON_PIN);
0x164E	0x482A    LDR	R0, [PC, #168]
0x1650	0x6801    LDR	R1, [R0, #0]
0x1652	0xF06F0001  MVN	R0, #1
0x1656	0x4001    ANDS	R1, R0
0x1658	0x4827    LDR	R0, [PC, #156]
0x165A	0x6001    STR	R1, [R0, #0]
;main.c, 150 :: 		EXTI_RTSR |=   1UL << LEFT_BUTTON_PIN;
0x165C	0x482A    LDR	R0, [PC, #168]
0x165E	0x6800    LDR	R0, [R0, #0]
0x1660	0xF0400101  ORR	R1, R0, #1
0x1664	0x4828    LDR	R0, [PC, #160]
0x1666	0x6001    STR	R1, [R0, #0]
;main.c, 151 :: 		}
0x1668	0xE038    B	L_Button1_Interrupt11
L_Button1_Interrupt10:
;main.c, 152 :: 		else if ( EXTI_RTSR & (1UL << LEFT_BUTTON_PIN)){    // is Button PE0 realesed
0x166A	0x4827    LDR	R0, [PC, #156]
0x166C	0x6800    LDR	R0, [R0, #0]
0x166E	0xF0000001  AND	R0, R0, #1
0x1672	0x2800    CMP	R0, #0
0x1674	0xD032    BEQ	L_Button1_Interrupt12
;main.c, 153 :: 		LED_11 = 0;
0x1676	0x2100    MOVS	R1, #0
0x1678	0xB249    SXTB	R1, R1
0x167A	0x4820    LDR	R0, [PC, #128]
0x167C	0x6001    STR	R1, [R0, #0]
;main.c, 154 :: 		if(letter_cnt == 0) LCD_CLEAR_SCREEN();
0x167E	0x4823    LDR	R0, [PC, #140]
0x1680	0x8800    LDRH	R0, [R0, #0]
0x1682	0xB908    CBNZ	R0, L_Button1_Interrupt13
0x1684	0xF7FFFF9C  BL	_LCD_CLEAR_SCREEN+0
L_Button1_Interrupt13:
;main.c, 155 :: 		fallTimeB1 = currentTime;
0x1688	0x481D    LDR	R0, [PC, #116]
0x168A	0x8801    LDRH	R1, [R0, #0]
0x168C	0x4820    LDR	R0, [PC, #128]
0x168E	0x8001    STRH	R1, [R0, #0]
;main.c, 156 :: 		EXTI_RTSR &= ~(1UL << LEFT_BUTTON_PIN);
0x1690	0x481D    LDR	R0, [PC, #116]
0x1692	0x6801    LDR	R1, [R0, #0]
0x1694	0xF06F0001  MVN	R0, #1
0x1698	0x4001    ANDS	R1, R0
0x169A	0x481B    LDR	R0, [PC, #108]
0x169C	0x6001    STR	R1, [R0, #0]
;main.c, 157 :: 		EXTI_FTSR |=   1UL << LEFT_BUTTON_PIN;
0x169E	0x4816    LDR	R0, [PC, #88]
0x16A0	0x6800    LDR	R0, [R0, #0]
0x16A2	0xF0400101  ORR	R1, R0, #1
0x16A6	0x4814    LDR	R0, [PC, #80]
0x16A8	0x6001    STR	R1, [R0, #0]
;main.c, 159 :: 		canTranslate = 1;
0x16AA	0x2101    MOVS	R1, #1
0x16AC	0xB209    SXTH	R1, R1
0x16AE	0x4819    LDR	R0, [PC, #100]
0x16B0	0x8001    STRH	R1, [R0, #0]
;main.c, 160 :: 		fnc(((fallTimeB1 - riseTimeB1 < dashTime) ? DOT : DASH));
0x16B2	0x4814    LDR	R0, [PC, #80]
0x16B4	0x8801    LDRH	R1, [R0, #0]
0x16B6	0x4816    LDR	R0, [PC, #88]
0x16B8	0x8800    LDRH	R0, [R0, #0]
0x16BA	0x1A41    SUB	R1, R0, R1
0x16BC	0xB289    UXTH	R1, R1
0x16BE	0x4816    LDR	R0, [PC, #88]
0x16C0	0x8800    LDRH	R0, [R0, #0]
0x16C2	0x4281    CMP	R1, R0
0x16C4	0xD201    BCS	L_Button1_Interrupt14
; ?FLOC___Button1_Interrupt?T55 start address is: 0 (R0)
0x16C6	0x202E    MOVS	R0, #46
; ?FLOC___Button1_Interrupt?T55 end address is: 0 (R0)
0x16C8	0xE000    B	L_Button1_Interrupt15
L_Button1_Interrupt14:
; ?FLOC___Button1_Interrupt?T55 start address is: 0 (R0)
0x16CA	0x202D    MOVS	R0, #45
; ?FLOC___Button1_Interrupt?T55 end address is: 0 (R0)
L_Button1_Interrupt15:
; ?FLOC___Button1_Interrupt?T55 start address is: 0 (R0)
; ?FLOC___Button1_Interrupt?T55 end address is: 0 (R0)
0x16CC	0xF7FFFE4C  BL	_fnc+0
;main.c, 162 :: 		spaceTime = 7 * dotTime;
0x16D0	0x4812    LDR	R0, [PC, #72]
0x16D2	0x8801    LDRH	R1, [R0, #0]
0x16D4	0x2007    MOVS	R0, #7
0x16D6	0x4341    MULS	R1, R0, R1
0x16D8	0x4811    LDR	R0, [PC, #68]
0x16DA	0x8001    STRH	R1, [R0, #0]
;main.c, 164 :: 		}
L_Button1_Interrupt12:
L_Button1_Interrupt11:
;main.c, 166 :: 		EXTI_PR  = 0x01;                             // clear interraput    -- Pending bit
0x16DC	0x2101    MOVS	R1, #1
0x16DE	0x4811    LDR	R0, [PC, #68]
0x16E0	0x6001    STR	R1, [R0, #0]
;main.c, 167 :: 		EXTI_IMR |= 1;
0x16E2	0x4811    LDR	R0, [PC, #68]
0x16E4	0x6800    LDR	R0, [R0, #0]
0x16E6	0xF0400101  ORR	R1, R0, #1
0x16EA	0x480F    LDR	R0, [PC, #60]
0x16EC	0x6001    STR	R1, [R0, #0]
;main.c, 168 :: 		}
L_end_Button1_Interrupt:
0x16EE	0xF8DDE000  LDR	LR, [SP, #0]
0x16F2	0xB001    ADD	SP, SP, #4
0x16F4	0xBCB0    POP	(R4, R5, R7)
0x16F6	0x4770    BX	LR
0x16F8	0x3C0C4001  	EXTI_FTSR+0
0x16FC	0x02B04242  	GPIOE_ODR+0
0x1700	0x00002000  	_currentTime+0
0x1704	0x00D42000  	_riseTimeB1+0
0x1708	0x3C084001  	EXTI_RTSR+0
0x170C	0x00E62000  	_letter_cnt+0
0x1710	0x00D62000  	_fallTimeB1+0
0x1714	0x00C82000  	_canTranslate+0
0x1718	0x00D82000  	_dashTime+0
0x171C	0x00CE2000  	_dotTime+0
0x1720	0x00CC2000  	_spaceTime+0
0x1724	0x3C144001  	EXTI_PR+0
0x1728	0x3C004001  	EXTI_IMR+0
; end of _Button1_Interrupt
_Button2_Interrupt:
;main.c, 171 :: 		void Button2_Interrupt() iv IVT_INT_EXTI15_10 {
0x172C	0xB4B0    PUSH	(R4, R5, R7)
0x172E	0xB081    SUB	SP, SP, #4
0x1730	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 173 :: 		if( EXTI_FTSR & (1UL << RIGHT_BUTTON_PIN)){         // is Button PA10 pressed
0x1734	0x482B    LDR	R0, [PC, #172]
0x1736	0x6800    LDR	R0, [R0, #0]
0x1738	0xF4006080  AND	R0, R0, #1024
0x173C	0xB1B0    CBZ	R0, L_Button2_Interrupt16
;main.c, 174 :: 		if(letter_cnt == 0) LCD_CLEAR_SCREEN();
0x173E	0x482A    LDR	R0, [PC, #168]
0x1740	0x8800    LDRH	R0, [R0, #0]
0x1742	0xB908    CBNZ	R0, L_Button2_Interrupt17
0x1744	0xF7FFFF3C  BL	_LCD_CLEAR_SCREEN+0
L_Button2_Interrupt17:
;main.c, 175 :: 		riseTimeB2 = currentTime;
0x1748	0x4828    LDR	R0, [PC, #160]
0x174A	0x8801    LDRH	R1, [R0, #0]
0x174C	0x4828    LDR	R0, [PC, #160]
0x174E	0x8001    STRH	R1, [R0, #0]
;main.c, 176 :: 		EXTI_FTSR &= ~(1UL << RIGHT_BUTTON_PIN);
0x1750	0x4824    LDR	R0, [PC, #144]
0x1752	0x6801    LDR	R1, [R0, #0]
0x1754	0xF46F6080  MVN	R0, #1024
0x1758	0x4001    ANDS	R1, R0
0x175A	0x4822    LDR	R0, [PC, #136]
0x175C	0x6001    STR	R1, [R0, #0]
;main.c, 177 :: 		EXTI_RTSR |= (1UL << RIGHT_BUTTON_PIN);
0x175E	0x4825    LDR	R0, [PC, #148]
0x1760	0x6800    LDR	R0, [R0, #0]
0x1762	0xF4406180  ORR	R1, R0, #1024
0x1766	0x4823    LDR	R0, [PC, #140]
0x1768	0x6001    STR	R1, [R0, #0]
;main.c, 178 :: 		}else if ( EXTI_RTSR & (1UL << RIGHT_BUTTON_PIN)){        // is Button PA10 realesed
0x176A	0xE02B    B	L_Button2_Interrupt18
L_Button2_Interrupt16:
0x176C	0x4821    LDR	R0, [PC, #132]
0x176E	0x6800    LDR	R0, [R0, #0]
0x1770	0xF4006080  AND	R0, R0, #1024
0x1774	0x2800    CMP	R0, #0
0x1776	0xD025    BEQ	L_Button2_Interrupt19
;main.c, 179 :: 		fallTimeB2 = currentTime;
0x1778	0x481C    LDR	R0, [PC, #112]
0x177A	0x8801    LDRH	R1, [R0, #0]
0x177C	0x481E    LDR	R0, [PC, #120]
0x177E	0x8001    STRH	R1, [R0, #0]
;main.c, 180 :: 		EXTI_RTSR &= ~(1UL << RIGHT_BUTTON_PIN);
0x1780	0x481C    LDR	R0, [PC, #112]
0x1782	0x6801    LDR	R1, [R0, #0]
0x1784	0xF46F6080  MVN	R0, #1024
0x1788	0x4001    ANDS	R1, R0
0x178A	0x481A    LDR	R0, [PC, #104]
0x178C	0x6001    STR	R1, [R0, #0]
;main.c, 181 :: 		EXTI_FTSR |= (1  << RIGHT_BUTTON_PIN);
0x178E	0x4815    LDR	R0, [PC, #84]
0x1790	0x6800    LDR	R0, [R0, #0]
0x1792	0xF4406180  ORR	R1, R0, #1024
0x1796	0x4813    LDR	R0, [PC, #76]
0x1798	0x6001    STR	R1, [R0, #0]
;main.c, 183 :: 		if(fallTimeB2 - riseTimeB2 < RESET_TIME){   // DOT
0x179A	0x4815    LDR	R0, [PC, #84]
0x179C	0x8801    LDRH	R1, [R0, #0]
0x179E	0x4816    LDR	R0, [PC, #88]
0x17A0	0x8800    LDRH	R0, [R0, #0]
0x17A2	0x1A40    SUB	R0, R0, R1
0x17A4	0xB280    UXTH	R0, R0
0x17A6	0x28C8    CMP	R0, #200
0x17A8	0xD202    BCS	L_Button2_Interrupt20
;main.c, 184 :: 		ChangeDashTime();
0x17AA	0xF7FFFE0F  BL	_ChangeDashTime+0
;main.c, 185 :: 		}else {                               // DASH
0x17AE	0xE009    B	L_Button2_Interrupt21
L_Button2_Interrupt20:
;main.c, 186 :: 		LCD_CLEAR_SCREEN();
0x17B0	0xF7FFFF06  BL	_LCD_CLEAR_SCREEN+0
;main.c, 187 :: 		LED_11 = LED_22 = 0;
0x17B4	0x2100    MOVS	R1, #0
0x17B6	0xB249    SXTB	R1, R1
0x17B8	0x4810    LDR	R0, [PC, #64]
0x17BA	0x6001    STR	R1, [R0, #0]
0x17BC	0x480F    LDR	R0, [PC, #60]
0x17BE	0x6801    LDR	R1, [R0, #0]
0x17C0	0x480F    LDR	R0, [PC, #60]
0x17C2	0x6001    STR	R1, [R0, #0]
;main.c, 189 :: 		}
L_Button2_Interrupt21:
;main.c, 191 :: 		}
L_Button2_Interrupt19:
L_Button2_Interrupt18:
;main.c, 193 :: 		EXTI_PR = (0x01 << 10);                      // clear interraput
0x17C4	0xF2404100  MOVW	R1, #1024
0x17C8	0x480E    LDR	R0, [PC, #56]
0x17CA	0x6001    STR	R1, [R0, #0]
;main.c, 194 :: 		EXTI_IMR |= (1 << 10);
0x17CC	0x480E    LDR	R0, [PC, #56]
0x17CE	0x6800    LDR	R0, [R0, #0]
0x17D0	0xF4406180  ORR	R1, R0, #1024
0x17D4	0x480C    LDR	R0, [PC, #48]
0x17D6	0x6001    STR	R1, [R0, #0]
;main.c, 195 :: 		}
L_end_Button2_Interrupt:
0x17D8	0xF8DDE000  LDR	LR, [SP, #0]
0x17DC	0xB001    ADD	SP, SP, #4
0x17DE	0xBCB0    POP	(R4, R5, R7)
0x17E0	0x4770    BX	LR
0x17E2	0xBF00    NOP
0x17E4	0x3C0C4001  	EXTI_FTSR+0
0x17E8	0x00E62000  	_letter_cnt+0
0x17EC	0x00002000  	_currentTime+0
0x17F0	0x00DA2000  	_riseTimeB2+0
0x17F4	0x3C084001  	EXTI_RTSR+0
0x17F8	0x00DC2000  	_fallTimeB2+0
0x17FC	0x02BC4242  	GPIOE_ODR+0
0x1800	0x02B04242  	GPIOE_ODR+0
0x1804	0x3C144001  	EXTI_PR+0
0x1808	0x3C004001  	EXTI_IMR+0
; end of _Button2_Interrupt
_ChangeDashTime:
;main.c, 112 :: 		void ChangeDashTime(){
0x13CC	0xB081    SUB	SP, SP, #4
0x13CE	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 113 :: 		LCD_CURSOR(1,9);
0x13D2	0x2109    MOVS	R1, #9
0x13D4	0x2001    MOVS	R0, #1
0x13D6	0xF7FFFD6B  BL	_LCD_CURSOR+0
;main.c, 114 :: 		LCD_PRINT_STRING("SPEED:");
0x13DA	0x4825    LDR	R0, [PC, #148]
0x13DC	0xF7FFFD28  BL	_LCD_PRINT_STRING+0
;main.c, 115 :: 		switch(dashTime){
0x13E0	0xE027    B	L_ChangeDashTime4
;main.c, 116 :: 		case QUAD_SECOND_DASH:
L_ChangeDashTime6:
;main.c, 117 :: 		dotTime = HALF_SECOND_DOT;
0x13E2	0x2102    MOVS	R1, #2
0x13E4	0x4823    LDR	R0, [PC, #140]
0x13E6	0x8001    STRH	R1, [R0, #0]
;main.c, 118 :: 		dashTime = HALF_SECOND_DASH;
0x13E8	0x2106    MOVS	R1, #6
0x13EA	0x4823    LDR	R0, [PC, #140]
0x13EC	0x8001    STRH	R1, [R0, #0]
;main.c, 119 :: 		LCD_PRINT_CHAR('1');
0x13EE	0x2031    MOVS	R0, #49
0x13F0	0xF7FFFD8C  BL	_LCD_PRINT_CHAR+0
;main.c, 120 :: 		break;
0x13F4	0xE02D    B	L_ChangeDashTime5
;main.c, 121 :: 		case HALF_SECOND_DASH:
L_ChangeDashTime7:
;main.c, 122 :: 		dotTime = ONE_SECOND_DOT;
0x13F6	0x2103    MOVS	R1, #3
0x13F8	0x481E    LDR	R0, [PC, #120]
0x13FA	0x8001    STRH	R1, [R0, #0]
;main.c, 123 :: 		dashTime = ONE_SECOND_DASH;
0x13FC	0x2109    MOVS	R1, #9
0x13FE	0x481E    LDR	R0, [PC, #120]
0x1400	0x8001    STRH	R1, [R0, #0]
;main.c, 124 :: 		LCD_PRINT_CHAR('2');
0x1402	0x2032    MOVS	R0, #50
0x1404	0xF7FFFD82  BL	_LCD_PRINT_CHAR+0
;main.c, 125 :: 		break;
0x1408	0xE023    B	L_ChangeDashTime5
;main.c, 126 :: 		case ONE_SECOND_DASH:
L_ChangeDashTime8:
;main.c, 127 :: 		dotTime = TWO_SECOND_DOT;
0x140A	0x2104    MOVS	R1, #4
0x140C	0x4819    LDR	R0, [PC, #100]
0x140E	0x8001    STRH	R1, [R0, #0]
;main.c, 128 :: 		dashTime = TWO_SECOND_DASH;
0x1410	0x210C    MOVS	R1, #12
0x1412	0x4819    LDR	R0, [PC, #100]
0x1414	0x8001    STRH	R1, [R0, #0]
;main.c, 129 :: 		LCD_PRINT_CHAR('3');
0x1416	0x2033    MOVS	R0, #51
0x1418	0xF7FFFD78  BL	_LCD_PRINT_CHAR+0
;main.c, 130 :: 		break;
0x141C	0xE019    B	L_ChangeDashTime5
;main.c, 131 :: 		case TWO_SECOND_DASH:
L_ChangeDashTime9:
;main.c, 132 :: 		dotTime = QUAD_SECOND_DOT;
0x141E	0x2101    MOVS	R1, #1
0x1420	0x4814    LDR	R0, [PC, #80]
0x1422	0x8001    STRH	R1, [R0, #0]
;main.c, 133 :: 		dashTime = QUAD_SECOND_DASH;
0x1424	0x2103    MOVS	R1, #3
0x1426	0x4814    LDR	R0, [PC, #80]
0x1428	0x8001    STRH	R1, [R0, #0]
;main.c, 134 :: 		LCD_PRINT_CHAR('4');
0x142A	0x2034    MOVS	R0, #52
0x142C	0xF7FFFD6E  BL	_LCD_PRINT_CHAR+0
;main.c, 135 :: 		break;
0x1430	0xE00F    B	L_ChangeDashTime5
;main.c, 136 :: 		}
L_ChangeDashTime4:
0x1432	0x4811    LDR	R0, [PC, #68]
0x1434	0x8800    LDRH	R0, [R0, #0]
0x1436	0x2803    CMP	R0, #3
0x1438	0xD0D3    BEQ	L_ChangeDashTime6
0x143A	0x480F    LDR	R0, [PC, #60]
0x143C	0x8800    LDRH	R0, [R0, #0]
0x143E	0x2806    CMP	R0, #6
0x1440	0xD0D9    BEQ	L_ChangeDashTime7
0x1442	0x480D    LDR	R0, [PC, #52]
0x1444	0x8800    LDRH	R0, [R0, #0]
0x1446	0x2809    CMP	R0, #9
0x1448	0xD0DF    BEQ	L_ChangeDashTime8
0x144A	0x480B    LDR	R0, [PC, #44]
0x144C	0x8800    LDRH	R0, [R0, #0]
0x144E	0x280C    CMP	R0, #12
0x1450	0xD0E5    BEQ	L_ChangeDashTime9
L_ChangeDashTime5:
;main.c, 137 :: 		spaceTime = 7*dotTime;
0x1452	0x4808    LDR	R0, [PC, #32]
0x1454	0x8801    LDRH	R1, [R0, #0]
0x1456	0x2007    MOVS	R0, #7
0x1458	0x4341    MULS	R1, R0, R1
0x145A	0x4808    LDR	R0, [PC, #32]
0x145C	0x8001    STRH	R1, [R0, #0]
;main.c, 138 :: 		LCD_CURSOR(0,0);
0x145E	0x2100    MOVS	R1, #0
0x1460	0x2000    MOVS	R0, #0
0x1462	0xF7FFFD25  BL	_LCD_CURSOR+0
;main.c, 139 :: 		}
L_end_ChangeDashTime:
0x1466	0xF8DDE000  LDR	LR, [SP, #0]
0x146A	0xB001    ADD	SP, SP, #4
0x146C	0x4770    BX	LR
0x146E	0xBF00    NOP
0x1470	0x00DE2000  	?lstr37_main+0
0x1474	0x00CE2000  	_dotTime+0
0x1478	0x00D82000  	_dashTime+0
0x147C	0x00CC2000  	_spaceTime+0
; end of _ChangeDashTime
;uart.c,0 :: ?lstr_30_uart [2]
0x023A	0x002D ;?lstr_30_uart+0
; end of ?lstr_30_uart
;main.c,0 :: ?lstr_29_main [4]
0x0AF4	0x002E2E2E ;?lstr_29_main+0
; end of ?lstr_29_main
;uart.c,0 :: ?lstr_15_uart [2]
0x0BBE	0x002E ;?lstr_15_uart+0
; end of ?lstr_15_uart
;uart.c,0 :: ?lstr_4_uart [6]
0x118A	0x2D2E2E2E ;?lstr_4_uart+0
0x118E	0x002D ;?lstr_4_uart+4
; end of ?lstr_4_uart
;main.c,0 :: ?lstr_30_main [2]
0x156E	0x002D ;?lstr_30_main+0
; end of ?lstr_30_main
;main.c,0 :: ?lstr_15_main [2]
0x1576	0x002E ;?lstr_15_main+0
; end of ?lstr_15_main
;main.c,0 :: ?lstr_28_main [4]
0x15F4	0x002E2D2E ;?lstr_28_main+0
; end of ?lstr_28_main
;uart.c,0 :: ?ICSuart_alpha [144]
0x1D30	0x00001E21 ;?ICSuart_alpha+0
0x1D34	0x00001E27 ;?ICSuart_alpha+4
0x1D38	0x00001E1B ;?ICSuart_alpha+8
0x1D3C	0x0000118A ;?ICSuart_alpha+12
0x1D40	0x00001E15 ;?ICSuart_alpha+16
0x1D44	0x00001E3F ;?ICSuart_alpha+20
0x1D48	0x00001E45 ;?ICSuart_alpha+24
0x1D4C	0x00001E39 ;?ICSuart_alpha+28
0x1D50	0x00001E2D ;?ICSuart_alpha+32
0x1D54	0x00001E33 ;?ICSuart_alpha+36
0x1D58	0x00001F3A ;?ICSuart_alpha+40
0x1D5C	0x00001EA5 ;?ICSuart_alpha+44
0x1D60	0x00001E8C ;?ICSuart_alpha+48
0x1D64	0x00001F27 ;?ICSuart_alpha+52
0x1D68	0x00000BBE ;?ICSuart_alpha+56
0x1D6C	0x00001E87 ;?ICSuart_alpha+60
0x1D70	0x00001F23 ;?ICSuart_alpha+64
0x1D74	0x00001E96 ;?ICSuart_alpha+68
0x1D78	0x00001F49 ;?ICSuart_alpha+72
0x1D7C	0x00001E91 ;?ICSuart_alpha+76
0x1D80	0x00001F07 ;?ICSuart_alpha+80
0x1D84	0x00001EC8 ;?ICSuart_alpha+84
0x1D88	0x00001F4C ;?ICSuart_alpha+88
0x1D8C	0x00001F46 ;?ICSuart_alpha+92
0x1D90	0x00001F03 ;?ICSuart_alpha+96
0x1D94	0x00001EC3 ;?ICSuart_alpha+100
0x1D98	0x00001ED2 ;?ICSuart_alpha+104
0x1D9C	0x00001F17 ;?ICSuart_alpha+108
0x1DA0	0x00001F1B ;?ICSuart_alpha+112
0x1DA4	0x0000023A ;?ICSuart_alpha+116
0x1DA8	0x00001F0B ;?ICSuart_alpha+120
0x1DAC	0x00001ECD ;?ICSuart_alpha+124
0x1DB0	0x00001F0F ;?ICSuart_alpha+128
0x1DB4	0x00001EB4 ;?ICSuart_alpha+132
0x1DB8	0x00001EAF ;?ICSuart_alpha+136
0x1DBC	0x00001EBE ;?ICSuart_alpha+140
; end of ?ICSuart_alpha
;main.c,0 :: ?ICS_canTranslate [2]
0x1DC0	0x0000 ;?ICS_canTranslate+0
; end of ?ICS_canTranslate
;main.c,0 :: ?ICS_confirmTime [2]
0x1DC2	0x0000 ;?ICS_confirmTime+0
; end of ?ICS_confirmTime
;main.c,0 :: ?ICS_spaceTime [2]
0x1DC4	0x000E ;?ICS_spaceTime+0
; end of ?ICS_spaceTime
;main.c,0 :: ?ICS_dotTime [2]
0x1DC6	0x0002 ;?ICS_dotTime+0
; end of ?ICS_dotTime
;uart.c,0 :: ?ICS?lstr40_uart [4]
0x1DC8	0x00203D20 ;?ICS?lstr40_uart+0
; end of ?ICS?lstr40_uart
;main.c,0 :: ?ICS_riseTimeB1 [2]
0x1DCC	0x0000 ;?ICS_riseTimeB1+0
; end of ?ICS_riseTimeB1
;main.c,0 :: ?ICS_fallTimeB1 [2]
0x1DCE	0x0000 ;?ICS_fallTimeB1+0
; end of ?ICS_fallTimeB1
;main.c,0 :: ?ICS_dashTime [2]
0x1DD0	0x0006 ;?ICS_dashTime+0
; end of ?ICS_dashTime
;main.c,0 :: ?ICS_riseTimeB2 [2]
0x1DD2	0x0000 ;?ICS_riseTimeB2+0
; end of ?ICS_riseTimeB2
;main.c,0 :: ?ICS_fallTimeB2 [2]
0x1DD4	0x0000 ;?ICS_fallTimeB2+0
; end of ?ICS_fallTimeB2
;main.c,0 :: ?ICS?lstr37_main [7]
0x1DD6	0x45455053 ;?ICS?lstr37_main+0
0x1DDA	0x003A44 ;?ICS?lstr37_main+4
; end of ?ICS?lstr37_main
;main.c,0 :: ?ICS_currentTime [2]
0x1DDE	0x0000 ;?ICS_currentTime+0
; end of ?ICS_currentTime
;lcd.c,0 :: ?ICS_cursor_pos [2]
0x1DE0	0x0000 ;?ICS_cursor_pos+0
; end of ?ICS_cursor_pos
;__Lib_USB_32F4xx.c,0 :: ?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb [44]
0x1DE2	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+0
0x1DE6	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+4
0x1DEA	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+8
0x1DEE	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+12
0x1DF2	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+16
0x1DF6	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+20
0x1DFA	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+24
0x1DFE	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+28
0x1E02	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+32
0x1E06	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+36
0x1E0A	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+40
; end of ?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb
;,0 :: _initBlock_22 [126]
; Containing: ?ICS?lstr38_main [5]
;             ?ICS?lstr37_uart [2]
;             ?lstr_5_uart [6]
;             ?lstr_3_uart [6]
;             ?lstr_1_uart [6]
;             ?lstr_2_uart [6]
;             ?lstr_9_uart [6]
;             ?lstr_10_uart [6]
;             ?lstr_8_uart [6]
;             ?lstr_6_uart [6]
;             ?lstr_7_uart [6]
;             ?lstr_7_main [6]
;             ?lstr_6_main [6]
;             ?lstr_8_main [6]
;             ?lstr_10_main [6]
;             ?lstr_9_main [6]
;             ?lstr_2_main [6]
;             ?lstr_1_main [6]
;             ?lstr_3_main [6]
;             ?lstr_5_main [6]
;             ?lstr_4_main [6]
;             ?lstr_16_uart [5]
0x1E0E	0x203E2D20 ;_initBlock_22+0 : ?ICS?lstr38_main at 0x1E0E
0x1E12	0x2E002100 ;_initBlock_22+4 : ?ICS?lstr37_uart at 0x1E13 : ?lstr_5_uart at 0x1E15
0x1E16	0x2D2E2E2E ;_initBlock_22+8
0x1E1A	0x2D2E2E00 ;_initBlock_22+12 : ?lstr_3_uart at 0x1E1B
0x1E1E	0x2D002D2D ;_initBlock_22+16 : ?lstr_1_uart at 0x1E21
0x1E22	0x2D2D2D2D ;_initBlock_22+20
0x1E26	0x2D2D2E00 ;_initBlock_22+24 : ?lstr_2_uart at 0x1E27
0x1E2A	0x2D002D2D ;_initBlock_22+28 : ?lstr_9_uart at 0x1E2D
0x1E2E	0x2E2E2D2D ;_initBlock_22+32
0x1E32	0x2D2D2D00 ;_initBlock_22+36 : ?lstr_10_uart at 0x1E33
0x1E36	0x2D002E2D ;_initBlock_22+40 : ?lstr_8_uart at 0x1E39
0x1E3A	0x2E2E2E2D ;_initBlock_22+44
0x1E3E	0x2E2E2E00 ;_initBlock_22+48 : ?lstr_6_uart at 0x1E3F
0x1E42	0x2D002E2E ;_initBlock_22+52 : ?lstr_7_uart at 0x1E45
0x1E46	0x2E2E2E2E ;_initBlock_22+56
0x1E4A	0x2E2E2D00 ;_initBlock_22+60 : ?lstr_7_main at 0x1E4B
0x1E4E	0x2E002E2E ;_initBlock_22+64 : ?lstr_6_main at 0x1E51
0x1E52	0x2E2E2E2E ;_initBlock_22+68
0x1E56	0x2E2D2D00 ;_initBlock_22+72 : ?lstr_8_main at 0x1E57
0x1E5A	0x2D002E2E ;_initBlock_22+76 : ?lstr_10_main at 0x1E5D
0x1E5E	0x2E2D2D2D ;_initBlock_22+80
0x1E62	0x2D2D2D00 ;_initBlock_22+84 : ?lstr_9_main at 0x1E63
0x1E66	0x2E002E2E ;_initBlock_22+88 : ?lstr_2_main at 0x1E69
0x1E6A	0x2D2D2D2D ;_initBlock_22+92
0x1E6E	0x2D2D2D00 ;_initBlock_22+96 : ?lstr_1_main at 0x1E6F
0x1E72	0x2E002D2D ;_initBlock_22+100 : ?lstr_3_main at 0x1E75
0x1E76	0x2D2D2D2E ;_initBlock_22+104
0x1E7A	0x2E2E2E00 ;_initBlock_22+108 : ?lstr_5_main at 0x1E7B
0x1E7E	0x2E002D2E ;_initBlock_22+112 : ?lstr_4_main at 0x1E81
0x1E82	0x2D2D2E2E ;_initBlock_22+116
0x1E86	0x2D2E2E00 ;_initBlock_22+120 : ?lstr_16_uart at 0x1E87
0x1E8A	0x002E ;_initBlock_22+124
; end of _initBlock_22
;,0 :: _initBlock_23 [10]
; Containing: ?lstr_13_uart [5]
;             ?lstr_20_uart [5]
0x1E8C	0x2E2D2E2D ;_initBlock_23+0 : ?lstr_13_uart at 0x1E8C
0x1E90	0x2D2D2E00 ;_initBlock_23+4 : ?lstr_20_uart at 0x1E91
0x1E94	0x002D ;_initBlock_23+8
; end of _initBlock_23
;,0 :: _initBlock_24 [10]
; Containing: ?lstr_18_uart [5]
;             ?lstr_18_main [5]
0x1E96	0x2E2E2E2E ;_initBlock_24+0 : ?lstr_18_uart at 0x1E96
0x1E9A	0x2E2E2E00 ;_initBlock_24+4 : ?lstr_18_main at 0x1E9B
0x1E9E	0x002E ;_initBlock_24+8
; end of _initBlock_24
;,0 :: _initBlock_25 [10]
; Containing: ?lstr_20_main [5]
;             ?lstr_12_uart [5]
0x1EA0	0x2D2D2D2E ;_initBlock_25+0 : ?lstr_20_main at 0x1EA0
0x1EA4	0x2E2E2D00 ;_initBlock_25+4 : ?lstr_12_uart at 0x1EA5
0x1EA8	0x002E ;_initBlock_25+8
; end of _initBlock_25
;,0 :: _initBlock_26 [10]
; Containing: ?lstr_16_main [5]
;             ?lstr_35_uart [5]
0x1EAA	0x2E2D2E2E ;_initBlock_26+0 : ?lstr_16_main at 0x1EAA
0x1EAE	0x2D2E2D00 ;_initBlock_26+4 : ?lstr_35_uart at 0x1EAF
0x1EB2	0x002D ;_initBlock_26+8
; end of _initBlock_26
;,0 :: _initBlock_27 [10]
; Containing: ?lstr_34_uart [5]
;             ?lstr_13_main [5]
0x1EB4	0x2D2E2E2D ;_initBlock_27+0 : ?lstr_34_uart at 0x1EB4
0x1EB8	0x2D2E2D00 ;_initBlock_27+4 : ?lstr_13_main at 0x1EB9
0x1EBC	0x002E ;_initBlock_27+8
; end of _initBlock_27
;,0 :: _initBlock_28 [10]
; Containing: ?lstr_36_uart [5]
;             ?lstr_26_uart [5]
0x1EBE	0x2E2E2D2D ;_initBlock_28+0 : ?lstr_36_uart at 0x1EBE
0x1EC2	0x2D2D2E00 ;_initBlock_28+4 : ?lstr_26_uart at 0x1EC3
0x1EC6	0x002E ;_initBlock_28+8
; end of _initBlock_28
;,0 :: _initBlock_29 [10]
; Containing: ?lstr_22_uart [5]
;             ?lstr_32_uart [5]
0x1EC8	0x2E2E2D2E ;_initBlock_29+0 : ?lstr_22_uart at 0x1EC8
0x1ECC	0x2E2E2E00 ;_initBlock_29+4 : ?lstr_32_uart at 0x1ECD
0x1ED0	0x002D ;_initBlock_29+8
; end of _initBlock_29
;,0 :: _initBlock_30 [10]
; Containing: ?lstr_27_uart [5]
;             ?lstr_22_main [5]
0x1ED2	0x2D2E2D2D ;_initBlock_30+0 : ?lstr_27_uart at 0x1ED2
0x1ED6	0x2E2D2E00 ;_initBlock_30+4 : ?lstr_22_main at 0x1ED7
0x1EDA	0x002E ;_initBlock_30+8
; end of _initBlock_30
;,0 :: _initBlock_31 [10]
; Containing: ?lstr_27_main [5]
;             ?lstr_36_main [5]
0x1EDC	0x2D2E2D2D ;_initBlock_31+0 : ?lstr_27_main at 0x1EDC
0x1EE0	0x2E2D2D00 ;_initBlock_31+4 : ?lstr_36_main at 0x1EE1
0x1EE4	0x002E ;_initBlock_31+8
; end of _initBlock_31
;,0 :: _initBlock_32 [10]
; Containing: ?lstr_35_main [5]
;             ?lstr_32_main [5]
0x1EE6	0x2D2D2E2D ;_initBlock_32+0 : ?lstr_35_main at 0x1EE6
0x1EEA	0x2E2E2E00 ;_initBlock_32+4 : ?lstr_32_main at 0x1EEB
0x1EEE	0x002D ;_initBlock_32+8
; end of _initBlock_32
;,0 :: _initBlock_33 [10]
; Containing: ?lstr_34_main [5]
;             ?lstr_26_main [5]
0x1EF0	0x2D2E2E2D ;_initBlock_33+0 : ?lstr_34_main at 0x1EF0
0x1EF4	0x2D2D2E00 ;_initBlock_33+4 : ?lstr_26_main at 0x1EF5
0x1EF8	0x002E ;_initBlock_33+8
; end of _initBlock_33
;,0 :: _initBlock_34 [64]
; Containing: ?lstr_12_main [5]
;             ?lstr_14_main [4]
;             ?lstr_25_uart [4]
;             ?lstr_21_uart [4]
;             ?lstr_31_uart [4]
;             ?lstr_33_uart [4]
;             ?lstr_25_main [4]
;             ?lstr_28_uart [4]
;             ?lstr_29_uart [4]
;             ?lstr_33_main [4]
;             ?lstr_17_uart [4]
;             ?lstr_14_uart [4]
;             ?lstr_21_main [4]
;             ?lstr_17_main [4]
;             ?lstr_31_main [4]
;             ?lstr_24_main [3]
0x1EFA	0x2E2E2E2D ;_initBlock_34+0 : ?lstr_12_main at 0x1EFA
0x1EFE	0x2E2E2D00 ;_initBlock_34+4 : ?lstr_14_main at 0x1EFF
0x1F02	0x2D2D2D00 ;_initBlock_34+8 : ?lstr_25_uart at 0x1F03
0x1F06	0x2D2E2D00 ;_initBlock_34+12 : ?lstr_21_uart at 0x1F07
0x1F0A	0x2D2E2E00 ;_initBlock_34+16 : ?lstr_31_uart at 0x1F0B
0x1F0E	0x2D2D2E00 ;_initBlock_34+20 : ?lstr_33_uart at 0x1F0F
0x1F12	0x2D2D2D00 ;_initBlock_34+24 : ?lstr_25_main at 0x1F13
0x1F16	0x2E2D2E00 ;_initBlock_34+28 : ?lstr_28_uart at 0x1F17
0x1F1A	0x2E2E2E00 ;_initBlock_34+32 : ?lstr_29_uart at 0x1F1B
0x1F1E	0x2D2D2E00 ;_initBlock_34+36 : ?lstr_33_main at 0x1F1F
0x1F22	0x2E2D2D00 ;_initBlock_34+40 : ?lstr_17_uart at 0x1F23
0x1F26	0x2E2E2D00 ;_initBlock_34+44 : ?lstr_14_uart at 0x1F27
0x1F2A	0x2D2E2D00 ;_initBlock_34+48 : ?lstr_21_main at 0x1F2B
0x1F2E	0x2E2D2D00 ;_initBlock_34+52 : ?lstr_17_main at 0x1F2F
0x1F32	0x2D2E2E00 ;_initBlock_34+56 : ?lstr_31_main at 0x1F33
0x1F36	0x002E2D00 ;_initBlock_34+60 : ?lstr_24_main at 0x1F37
; end of _initBlock_34
;,0 :: _initBlock_35 [6]
; Containing: ?lstr_11_uart [3]
;             ?lstr_19_main [3]
0x1F3A	0x2E002D2E ;_initBlock_35+0 : ?lstr_11_uart at 0x1F3A : ?lstr_19_main at 0x1F3D
0x1F3E	0x002E ;_initBlock_35+4
; end of _initBlock_35
;,0 :: _initBlock_36 [6]
; Containing: ?lstr_11_main [3]
;             ?lstr_23_main [3]
0x1F40	0x2D002D2E ;_initBlock_36+0 : ?lstr_11_main at 0x1F40 : ?lstr_23_main at 0x1F43
0x1F44	0x002D ;_initBlock_36+4
; end of _initBlock_36
;,0 :: _initBlock_37 [6]
; Containing: ?lstr_24_uart [3]
;             ?lstr_19_uart [3]
0x1F46	0x2E002E2D ;_initBlock_37+0 : ?lstr_24_uart at 0x1F46 : ?lstr_19_uart at 0x1F49
0x1F4A	0x002E ;_initBlock_37+4
; end of _initBlock_37
;uart.c,0 :: ?lstr_23_uart [3]
0x1F4C	0x002D2D ;?lstr_23_uart+0
; end of ?lstr_23_uart
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188      [20]    _set_lcd_d6
0x019C      [20]    _clear_lcd_d6
0x01B0      [20]    _set_lcd_d5
0x01C4      [20]    _set_lcd_en
0x01D8      [20]    _set_lcd_d7
0x01EC      [20]    _clear_lcd_d7
0x0200      [20]    _clear_lcd_en
0x0214      [38]    _strcmp
0x023C      [20]    _set_lcd_rs
0x0250      [20]    _clear_lcd_d5
0x0264      [20]    _set_lcd_d4
0x0278      [20]    _clear_lcd_d4
0x028C    [1664]    _init_GPIO_Pin
0x090C     [120]    _NVIC_IntEnable
0x0984     [212]    _init_UART_pins
0x0A58      [64]    _findLetter
0x0A98      [32]    _intToChar
0x0AB8      [40]    _strcpy
0x0AE0      [20]    _clear_lcd_rs
0x0AF8     [198]    _lcd_data_line_write
0x0BC0      [48]    _lcd_Data_Write
0x0BF0      [60]    _init_UART4_Register
0x0C2C     [368]    _lcd_gpio_init
0x0D9C     [148]    _translate
0x0E30      [32]    _LCD_PRINT_STRING
0x0E50      [96]    _LED_char_translate
0x0EB0      [92]    _LCD_CURSOR
0x0F0C      [72]    _LCD_PRINT_CHAR
0x0F54      [72]    _charToInt
0x0F9C     [204]    _init_Buttons
0x1068     [144]    _init_LEDs
0x10F8     [120]    _init_UART
0x1170      [26]    _lcd_Control_Write
0x1190     [264]    _init_Lcd
0x1298      [40]    _clearLetter
0x12C0     [120]    _init_Timer2
0x1338      [48]    _SendCharInterrupt
0x1368     [100]    _fnc
0x13CC     [180]    _ChangeDashTime
0x1480      [32]    _LED_string_translate
0x14A0      [72]    _convert
0x14E8      [76]    __Lib_System_4XX_SystemClockSetDefault
0x1534      [58]    ___FillZeros
0x1570       [6]    _doSomething
0x1578      [52]    _init_all
0x15AC      [20]    ___CC2DW
0x15C0      [52]    _LCD_CLEAR_SCREEN
0x15F8      [52]    _main
0x162C     [256]    _Button1_Interrupt
0x172C     [224]    _Button2_Interrupt
0x180C       [8]    ___GenExcept
0x1814      [42]    ___EnableFPU
0x1840     [212]    _UART_Interrupt
0x1914     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x1C74      [36]    __Lib_System_4XX_InitialSetUpFosc
0x1C98     [152]    _Timer2_Interrupt
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [4]    FARG_tanh_x
0x0000       [4]    FARG_floor_x
0x0000       [4]    FARG_fabs_d
0x0000       [4]    FARG_ceil_x
0x0000       [4]    FARG_frexp_value
0x0000       [4]    FARG_atan_f
0x0000       [4]    FARG_asin_x
0x0000       [4]    FARG_sqrt_x
0x0000       [4]    FARG_acos_x
0x0000       [4]    FARG_atan2_y
0x0000       [4]    FARG_modf_val
0x0000       [4]    FARG_ldexp_value
0x0000       [4]    FARG___Lib_CMath_eval_poly_x
0x0000       [4]    FARG_Q15_Ftoi_f
0x0000       [4]    FARG_Q31_Ftoi_f
0x0000       [4]    FARG_exp_x
0x0000       [4]    FARG_log_x
0x0000       [4]    FARG_tan_x
0x0000       [4]    FARG_cos_f
0x0000       [4]    FARG_sin_f
0x0000       [4]    FARG_cosh_x
0x0000       [4]    FARG_sinh_x
0x0000       [4]    FARG_log10_x
0x0000       [4]    FARG_pow_x
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x0000       [4]    FARG_FloatToStr_fnum
0x0004       [4]    FARG_atan2_x
0x0004       [4]    FARG_pow_y
0x20000000       [2]    _currentTime
0x20000002       [2]    _cursor_pos
0x20000004      [44]    __Lib_USB_32F4xx_USBD_DCD_INT_cb
0x20000030       [5]    ?lstr38_main
0x20000035       [2]    ?lstr37_uart
0x20000037       [1]    _uart_rd
0x20000038     [144]    uart_alpha
0x200000C8       [2]    _canTranslate
0x200000CA       [2]    _confirmTime
0x200000CC       [2]    _spaceTime
0x200000CE       [2]    _dotTime
0x200000D0       [4]    ?lstr40_uart
0x200000D4       [2]    _riseTimeB1
0x200000D6       [2]    _fallTimeB1
0x200000D8       [2]    _dashTime
0x200000DA       [2]    _riseTimeB2
0x200000DC       [2]    _fallTimeB2
0x200000DE       [7]    ?lstr37_main
0x200000E5       [1]    _uart_tr
0x200000E6       [2]    _letter_cnt
0x200000E8       [4]    ___System_CLOCK_IN_KHZ
0x200000EC       [4]    __VOLTAGE_RANGE
0x200000F0       [6]    _letter
0x200000F6     [600]    _letters
0x2000034E       [2]    _letters_cnt
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x023A       [2]    ?lstr_30_uart
0x0AF4       [4]    ?lstr_29_main
0x0BBE       [2]    ?lstr_15_uart
0x118A       [6]    ?lstr_4_uart
0x156E       [2]    ?lstr_30_main
0x1576       [2]    ?lstr_15_main
0x15F4       [4]    ?lstr_28_main
0x1D30     [144]    ?ICSuart_alpha
0x1DC0       [2]    ?ICS_canTranslate
0x1DC2       [2]    ?ICS_confirmTime
0x1DC4       [2]    ?ICS_spaceTime
0x1DC6       [2]    ?ICS_dotTime
0x1DC8       [4]    ?ICS?lstr40_uart
0x1DCC       [2]    ?ICS_riseTimeB1
0x1DCE       [2]    ?ICS_fallTimeB1
0x1DD0       [2]    ?ICS_dashTime
0x1DD2       [2]    ?ICS_riseTimeB2
0x1DD4       [2]    ?ICS_fallTimeB2
0x1DD6       [7]    ?ICS?lstr37_main
0x1DDE       [2]    ?ICS_currentTime
0x1DE0       [2]    ?ICS_cursor_pos
0x1DE2      [44]    ?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb
0x1E0E       [5]    ?ICS?lstr38_main
0x1E13       [2]    ?ICS?lstr37_uart
0x1E15       [6]    ?lstr_5_uart
0x1E1B       [6]    ?lstr_3_uart
0x1E21       [6]    ?lstr_1_uart
0x1E27       [6]    ?lstr_2_uart
0x1E2D       [6]    ?lstr_9_uart
0x1E33       [6]    ?lstr_10_uart
0x1E39       [6]    ?lstr_8_uart
0x1E3F       [6]    ?lstr_6_uart
0x1E45       [6]    ?lstr_7_uart
0x1E4B       [6]    ?lstr_7_main
0x1E51       [6]    ?lstr_6_main
0x1E57       [6]    ?lstr_8_main
0x1E5D       [6]    ?lstr_10_main
0x1E63       [6]    ?lstr_9_main
0x1E69       [6]    ?lstr_2_main
0x1E6F       [6]    ?lstr_1_main
0x1E75       [6]    ?lstr_3_main
0x1E7B       [6]    ?lstr_5_main
0x1E81       [6]    ?lstr_4_main
0x1E87       [5]    ?lstr_16_uart
0x1E8C       [5]    ?lstr_13_uart
0x1E91       [5]    ?lstr_20_uart
0x1E96       [5]    ?lstr_18_uart
0x1E9B       [5]    ?lstr_18_main
0x1EA0       [5]    ?lstr_20_main
0x1EA5       [5]    ?lstr_12_uart
0x1EAA       [5]    ?lstr_16_main
0x1EAF       [5]    ?lstr_35_uart
0x1EB4       [5]    ?lstr_34_uart
0x1EB9       [5]    ?lstr_13_main
0x1EBE       [5]    ?lstr_36_uart
0x1EC3       [5]    ?lstr_26_uart
0x1EC8       [5]    ?lstr_22_uart
0x1ECD       [5]    ?lstr_32_uart
0x1ED2       [5]    ?lstr_27_uart
0x1ED7       [5]    ?lstr_22_main
0x1EDC       [5]    ?lstr_27_main
0x1EE1       [5]    ?lstr_36_main
0x1EE6       [5]    ?lstr_35_main
0x1EEB       [5]    ?lstr_32_main
0x1EF0       [5]    ?lstr_34_main
0x1EF5       [5]    ?lstr_26_main
0x1EFA       [5]    ?lstr_12_main
0x1EFF       [4]    ?lstr_14_main
0x1F03       [4]    ?lstr_25_uart
0x1F07       [4]    ?lstr_21_uart
0x1F0B       [4]    ?lstr_31_uart
0x1F0F       [4]    ?lstr_33_uart
0x1F13       [4]    ?lstr_25_main
0x1F17       [4]    ?lstr_28_uart
0x1F1B       [4]    ?lstr_29_uart
0x1F1F       [4]    ?lstr_33_main
0x1F23       [4]    ?lstr_17_uart
0x1F27       [4]    ?lstr_14_uart
0x1F2B       [4]    ?lstr_21_main
0x1F2F       [4]    ?lstr_17_main
0x1F33       [4]    ?lstr_31_main
0x1F37       [3]    ?lstr_24_main
0x1F3A       [3]    ?lstr_11_uart
0x1F3D       [3]    ?lstr_19_main
0x1F40       [3]    ?lstr_11_main
0x1F43       [3]    ?lstr_23_main
0x1F46       [3]    ?lstr_24_uart
0x1F49       [3]    ?lstr_19_uart
0x1F4C       [3]    ?lstr_23_uart
